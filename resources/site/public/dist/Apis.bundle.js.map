{"version":3,"sources":["webpack:///./source/src/app/components/Apis/Details/ApiContext.jsx","webpack:///./source/src/app/components/Apis/Listing/StarRatingBar.jsx","webpack:///./source/src/app/components/Apis/Listing/Background.jsx","webpack:///./source/src/app/components/Apis/Listing/ImageGenerator.jsx","webpack:///./source/src/app/components/Apis/Details/StarRatingSummary.jsx","webpack:///./source/src/app/components/Apis/Listing/ApiThumb.jsx","webpack:///./source/src/app/components/Apis/Listing/ApiTagThumb.jsx","webpack:///./source/src/app/components/Apis/Listing/TagCloudListingTags.jsx","webpack:///./source/src/app/components/Apis/Listing/TagCloudListing.jsx","webpack:///./source/src/app/components/Shared/AppsAndKeys/SubscribeToApi.jsx","webpack:///./source/src/app/components/Apis/Listing/ApiBreadcrumbs.jsx","webpack:///./source/src/app/components/Shared/withSettingsContext.jsx","webpack:///./source/src/app/components/Apis/Listing/DocThumb.jsx","webpack:///./source/src/app/components/Apis/Listing/ApiTableView.jsx","webpack:///./source/src/app/components/Apis/Listing/APICategoryThumb.jsx","webpack:///./source/src/app/components/Apis/Listing/CategoryListingCategories.jsx","webpack:///./source/src/app/components/Apis/Listing/ApiTagCloud.jsx","webpack:///./source/src/app/components/Apis/Listing/RecommendedApiThumb.jsx","webpack:///./source/src/app/components/Apis/Listing/Recommendations.jsx","webpack:///./source/src/app/components/Apis/Listing/CommonListing.jsx","webpack:///./source/src/app/components/Apis/Details/Environments.jsx","webpack:///./source/src/app/components/Apis/Details/Labels.jsx","webpack:///./source/src/app/components/Apis/Details/InfoBar.jsx","webpack:///./source/src/app/components/Apis/Details/Credentials/Wizard/ButtonPanel.jsx","webpack:///./source/src/app/components/Apis/Details/Credentials/Wizard/CreateAppStep.jsx","webpack:///./source/src/app/components/Apis/Details/Credentials/Wizard/SubscribeToAppStep.jsx","webpack:///./source/src/app/components/Apis/Details/Credentials/Wizard/GenerateKeysStep.jsx","webpack:///./source/src/app/components/Apis/Details/Credentials/Wizard/GenerateAccessTokenStep.jsx","webpack:///./source/src/app/components/Apis/Details/Credentials/Wizard/CopyAccessTokenStep.jsx","webpack:///./source/src/app/components/Apis/Details/Credentials/Wizard/Wizard.jsx","webpack:///./override/data/MonetizationClient.js","webpack:///./override/data/MonetizationClientFactory.js","webpack:///./override/data/Monetization.js","webpack:///./override/CustomComponents/CheckoutSuccessPage.jsx","webpack:///./override/CustomComponents/PaymentDetailsBase.jsx","webpack:///./override/CustomComponents/PaymentDetails.jsx","webpack:///./source/src/app/components/Apis/Details/index.jsx","webpack:///./source/src/app/components/Apis/Apis.jsx"],"names":["ApiContext","React","createContext","active","handleMenuSelect","api","applications","subscribedApplications","applicationsAvailable","updateSubscriptionData","StarRatingBar","Component","constructor","props","super","this","state","avgRating","userRating","count","total","getApiRating","bind","removeUserRating","doRate","componentDidUpdate","prevProps","ratingUpdate","componentDidMount","apiId","setRatingUpdate","user","AuthManager","getUser","Api","getRatingFromUser","then","response","setState","body","pagination","rateIndex","ratingInfo","rating","addRating","catch","error","Alert","removeRatingOfUser","render","classes","isEditable","showSummary","apiRating","apiRatingNumber","parseFloat","Fragment","reviewCount","returnCount","className","map","i","key","starRate","noStarRate","onClick","removeRating","name","value","precision","readOnly","defaultProps","propTypes","PropTypes","shape","isRequired","theme","string","bool","oneOfType","number","func","withStyles","fontSize","color","custom","infoBar","starColor","palette","grey","A200","display","justifyContent","alignItems","cursor","withTheme","aHexToOpacity","aHex","substring","getColorWithoutAlpha","Background","colorPair","width","height","thumbnailBoxChild","rects","j","sub","toString","push","fill","fillOpacity","x","y","primeColor","prime","svgImage","objectFit","ImageGenerator","PureComponent","fixedIcon","category","backgroundIndex","randomBackgroundIndex","IconElement","str","colorPairs","thumbnail","backgrounds","type","document","icon","MaterialIcons","categories","icons","length","randomIconIndex","charCodeAt","id","iconWrapper","style","Icon","position","right","getContrastText","background","ratingSummary","variant","gutterBottom","align","defaultMessage","windowURL","window","URL","webkitURL","ApiThumb","selectedIcon","imageObj","isHover","imageLoaded","toggleMouseOver","getAPIThumbnail","data","headers","iconJson","JSON","parse","size","url","createObjectURL","finally","componentWillUnmount","revokeObjectURL","getPathPrefix","event","path","isMonetizationEnabled","context","detailsLink","customWidth","customHeight","showInfo","social","showRating","version","provider","businessInformation","businessOwner","trim","lifeCycleStatus","status","imageWidth","imageHeight","defaultImage","defaultApiImage","ImageView","src","alt","media","class","onMouseOver","onFocus","onMouseOut","onBlur","raised","classNames","card","textblock","monetizationLabel","to","suppressLinkStyles","root","apiDetails","textWrapper","thumbHeader","handleRedirectToAPIOverview","title","row","thumbBy","thumbInfo","thumbLeft","thumbRight","contextBox","thumbLeftAction","ratingWrapper","chipWrapper","transportType","label","undefined","apiType","contextType","margin","spacing","maxWidth","transition","padding","contentBackgroundColor","textDecoration","text","disabled","thumbContent","alignSelf","flex","whiteSpace","overflow","textOverflow","parseInt","lineHeight","textAlign","thumbWrapper","paddingTop","marginRight","deleteIcon","secondary","imageWrapper","iconColor","imageOverlap","bottom","marginTop","ApiTagThumb","tag","mainPage","tagLink","tagWise","image","split","app","Typography","ListItem","button","ListItemIcon","ListItemText","primary","backgroundColor","paper","tagCloud","leftMenu","useStyles","makeStyles","mainTitle","mainTitleWrapper","flexGrow","listContentWrapper","linkTextWrapper","main","tagWiseThumbWrapper","filterTitle","fontWeight","paddingLeft","titleBackground","TagCloudListingTags","useTheme","showAllApis","useHistory","allTags","apisTagCloudGroup","filter","item","List","component","aria-label","Object","keys","Divider","appBar","borderBottom","mainIconWrapper","paddingRight","content","iconDefault","TagCloudListing","setAllTags","useState","useEffect","API","getAllTags","list","console","log","strokeColorMain","strokeColor","subscribeToApi","appSelected","setAppSelected","policySelected","setPolicySelected","applicationsList","setApplicationsList","throttlingPolicyList","subscriptionRequest","updateSubscriptionRequest","renderSmall","tierName","applicationId","handleChange","field","newRequest","target","throttlingPolicy","container","subscribeRoot","subscribeRootSmall","xs","md","FormControl","smallDisplay","shrink","htmlFor","quotaHelp","onChange","e","input","displayEmpty","selectEmpty","smallDisplayFix","FormControlOdd","policy","tierPlan","selectMenuRoot","monetizationAttributes","pricePerRequest","currencyType","fixedPrice","billingCycle","index","arrayOf","titleBar","borderBottomWidth","borderBottomStyle","borderColor","marginBottom","buttonLeft","buttonRight","marginLeft","buttonsWrapper","legend","inputText","buttonRightLink","link","linkNotActive","selectedTagText","textIndent","apiGroup","ApiBreadcrumbs","selectedTag","Paper","elevation","Breadcrumbs","Link","CustomIcon","withSettings","WrappedComponent","DocThumb","loading","open","overview_link","isRedirect","openMoreMenu","doc","sourceType","apiName","apiVersion","apiUUID","details_link","contentPictureOverlap","minHeight","ApiTableView","gridView","themeAdditions","muiTheme","overrides","MUIDataTable","boxShadow","tableRoot","border","listView","tableBodyEvenBackgrund","tableBodyOddBackgrund","tableHeadBackground","MUIDataTableBodyCell","flexWrap","systemTheme","merge","DefaultConfigurations","Configurations","assign","createMuiTheme","intl","xhrRequest","setTenantDomain","code","formatMessage","query","page","rowsPerPage","searchQuery","URLSearchParams","get","composeQuery","queryString","limit","offset","search","getAllAPIs","pageType","getData","columns","options","customBodyRender","tableMeta","updateValue","tableViewObj","rowData","artifact","rowIndex","sort","apiNameLink","rowImageOverride","filterType","responsive","serverSide","onTableChange","action","tableState","changePage","selectableRows","onChangeRowsPerPage","numberOfRows","customRowRender","dataIndex","print","download","viewColumns","customToolbar","Loading","NoApi","getMuiTheme","injectIntl","listViewIconSize","APICategoryThumb","categoryLink","CategoryListingCategories","allCategories","clickablePointer","ApiTagCloud","colorOptions","history","apisTagWithoutGroups","minSize","maxSize","tags","shuffle","tagSearchURL","handleOnClick","listType","RecommendedApiThumb","Card","CardMedia","CardContent","Chip","unit","Recommendations","getApiRecommendations","rowsPerPageOptions","CommonListing","prevState","showLeftMenu","enabled","settings","monetizationEnabled","recommendationEnabled","isRecommendationEnabled","defaultApiView","restApiClient","apiCategories","location","tagCloudActive","splits","splitTagArray","tagPaneVisible","categoryPaneVisible","LeftMenu","sliderButton","toggleLeftMenu","LeftMenuForSlider","rotatedText","contentWithoutTags","contentWithTagsHidden","contentWithTags","IconButton","setListType","iconSelected","Provider","Settings","rightIcon","ListingWrapper","contentAreaWidth","listGridSelectedColor","flexDirection","paddingBottom","sliderWidth","fontFamily","typography","top","left","overflowY","sliderBackground","transform","transformOrigin","recommendationsBar","Environments","that","setTimeout","urlCopied","apiClient","downloadWSDL","onCopy","environmentName","getWsdlClient","downloadWSDLForEnvironment","done","Utils","downloadFile","process","downloadSwagger","environment","getSwaggerByAPIIdAndEnvironment","Grid","endpointURLs","endpoint","ExpansionPanel","ExpansionPanelSummary","expandIcon","aria-controls","iconAligner","environmentType","iconEven","iconTextWrapper","heading","ExpansionPanelDetails","URLs","http","https","ws","wss","TextField","defaultValue","InputProps","disableUnderline","bootstrapRoot","bootstrapInput","InputLabelProps","bootstrapFormLabel","Tooltip","placement","iconStyle","defaultVersionURLs","Button","buttonIcon","object","light","iconOdd","borderRadius","common","white","transitions","create","Labels","getSwaggerByAPIIdAndLabel","labels","accessUrls","InfoBar","pathname","test1","RegExp","test2","match","showOverview","todo","policies","dropDownApplications","dropDownPolicies","notFound","tabValue","comment","commentList","checked","getSchema","getProvider","ditectCurrentMenu","listen","newAPI","getGraphQLSchemaByAPIId","windowUrl","binary","Blob","anchor","createElement","href","click","ratings","prodUrlCopied","sandboxUrlCopied","epUrl","showThumbnail","apisTagsWithoutGroups","resourceNotFountMessage","ResourceNotFound","message","infoBarMain","linkTitle","VerticalDivider","advertiseInfo","advertised","StarRatingSummary","rel","originalStoreUrl","viewInPubStoreLauncher","linkText","Collapse","in","infoContent","contentWrapper","description","Table","table","TableBody","TableRow","TableCell","scope","leftCol","apiOwner","contentToTop","chip","infoContentBottom","expandWrapper","toggleOverview","buttonView","buttonOverviewText","leftMenuHorizontal","leftMenuVerticalLeft","leftMenuVerticalRight","leftLInkMain","leftLInkMainText","detailsContent","contentLoader","contentLoaderRightMenu","withRouter","mainBack","infoBarHeight","minWidth","backIcon","backText","zIndex","iconEvenColor","iconOddColor","verticlaAlign","tagChipBackground","styles","mt","mr","pl","ButtonPanel","currentStep","handleCurrentStep","handleReset","nextActive","useContext","Box","stepsLength","appCreateFormWrapper","APPLICATION_STATES","setThrottlingPolicyList","applicationRequest","setApplicationRequest","tokenType","groups","attributes","isNameValid","setIsNameValid","allAppAttributes","setAllAppAttributes","setNotFound","setCreatedApp","incrementStep","setStepStatus","stepStatuses","validateName","Promise","resolve","reject","Error","promiseTiers","getAllTiers","promisedAttributes","getAllApplicationAttributes","all","tierResponse","allAttributes","throttlingPolicyListLocal","allAppAttr","hidden","px","ApplicationCreateForm","updateApplicationRequest","handleAttributesChange","newApplicationRequest","cloneDeep","isRequiredAttribute","attribute","required","getAttributeValue","handleDeleteChip","appGroups","values","v","handleAddChip","slice","createApplication","appCreated","PROCEED","BLOCKED","SUBSCRIPTION_STATES","apiObject","newApp","setNewApp","tiers","createdApp","newSubscriptionRequest","tierData","SubscribeToApi","subscribe","subscriptionId","info","keyConfigWrapper","radioWrapper","keyStates","selectedType","setSelectedType","setNextActive","isUserOwner","setIsUserOwner","keyRequest","setKeyRequest","keyType","serverSupportedGrantTypes","supportedGrantTypes","callbackUrl","setCreatedKeyType","getSettings","obj","grantTypes","formControl","FormLabel","RadioGroup","newKeyType","newKeyRequest","FormControlLabel","control","Radio","KeyConfiguration","updateKeyRequest","setGenerateEnabled","Application","application","generateKeys","keyState","tokenWrapper","setKeyType","subscriptionScopes","setSubscriptionScopes","accessTokenRequest","setAccessTokenRequest","timeout","scopesSelected","setCreatedToken","createdKeyType","getKeys","subscriptionScopesList","messages","defineMessages","dataInfo","Tokens","updateAccessTokenRequest","generateToken","stepComponents","CreateAppStep","SubscribeToAppStep","GenerateKeysStep","GenerateAccessTokenStep","createdToken","handleRedirectTest","my","mx","ViewToken","token","isOauth","Wizard","stepStatus","steps","redirect","CurrentStepComponent","titleSub","py","Stepper","activeStep","Step","StepLabel","handleNext","mb","pt","toolbar","subscribeTitle","plainContent","instructions","wizardContent","APIClient","host","args","getCurrentEnvironment","authorizations","OAuth2Security","access_token","getPartialToken","SwaggerClient","withCredentials","promisedResolve","getEnvironment","requestInterceptor","request","Accept","spec","_client","resolved","argsv","_fixSpec","_getRequestInterceptor","responseInterceptor","_getResponseInterceptor","unauthorizedErrorHandler","mutex","Mutex","sessionStorage","getItem","etag","setItem","resourcePath","resourceMethod","getSwaggerURL","paths","security","addETag","userData","getUserFromToken","CONST","LOGOUT_CALLBACK","tenant","existingToken","refToken","getRefreshPartialToken","authorization","env","promise","acquire","release","refresh","res","json","getETag","method","APIClientFactory","_instance","_APIClientMap","Map","getAPIClient","environmentLabel","api_Client","set","destroyAPIClient","delete","Monetization","sessionId","workflowReferenceId","client","payload","apis","Stripe","post_subscriptions_complete_checkout","post_stripe_setup_card_session__apiId_","post_stripe_update_stripe_card","get_stripe_billing_details","CheckoutSuccessPage","workflowId","monetization","completeCheckout","Progress","PaymentDetailsBase","children","sm","element","PaymentDetails","isRedirecting","setIsRedirecting","setLoading","cardDetails","setCardDetails","completeUpdateCardSession","getCardDetails","cardRes","redirectToUpdateCard","getUpdateCardSession","stripePublishableKey","stripe","redirectToCheckout","ml","brand","last4","expMonth","expYear","disalbed","CircularProgress","ApiConsole","lazy","GraphQLConsole","Overview","Documents","Credentials","Comments","Sdk","LoadableSwitch","apiUuid","params","api_uuid","redirectURL","tryoutRoute","fallback","exact","from","Details","callback","existingSubscriptions","promisedApplications","restApi","getAPIById","getSubscriptions","getAllApplications","subscriptions","appIdToNameMapping","reduce","acc","cur","subscribedAppIds","includes","filteredApp","overviewHiden","xo","setDetailsAPI","rootIconSize","rootIconTextVisible","rootIconVisible","apiDetailPages","showCredentials","showComments","showTryout","showDocuments","showSdks","prefix","sufix","globalStyle","pathPrefix","Helmet","LeftMenuItem","route","iconText","innerRef","node","shiftToLeft","shiftToRight","leftMenuPaddingLeft","backgroundImage","overflowX","borderRight","rootBackground"],"mappings":"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","file":"Apis.bundle.js","sourcesContent":["/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\n\nexport const ApiContext = React.createContext({\n    active: 'overview',\n    handleMenuSelect: () => {},\n    api: null,\n    applications: null,\n    subscribedApplications: [],\n    applicationsAvailable: [],\n    updateSubscriptionData: () => {},\n});\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { withStyles } from '@material-ui/core/styles';\nimport Cancel from '@material-ui/icons/Cancel';\nimport { StarRate } from '@material-ui/icons';\nimport Alert from 'AppComponents/Shared/Alert';\nimport Api from 'AppData/api';\nimport AuthManager from 'AppData/AuthManager';\nimport StarRatingSummary from 'AppComponents/Apis/Details/StarRatingSummary';\nimport Rating from '@material-ui/lab/Rating';\n\n/**\n *\n *\n * @param {*} theme\n */\nconst styles = theme => ({\n    starRate: {\n        fontSize: 30,\n        color: theme.custom.infoBar.starColor,\n    },\n    noStarRate: {\n        fontSize: 30,\n        color: theme.palette.grey.A200,\n    },\n    removeRating: {\n        fontSize: 20,\n        color: 'black',\n    },\n    userRating: {\n        display: 'flex',\n        justifyContent: 'flex-start',\n        alignItems: 'center',\n        cursor: 'pointer',\n    },\n});\n\n/**\n *\n *\n * @class StarRatingBar\n * @extends {React.Component}\n */\nclass StarRatingBar extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            avgRating: 0,\n            userRating: 0,\n            count: 0,\n            total: 0,\n        };\n        this.getApiRating = this.getApiRating.bind(this);\n        this.removeUserRating = this.removeUserRating.bind(this);\n        this.doRate = this.doRate.bind(this);\n    }\n    componentDidUpdate(prevProps) {\n        // Typical usage (don't forget to compare props):\n        if (this.props.ratingUpdate !== prevProps.ratingUpdate) {\n            this.getApiRating();\n        }\n    }\n    /**\n     *\n     *\n     * @memberof StarRatingBar\n     */\n    componentDidMount() {\n        this.getApiRating();\n    }\n\n    /**\n     *\n     *\n     * @memberof StarRatingBar\n     */\n    getApiRating() {\n        const { apiId, setRatingUpdate } = this.props;\n        const user = AuthManager.getUser();\n        const api = new Api();\n        // get api rating\n        if (user != null) {\n            const promisedRating = api.getRatingFromUser(apiId, null);\n            promisedRating.then((response) => {\n                this.setState({\n                    avgRating: response.body.avgRating,\n                    userRating: response.body.userRating,\n                    count: response.body.count,\n                    total: response.body.pagination.total,\n                });\n                if(setRatingUpdate) setRatingUpdate({\n                    avgRating: response.body.avgRating,\n                    count: response.body.count,\n                    total: response.body.pagination.total \n                });\n            });\n        }\n    }\n\n    /**\n     *\n     *\n     * @param {*} rateIndex\n     * @memberof StarRatingBar\n     */\n    doRate(rateIndex) {\n        const { apiId } = this.props;\n        const api = new Api();\n        const ratingInfo = { rating: rateIndex };\n        const promise = api.addRating(apiId, ratingInfo);\n        promise\n            .then(() => {\n                this.getApiRating();\n            })\n            .catch((error) => {\n                Alert.error('Error occured while adding ratings');\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                }\n            });\n    }\n\n    /**\n     *\n     *\n     * @memberof StarRatingBar\n     */\n    removeUserRating() {\n        const { apiId, setRatingUpdate } = this.props;\n        const api = new Api();\n        // remove user rating\n        api.removeRatingOfUser(apiId, null)\n            .then(() => {\n                this.getApiRating();\n                setRatingUpdate();\n            })\n            .catch((error) => {\n                Alert.error('Error occured while removing ratings');\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                }\n            });\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof StarRatingBar\n     */\n    render() {\n        const {\n            avgRating, userRating, count, total,\n        } = this.state;\n        const {\n            classes, isEditable, showSummary, apiRating,\n        } = this.props;\n        const apiRatingNumber = parseFloat(apiRating);\n        return (\n            <React.Fragment>\n                {showSummary ? (\n                    <StarRatingSummary avgRating={avgRating} reviewCount={total} returnCount={count} />\n                ) : (\n                    <React.Fragment>\n                        {isEditable ? (\n                            <React.Fragment>\n                                <div className={classes.userRating}>\n                                    {[1, 2, 3, 4, 5].map(i => (\n                                            <StarRate\n                                                key={i}\n                                                className={userRating >= i ? classes.starRate : classes.noStarRate}\n                                                onClick={() => this.doRate(i)}\n                                            />\n                                    ))}\n                                        <Cancel\n                                            className={classes.removeRating}\n                                            onClick={() => this.removeUserRating()}\n                                        />\n                                </div>\n                            </React.Fragment>\n                        ) : (\n                            <React.Fragment>\n                                <Rating name='half-rating' value={apiRatingNumber} precision={0.1} readOnly />\n                            </React.Fragment>\n                        )}\n                    </React.Fragment>\n                )}\n            </React.Fragment>\n        );\n    }\n}\n\nStarRatingBar.defaultProps = {\n    apiRating: 0,\n    ratingUpdate: 0,\n    setRatingUpdate: () => {},\n};\n\nStarRatingBar.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    apiId: PropTypes.string.isRequired,\n    isEditable: PropTypes.bool.isRequired,\n    showSummary: PropTypes.bool.isRequired,\n    apiRating: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number\n    ]),\n    ratingUpdate: PropTypes.number,\n    setRatingUpdate: PropTypes.func,\n};\n\nexport default withStyles(styles, { withTheme: true })(StarRatingBar);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = {\n    svgImage: {\n        cursor: 'pointer',\n        // ⚠️ object-fit is not supported by IE11.\n        objectFit: 'cover',\n    },\n};\n\nfunction aHexToOpacity(aHex) {\n    const alphaValue = '0x' + aHex.substring(7, 9);\n    return alphaValue / 256;\n}\n\n/**\n *\n * @param {*} aHex\n */\nfunction getColorWithoutAlpha(aHex) {\n    return aHex.substring(0, 7);\n}\n\n/**\n * Generate svg background.\n * @param {*} props\n */\nfunction Background(props) {\n    const {\n        classes, colorPair, width, height,\n    } = props;\n    // Creating the background\n\n    const thumbnailBox = {\n        width: 250,\n        height: 200,\n    };\n\n    const thumbnailBoxChild = {\n        width: 50,\n        height: 50,\n    };\n\n    const rects = [];\n    for (let i = 0; i <= 4; i++) {\n        for (let j = 0; j <= 4; j++) {\n            const color = '#' + (colorPair.sub - ((0x00000025 * i) - (j * 0x00000015))).toString(16);\n            rects.push(<rect\n                key={i + '_' + j}\n                {...thumbnailBoxChild}\n                /* eslint no-mixed-operators: 0 */\n                fill={getColorWithoutAlpha(color)}\n                fillOpacity={aHexToOpacity(color)}\n                x={200 - i * 54}\n                y={54 * j}\n            />);\n        }\n    }\n    const primeColor = '#' + colorPair.prime.toString(16);\n    return (\n        <svg width={width} height={height} className={classes.svgImage}>\n            <rect {...thumbnailBox} fill={getColorWithoutAlpha(primeColor)} fillOpacity={aHexToOpacity(primeColor)} />\n            {rects}\n        </svg>\n    );\n}\n\nBackground.propTypes = {\n    classes: PropTypes.shape({ svgImage: PropTypes.string }).isRequired,\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    colorPair: PropTypes.shape({ sub: PropTypes.number, prime: PropTypes.number }).isRequired,\n};\n\nexport default withStyles(styles)(Background);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Icon from '@material-ui/core/Icon';\nimport MaterialIcons from 'MaterialIcons';\nimport Background from './Background';\n\nconst styles = {\n    icon: {},\n    iconWrapper: {\n        position: 'relative',\n        display: 'flex',\n        justifyContent: 'center',\n        '& span': {\n            position: 'absolute',\n            right: 'auto',\n        },\n    },\n};\n\n/**\n * Generate dynamic API thumbnail image (SVG), Use PureComponent to avoid unnessasary re-rendering when hover ect\n *\n * @class ImageGenerator\n * @extends {PureComponent}\n */\nclass ImageGenerator extends PureComponent {\n    /**\n     *\n     * @inheritdoc\n     * @returns {React.PureComponent} @inheritdoc\n     * @memberof ImageGenerator\n     */\n    render() {\n        const {\n            classes, api, width, height, theme, fixedIcon,\n        } = this.props;\n\n        const {\n            category, key, color, backgroundIndex,\n        } = fixedIcon;\n\n        let str = api;\n        if (typeof api === 'object') str = api.name;\n        let count;\n        let colorPair;\n        let randomBackgroundIndex;\n        let IconElement;\n        const colorPairs = theme.custom.thumbnail.backgrounds;\n\n        // Creating the icon\n        if (key && category) {\n            IconElement = key;\n        } else if (api.type === 'DOC') {\n            IconElement = theme.custom.thumbnail.document.icon;\n        } else {\n            count = MaterialIcons.categories[0].icons.length;\n            const randomIconIndex = (str.charCodeAt(0) + str.charCodeAt(str.length - 1)) % count;\n            IconElement = MaterialIcons.categories[0].icons[randomIconIndex].id;\n        }\n\n        // Obtain or generate background color pair\n        if (api.type === 'DOC') {\n            colorPair = theme.custom.thumbnail.document.backgrounds;\n        } else if (backgroundIndex && colorPairs.length > backgroundIndex) {\n            colorPair = colorPairs[backgroundIndex];\n        } else {\n            randomBackgroundIndex = (str.charCodeAt(0) + str.charCodeAt(str.length - 1)) % colorPairs.length;\n            colorPair = colorPairs[randomBackgroundIndex];\n        }\n        return (\n            <div className={classes.iconWrapper} style={{ width }}>\n                <Icon className={classes.icon} style={{ fontSize: height + 'px', color }}>\n                    {IconElement}\n                </Icon>\n                <Background width={width} height={height} colorPair={colorPair} />\n            </div>\n        );\n    }\n}\n\nImageGenerator.defaultProps = {\n    height: 190,\n    width: 250,\n    fixedIcon: {\n        category: null,\n        key: null,\n        color: '',\n        backgroundIndex: null,\n    },\n};\n\nImageGenerator.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    height: PropTypes.number,\n    width: PropTypes.number,\n    fixedIcon: PropTypes.shape({}),\n    api: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(ImageGenerator);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { StarRate } from '@material-ui/icons';\nimport Icon from '@material-ui/core/Icon';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport { FormattedMessage } from 'react-intl';\n\n/**\n *\n *\n * @param {*} theme\n */\nconst styles = (theme) => {\n    const starColor = theme.custom.infoBar.starColor || theme.palette.getContrastText(theme.custom.infoBar.background);\n    return {\n        starRate: {\n            color: starColor,\n            '&.material-icons': {\n                fontSize: 40,\n            },\n        },\n        userRating: {\n            display: 'flex',\n            justifyContent: 'flex-start',\n            alignItems: 'center',\n        },\n    };\n};\n\nfunction StarRatingSummary(props) {\n    const {\n        classes, theme, avgRating, reviewCount, returnCount,\n    } = props;\n    return (\n        <React.Fragment>\n            {returnCount > 0 ? (\n                <React.Fragment>\n                    <Icon className={classes.starRate}>star_border</Icon>\n                    <div className={classes.ratingSummary}>\n                        <div className={classes.userRating}>\n                            <Typography variant='body1'>{avgRating}</Typography>\n                            <Typography variant='body1'>/5.0</Typography>\n                        </div>\n                        <Typography variant='body1' gutterBottom align='left'>\n                            {reviewCount}{' '}\n                            {reviewCount === 1 ? (\n                                <FormattedMessage defaultMessage='user' id='Apis.Listing.StarRatingBar.user' />\n                            ) : (\n                                <FormattedMessage defaultMessage='users' id='Apis.Listing.StarRatingBar.users' />\n                            )}\n                        </Typography>\n                    </div>\n                </React.Fragment>\n            ) : (\n                <React.Fragment>\n                    <StarRate className={classes.starRate} style={{ color: theme.palette.grey.A200 }} />\n                    <div className={classes.ratingSummary}>\n                        <Typography variant='caption' gutterBottom align='left'>\n                            <FormattedMessage defaultMessage='Not Rated' id='Apis.Listing.StarRatingBar.not.rated' />\n                        </Typography>\n                    </div>\n                </React.Fragment>\n            )}\n        </React.Fragment>\n    );\n}\n\nexport default withStyles(styles, { withTheme: true })(StarRatingSummary);\n","/* eslint-disable react/prop-types */\n/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport { withStyles } from '@material-ui/core/styles';\nimport Chip from '@material-ui/core/Chip';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport MaterialIcons from 'MaterialIcons';\nimport StarRatingBar from 'AppComponents/Apis/Listing/StarRatingBar';\nimport ImageGenerator from './ImageGenerator';\nimport Api from '../../../data/api';\nimport { ApiContext } from '../Details/ApiContext';\nimport classNames from 'classnames';\n\n/**\n *\n *\n * @param {*} theme\n */\nconst styles = theme => ({\n    card: {\n        margin: theme.spacing(3 / 2),\n        maxWidth: theme.custom.thumbnail.width,\n        transition: 'box-shadow 0.3s ease-in-out',\n        position: 'relative',\n    },\n    apiDetails: {\n        padding: theme.spacing(1),\n        background: theme.custom.thumbnail.contentBackgroundColor,\n        padding: theme.spacing(1),\n        color: theme.palette.getContrastText(theme.custom.thumbnail.contentBackgroundColor),\n        '& a': {\n            color: theme.palette.getContrastText(theme.custom.thumbnail.contentBackgroundColor),\n        },\n    },\n    suppressLinkStyles: {\n        textDecoration: 'none',\n        color: theme.palette.text.disabled,\n    },\n    row: {\n        display: 'inline-block',\n    },\n    thumbBy: {\n        'padding-left': '5px',\n    },\n    media: {\n        // ⚠️ object-fit is not supported by IE11.\n        objectFit: 'cover',\n    },\n    thumbContent: {\n        width: theme.custom.thumbnail.width - theme.spacing(2),\n    },\n    thumbLeft: {\n        alignSelf: 'flex-start',\n        flex: 1,\n        width: '25%',\n        'padding-left': '5px',\n        'padding-right': '65px',\n    },\n    thumbLeftAction: {\n        alignSelf: 'flex-start',\n        flex: 1,\n        width: '25%',\n        'padding-left': '5px',\n        'padding-right': '10px',\n    },\n    thumbRight: {\n        alignSelf: 'flex-end',\n    },\n    thumbInfo: {\n        display: 'flex',\n    },\n    thumbHeader: {\n        width: theme.custom.thumbnail.width - theme.spacing(1),\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        cursor: 'pointer',\n        margin: 0,\n        'padding-left': '5px',\n    },\n    contextBox: {\n        width: parseInt((theme.custom.thumbnail.width - theme.spacing(1)) / 2, 10),\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        cursor: 'pointer',\n        margin: 0,\n        display: 'inline-block',\n        lineHeight: '1em',\n        'padding-top': 5,\n        'padding-right': 5,\n        'padding-bottom': 1.5,\n        textAlign: 'left',\n    },\n    thumbWrapper: {\n        position: 'relative',\n        paddingTop: 20,\n        marginRight: theme.spacing(2),\n    },\n    deleteIcon: {\n        fill: 'red',\n    },\n    textWrapper: {\n        color: theme.palette.text.secondary,\n        textDecoration: 'none',\n    },\n    imageWrapper: {\n        color: theme.custom.thumbnail.iconColor,\n        width: theme.custom.thumbnail.width,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    imageOverlap: {\n        position: 'absolute',\n        bottom: 1,\n    },\n    chipWrapper: {\n        marginTop: '15px',\n    },\n    ratingWrapper: {\n        marginTop: '20px',\n    },\n    textblock: {\n        color: theme.palette.text.secondary,\n        position: 'absolute',\n        bottom: '35px',\n        right: '10px',\n        background: theme.custom.thumbnail.contentBackgroundColor,\n        'padding-left': '10px',\n        'padding-right': '10px',\n    },\n});\n\nconst windowURL = window.URL || window.webkitURL;\n\n/**\n *\n * Render API Card component in API listing card view,containing essential API information like name , version ect\n * @class APIThumb\n * @extends {Component}\n */\nclass ApiThumb extends React.Component {\n    /**\n     *Creates an instance of APIThumb.\n     * @param {*} props\n     * @memberof APIThumb\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            category: MaterialIcons.categories[0].name,\n            selectedIcon: null,\n            color: null,\n            backgroundIndex: null,\n            imageObj: null,\n            isHover: false,\n            imageLoaded: false,\n        };\n        this.toggleMouseOver = this.toggleMouseOver.bind(this);\n    }\n\n    /**\n     *\n     *\n     * @memberof ApiThumb\n     */\n    componentDidMount() {\n        const { api } = this.props;\n        const restApi = new Api();\n\n        const promisedThumbnail = restApi.getAPIThumbnail(api.id);\n\n        promisedThumbnail.then((response) => {\n            if (response && response.data) {\n                if (response.headers['content-type'] === 'application/json') {\n                    const iconJson = JSON.parse(response.data);\n                    this.setState({\n                        selectedIcon: iconJson.key,\n                        category: iconJson.category,\n                        color: iconJson.color,\n                        backgroundIndex: iconJson.backgroundIndex,\n                    });\n                } else if (response && response.data.size > 0) {\n                    const url = windowURL.createObjectURL(response.data);\n                    this.setState({ imageObj: url });\n                }\n            }\n        }).finally(() => {\n            this.setState({ imageLoaded: true })\n        })\n    }\n\n    /**\n     * Clean up resource\n     */\n    componentWillUnmount() {\n        if (this.state.thumbnail) {\n            windowURL.revokeObjectURL(this.state.imageObj);\n        }\n    }\n\n    /**\n     * Get Path Prefix depedning on the respective API Type being rendered\n     *\n     * @returns {String} path\n     * @memberof ApiThumb\n     */\n    getPathPrefix() {\n        const path = '/apis/';\n        return path;\n    }\n\n    /**\n     * Toggle mouse Hover state to set the card `raised` property\n     *\n     * @param {React.SyntheticEvent} event mouseover and mouseout\n     * @memberof APIThumb\n     */\n    toggleMouseOver(event) {\n        this.setState({ isHover: event.type === 'mouseover' });\n    }\n\n    /**\n     * @inheritdoc\n     * @returns {React.Component} @inheritdoc\n     * @memberof APIThumb\n     */\n    render() {\n        const {\n            imageObj, selectedIcon, color, backgroundIndex, category, isHover, imageLoaded,\n        } = this.state;\n        const path = this.getPathPrefix();\n        const { isMonetizationEnabled } = this.context;\n\n        const detailsLink = path + this.props.api.id;\n        const {\n            api, classes, theme, customWidth, customHeight, showInfo,\n        } = this.props;\n        const { custom: { thumbnail, social: { showRating } } } = theme;\n        const { name, version, context } = api;\n\n        let { provider } = api;\n        if (\n            api.businessInformation &&\n            api.businessInformation.businessOwner &&\n            api.businessInformation.businessOwner.trim() !== ''\n        ) {\n            provider = api.businessInformation.businessOwner;\n        }\n        if (!api.lifeCycleStatus) {\n            api.lifeCycleStatus = api.status;\n        }\n        const imageWidth = customWidth || thumbnail.width;\n        const imageHeight = customHeight || 140;\n        const defaultImage = thumbnail.defaultApiImage;\n\n        let ImageView;\n        if (!imageLoaded) {\n            ImageView = (<div class=\"image-load-frame\">\n                <div class=\"image-load-animation1\"></div>\n                <div class=\"image-load-animation2\"></div>\n            </div>)\n        } else if (imageObj) {\n            ImageView = (\n                <img\n                    height={imageHeight}\n                    width={imageWidth}\n                    src={imageObj}\n                    alt='API Thumbnail'\n                    className={classes.media}\n                />\n            );\n        } else {\n            ImageView = (\n                <ImageGenerator\n                    width={imageWidth}\n                    height={imageHeight}\n                    api={api}\n                    fixedIcon={{\n                        key: selectedIcon,\n                        color,\n                        backgroundIndex,\n                        category,\n                        api,\n                    }}\n                />\n            );\n        }\n        return (\n            <Card\n                onMouseOver={this.toggleMouseOver}\n                onFocus={this.toggleMouseOver}\n                onMouseOut={this.toggleMouseOver}\n                onBlur={this.toggleMouseOver}\n                raised={isHover}\n                className={classNames('image-thumbnail', classes.card)}\n            >\n                {isMonetizationEnabled && (\n                    <div className={classes.textblock}>{api.monetizationLabel}</div>\n                )}\n                <CardMedia>\n                    <Link to={detailsLink} className={classes.suppressLinkStyles}>\n                        {!defaultImage && ImageView}\n                        {defaultImage && <img src={defaultImage} alt='img' />}\n                    </Link>\n                </CardMedia>\n                {showInfo && (\n                    <CardContent classes={{ root: classes.apiDetails }}>\n                        <Link to={detailsLink} className={classes.textWrapper}>\n                            <Typography\n                                className={classes.thumbHeader}\n                                variant='h5'\n                                gutterBottom\n                                onClick={this.handleRedirectToAPIOverview}\n                                title={name}\n                            >\n                                {name}\n                            </Typography>\n                        </Link>\n                        <div className={classes.row}>\n                            <Typography variant='caption' gutterBottom align='left' className={classes.thumbBy}>\n                                <FormattedMessage defaultMessage='By' id='Apis.Listing.ApiThumb.by' />\n                                <FormattedMessage defaultMessage=' : ' id='Apis.Listing.ApiThumb.by.colon' />\n                                {provider}\n                            </Typography>\n                        </div>\n                        <div className={classes.thumbInfo}>\n                            <div className={classes.row}>\n                                <div className={classes.thumbLeft}>\n                                    <Typography variant='subtitle1'>{version}</Typography>\n                                    <Typography variant='caption' gutterBottom align='left'>\n                                        <FormattedMessage defaultMessage='Version' id='Apis.Listing.ApiThumb.version' />\n                                    </Typography>\n                                </div>\n                            </div>\n                            <div className={classes.row}>\n                                <div className={classes.thumbRight}>\n                                    <Typography variant='subtitle1' align='right' className={classes.contextBox}>\n                                        {context}\n                                    </Typography>\n                                    <Typography\n                                        variant='caption'\n                                        gutterBottom\n                                        align='right'\n                                        className={classes.context}\n                                    >\n                                        <FormattedMessage defaultMessage='Context' id='Apis.Listing.ApiThumb.context' />\n                                    </Typography>\n                                </div>\n                            </div>\n                        </div>\n                        <div className={classes.thumbInfo}>\n                            {showRating && <div className={classes.thumbLeftAction}>\n                                <Typography\n                                    variant='subtitle1'\n                                    gutterBottom\n                                    align='left'\n                                    className={classNames('api-thumb-rating', classes.ratingWrapper)}\n                                >\n                                    <StarRatingBar\n                                        apiRating={api.avgRating}\n                                        apiId={api.id}\n                                        isEditable={false}\n                                        showSummary={false}\n                                    />\n                                </Typography>\n                            </div>}\n                            <div className={classes.thumbRight}>\n                                <Typography\n                                    variant='subtitle1'\n                                    gutterBottom\n                                    align='right'\n                                    className={classes.chipWrapper}\n                                >\n                                    {(api.type === 'GRAPHQL' || api.transportType === 'GRAPHQL') && (\n                                        <Chip\n                                            label={api.transportType === undefined ? api.type : api.transportType}\n                                            color='primary'\n                                        />\n                                    )}\n                                    {(api.lifeCycleStatus === 'PROTOTYPED') && (\n                                        <Chip\n                                        label={api.apiType === 'APIProduct' ? api.state : api.lifeCycleStatus}\n                                        color='default'\n                                    />\n                                    )}\n                                </Typography>\n                            </div>\n                        </div>\n                    </CardContent>\n                )}\n            </Card>\n        );\n    }\n}\nApiThumb.defaultProps = {\n    customWidth: null,\n    customHeight: null,\n    showInfo: true,\n};\nApiThumb.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    customWidth: PropTypes.number,\n    customHeight: PropTypes.number,\n    showInfo: PropTypes.bool,\n};\n\nApiThumb.contextType = ApiContext;\n\nexport default withStyles(styles, { withTheme: true })(ApiThumb);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Icon from '@material-ui/core/Icon';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { app } from 'Settings';\n\n/**\n * @inheritdoc\n * @param {*} theme theme object\n */\nconst styles = theme => ({\n    thumbContent: {\n        width: theme.custom.tagWise.thumbnail.width - theme.spacing(1),\n        backgroundColor: theme.palette.background.paper,\n        padding: theme.spacing(1),\n    },\n    thumbLeft: {\n        alignSelf: 'flex-start',\n        flex: 1,\n    },\n    thumbRight: {\n        alignSelf: 'flex-end',\n    },\n    thumbInfo: {\n        display: 'flex',\n    },\n    thumbHeader: {\n        width: theme.custom.tagWise.thumbnail.width - theme.spacing(1),\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        cursor: 'pointer',\n        justifyContent: 'center',\n        margin: 0,\n    },\n    contextBox: {\n        // eslint-disable-next-line radix\n        width: parseInt(150 - theme.spacing(0.5)),\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        cursor: 'pointer',\n        margin: 0,\n        display: 'inline-block',\n        lineHeight: '1em',\n    },\n    thumbWrapper: {\n        position: 'relative',\n        paddingTop: 20,\n        marginRight: theme.spacing(2),\n    },\n    deleteIcon: {\n        fill: 'red',\n    },\n    textWrapper: {\n        color: theme.custom.tagCloud.leftMenu.color,\n        '& .material-icons': {\n            color: theme.custom.tagCloud.leftMenu.color,\n        },\n    },\n    image: {\n        width: theme.custom.tagWise.thumbnail.width,\n    },\n    imageWrapper: {\n        color: theme.palette.text.secondary,\n        backgroundColor: theme.palette.background.paper,\n        width: theme.custom.tagWise.thumbnail.width + theme.spacing(1),\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    imageOverlap: {\n        position: 'absolute',\n        bottom: 1,\n        backgroundColor: theme.custom.thumbnail.contentBackgroundColor,\n    },\n});\n\n/**\n * Get ApiTagThumb\n * @param {*} props properties\n * @returns {*}\n */\nfunction ApiTagThumb(props) {\n    const {\n        tag, path, classes, theme, style, mainPage,\n    } = props;\n    const tagLink = path + ':' + tag.value;\n    const {\n        tagWise: {\n            thumbnail: { image },\n        },\n    } = theme.custom;\n    const name = tag.value.split(theme.custom.tagWise.key)[0];\n    if (style === 'fixed-left' || !mainPage) {\n        return (\n            <Link to={tagLink} className={classes.textWrapper}>\n                <ListItem button>\n                    <ListItemIcon>\n                        <Icon>label</Icon>\n                    </ListItemIcon>\n                    <ListItemText primary={name} />\n                </ListItem>\n            </Link>\n        );\n    }\n\n    return (\n        <div className={classes.thumbWrapper}>\n            <Link to={tagLink} className={classes.imageWrapper}>\n                <img src={app.context + image} className={classes.image} alt='' />\n            </Link>\n            <div className={classNames(classes.thumbContent)}>\n                <Link to={tagLink} className={classes.textWrapper}>\n                    <Typography className={classes.thumbHeader} variant='h4' gutterBottom title={name}>\n                        {name}\n                    </Typography>\n                </Link>\n            </div>\n        </div>\n    );\n}\n\nApiTagThumb.propTypes = {\n    classes: PropTypes.shape({\n        thumbWrapper: PropTypes.shape({}).isRequired,\n        imageWrapper: PropTypes.shape({}).isRequired,\n        thumbContent: PropTypes.shape({}).isRequired,\n        imageOverlap: PropTypes.shape({}).isRequired,\n        textWrapper: PropTypes.shape({}).isRequired,\n        thumbHeader: PropTypes.shape({}).isRequired,\n        image: PropTypes.shape({}).isRequired,\n    }).isRequired,\n    theme: PropTypes.shape({\n        custom: PropTypes.shape({\n            tagWise: PropTypes.shape({}).isRequired,\n        }).isRequired,\n    }).isRequired,\n    tag: PropTypes.shape({\n        value: PropTypes.shape({\n            split: PropTypes.func,\n        }).isRequired,\n    }).isRequired,\n    path: PropTypes.shape({}).isRequired,\n    style: PropTypes.string.isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(ApiTagThumb);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useTheme, makeStyles } from '@material-ui/core/styles';\nimport { Link, useHistory } from 'react-router-dom';\nimport Typography from '@material-ui/core/Typography';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Icon from '@material-ui/core/Icon';\nimport { FormattedMessage } from 'react-intl';\nimport ApiTagThumb from './ApiTagThumb';\n\nconst useStyles = makeStyles(theme => ({\n    mainTitle: {\n        paddingTop: 10,\n    },\n    mainTitleWrapper: {\n        flexGrow: 1,\n    },\n    listContentWrapper: {\n        padding: `0 ${theme.spacing(3)}px`,\n    },\n    textWrapper: {\n        color: theme.custom.tagCloud.leftMenu.color,\n        '& .material-icons': {\n            color: theme.custom.tagCloud.leftMenu.color,\n        },\n    },\n    linkTextWrapper: {\n        color: theme.palette.primary.main,\n    },\n    tagWiseThumbWrapper: {\n        display: 'flex',\n    },\n    filterTitle: {\n        fontWeight: 200,\n        paddingLeft: theme.spacing(2),\n        background: theme.custom.tagCloud.leftMenu.titleBackground,\n        color: theme.palette.getContrastText(theme.custom.tagCloud.leftMenu.titleBackground),\n        height: theme.custom.infoBar.height,\n        alignItems: 'center',\n        display: 'flex',\n    },\n}));\n\n/**\n * Shared listing page\n *\n * @class TagCloudListing\n * @extends {Component}\n */\nfunction TagCloudListingTags(props) {\n    const classes = useStyles();\n    const theme = useTheme();\n    const history = useHistory();\n    const {\n        custom: {\n            tagWise: {\n                key, active, style, showAllApis,\n            },\n        },\n    } = theme;\n\n\n    const tagWiseURL = '/apis?offset=0&query=tag';\n    const { allTags, mainPage } = props;\n    let apisTagCloudGroup = null;\n\n    if (allTags.count !== 0) {\n        if (allTags !== null) {\n            apisTagCloudGroup = allTags.filter(item => active === true && item.value.split(key).length > 1);\n        }\n        if (apisTagCloudGroup && apisTagCloudGroup.length > 0) {\n            // const tagLink = tagWiseURL + ':' + apisTagCloudGroup[0].value;\n            // if (style === 'fixed-left') history.push(tagLink);\n        }\n    }\n\n    /**\n     *\n     * @inheritdoctheme\n     * @returns {React.Component} @inheritdoc\n     * @memberof TagCloudListing\n     */\n    return apisTagCloudGroup && apisTagCloudGroup.length > 0 ? (\n        <>\n            {!mainPage && (<Typography variant='h6' gutterBottom className={classes.filterTitle}>\n                <FormattedMessage defaultMessage='Api Groups' id='Apis.Listing.TagCloudListingTags.title' />\n            </Typography>)}\n            <List component='nav' aria-label='main mailbox folders'>\n                {Object.keys(apisTagCloudGroup).map((key) => {\n                    return <ApiTagThumb key={key} tag={apisTagCloudGroup[key]} path={tagWiseURL} style={style} mainPage={mainPage} />;\n                })}\n                {showAllApis && (\n                    <React.Fragment>\n                        <Divider />\n\n                        <Link to='apis/' className={classes.textWrapper}>\n                            <ListItem button>\n                                <ListItemIcon>\n                                    <Icon>label</Icon>\n                                </ListItemIcon>\n                                <ListItemText\n                                    primary={\n                                        <FormattedMessage\n                                            defaultMessage='All Apis'\n                                            id='Apis.Listing.TagCloudListingTags.allApis'\n                                        />\n                                    }\n                                />\n                            </ListItem>\n                        </Link>\n                    </React.Fragment>\n                )}\n            </List>\n        </>\n\n    ) : (\n            <>\n                {!mainPage && (<Typography variant='h6' gutterBottom className={classes.filterTitle}>\n                    <FormattedMessage defaultMessage='Api Groups' id='Apis.Listing.TagCloudListingTags.title' />\n                </Typography>)}\n                <div className={classes.mainTitle}>\n                    <Typography variant='subtitle1' gutterBottom align='center'>\n                        <FormattedMessage\n                            defaultMessage='API groups cannot be found'\n                            id='Apis.Listing.TagCloudListingTags.tagsNotFound'\n                        />\n                    </Typography>\n                    <Link to='apis/' className={classes.linkTextWrapper}>\n                        <Typography variant='subtitle1' gutterBottom align='center'>\n                            <FormattedMessage\n                                defaultMessage='All Apis'\n                                id='Apis.Listing.TagCloudListingTags.allApis'\n                            />\n                        </Typography>\n                    </Link>\n                </div>\n            </>\n        );\n}\n\nTagCloudListingTags.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    allTags: PropTypes.shape({}).isRequired,\n};\n\nexport default TagCloudListingTags;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useEffect, useState } from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport { FormattedMessage } from 'react-intl';\nimport API from 'AppData/api';\nimport TagCloudListingTags from './TagCloudListingTags';\nimport CustomIcon from '../../Shared/CustomIcon';\n\nconst useStyles = makeStyles(theme => ({\n    appBar: {\n        height: 70,\n        background: theme.custom.infoBar.background,\n        color: theme.palette.getContrastText(theme.custom.infoBar.background),\n        borderBottom: 'solid 1px ' + theme.palette.grey.A200,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    mainIconWrapper: {\n        paddingTop: 13,\n        paddingLeft: 20,\n        paddingRight: 20,\n    },\n    mainTitle: {\n        paddingTop: 10,\n    },\n    mainTitleWrapper: {\n        flexGrow: 1,\n    },\n    content: {\n        flexGrow: 1,\n    },\n    listContentWrapper: {\n        padding: `0 ${theme.spacing(3)}px`,\n    },\n    iconDefault: {\n        color: theme.palette.getContrastText(theme.custom.infoBar.background),\n    },\n}));\n\nexport default function TagCloudListing() {\n    const classes = useStyles();\n    const theme = useTheme();\n    const [allTags, setAllTags] = useState(null);\n    useEffect(() => {\n        const restApiClient = new API();\n        const promisedTags = restApiClient.getAllTags();\n        promisedTags\n            .then((response) => {\n                setAllTags(response.body.list);\n            })\n            .catch((error) => {\n                console.log(error);\n            });\n    }, []);\n    const strokeColorMain = theme.palette.getContrastText(theme.palette.background.paper);\n\n    return (\n        <main className={classes.content}>\n            <div className={classes.appBar}>\n                <div className={classes.mainIconWrapper}>\n                    <CustomIcon strokeColor={strokeColorMain} width={42} height={42} icon='api' />\n                </div>\n                <div className={classes.mainTitleWrapper}>\n                    <Typography variant='h4' className={classes.mainTitle}>\n                        <FormattedMessage\n                            defaultMessage='API Groups'\n                            id='Apis.Listing.TagCloudListing.apigroups.main'\n                        />\n                    </Typography>\n                </div>\n            </div>\n            <div className={classes.listContentWrapper}>\n                {allTags && <TagCloudListingTags allTags={allTags} mainPage={true} />}\n            </div>\n        </main>\n    );\n}\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState, useEffect } from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Grid from '@material-ui/core/Grid';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Typography from '@material-ui/core/Typography';\nimport Select from '@material-ui/core/Select';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport { FormattedMessage } from 'react-intl';\nimport classNames from 'classnames';\n\n/**\n * @inheritdoc\n * @param {*} theme theme object\n */\nconst styles = theme => ({\n    titleBar: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        borderBottomWidth: '1px',\n        borderBottomStyle: 'solid',\n        borderColor: theme.palette.text.secondary,\n        marginBottom: 20,\n    },\n    buttonLeft: {\n        alignSelf: 'flex-start',\n        display: 'flex',\n    },\n    buttonRight: {\n        alignSelf: 'flex-end',\n        display: 'flex',\n        marginLeft: 20,\n    },\n    title: {\n        display: 'inline-block',\n        marginLeft: 20,\n    },\n    buttonsWrapper: {\n        marginTop: 40,\n    },\n    legend: {\n        marginBottom: 0,\n        borderBottomStyle: 'none',\n        marginTop: 20,\n        fontSize: 12,\n    },\n    inputText: {\n        marginTop: 20,\n    },\n    buttonRightLink: {\n        textDecoration: 'none',\n    },\n    FormControl: {\n        padding: theme.spacing(2),\n        width: '100%',\n    },\n    FormControlOdd: {\n        backgroundColor: theme.palette.background.paper,\n    },\n    quotaHelp: {\n        position: 'relative',\n    },\n    subscribeRoot: {\n        paddingLeft: theme.spacing(2),\n    },\n    subscribeRootSmall: {\n        marginLeft: `-${theme.spacing(4)}px`,\n    },\n    smallDisplay: {\n        width: 240,\n        '& .MuiInput-formControl': {\n            marginTop: 0,\n        },\n    },\n    smallDisplayFix: {\n        '& .MuiSelect-selectMenu': {\n            padding: 0,\n        },\n    },\n    selectMenuRoot: {\n        margin: 0,\n        padding: 0,\n    },\n});\n\nconst subscribeToApi = (props) => {\n    const [appSelected, setAppSelected] = useState('');\n    const [policySelected, setPolicySelected] = useState('');\n    const [applicationsList, setApplicationsList] = useState([]);\n    const {\n        classes,\n        throttlingPolicyList,\n        applicationsAvailable,\n        subscriptionRequest,\n        updateSubscriptionRequest,\n        renderSmall,\n    } = props;\n\n    useEffect(() => {\n        if (throttlingPolicyList && throttlingPolicyList[0]) {\n            setPolicySelected(throttlingPolicyList[0].tierName);\n        }\n    }, [throttlingPolicyList]);\n\n    useEffect(() => {\n        if (applicationsAvailable && applicationsAvailable[0]) {\n            setApplicationsList(applicationsAvailable);\n            setAppSelected(applicationsAvailable[0].value);\n            const newRequest = { ...subscriptionRequest };\n            newRequest.applicationId = applicationsAvailable[0].value;\n        }\n    }, [applicationsAvailable]);\n\n    /**\n     * This method is used to handle the updating of subscription\n     * request object and selected fields.\n     * @param {*} field field that should be updated in subscription request\n     * @param {*} event event fired\n     */\n    const handleChange = (field, event) => {\n        const newRequest = { ...subscriptionRequest };\n        const { target } = event;\n        switch (field) {\n            case 'application':\n                newRequest.applicationId = target.value;\n                setAppSelected(target.value);\n                break;\n            case 'throttlingPolicy':\n                newRequest.throttlingPolicy = target.value;\n                setPolicySelected(target.value);\n                break;\n            default:\n                break;\n        }\n        updateSubscriptionRequest(newRequest);\n    };\n\n    return (\n        <Grid container className={classNames(classes.subscribeRoot, { [classes.subscribeRootSmall]: renderSmall })}>\n            <Grid item xs={12} md={renderSmall ? 12 : 6}>\n                {appSelected && (\n                    <FormControl className={classNames(classes.FormControl, { [classes.smallDisplay]: renderSmall })}>\n                        <InputLabel shrink htmlFor='age-label-placeholder' className={classes.quotaHelp}>\n                            <FormattedMessage\n                                id='Shared.AppsAndKeys.SubscribeToApi.application'\n                                defaultMessage='Application'\n                            />\n                        </InputLabel>\n                        <Select\n                            value={appSelected}\n                            onChange={e => handleChange('application', e)}\n                            input={<Input name='appSelected' id='app-label-placeholder' />}\n                            displayEmpty\n                            name='appSelected'\n                            className={classes.selectEmpty}\n                        >\n                            {applicationsList.map(app => (\n                                <MenuItem value={app.value} key={app.value}>\n                                    {app.label}\n                                </MenuItem>\n                            ))}\n                        </Select>\n                        <FormHelperText>\n                            <FormattedMessage\n                                id='Shared.AppsAndKeys.SubscribeToApi.select.an.application.to.subscribe'\n                                defaultMessage='Select an Application to subscribe'\n                            />\n                        </FormHelperText>\n                    </FormControl>\n                )}\n                {throttlingPolicyList && (\n                    <FormControl\n                        className={classNames(classes.FormControl, classes.smallDisplayFix, {\n                            [classes.smallDisplay]: renderSmall,\n                            [classes.FormControlOdd]: !renderSmall,\n                        })}\n                    >\n                        <InputLabel shrink htmlFor='policy-label-placeholder' className={classes.quotaHelp}>\n                            <FormattedMessage\n                                id='Shared.AppsAndKeys.SubscribeToApi.throttling.policy'\n                                defaultMessage='Throttling Policy'\n                            />\n                        </InputLabel>\n                        <Select\n                            value={policySelected}\n                            onChange={e => handleChange('throttlingPolicy', e)}\n                            input={<Input name='policySelected' id='policy-label-placeholder' />}\n                            displayEmpty\n                            name='policySelected'\n                            className={classes.selectEmpty}\n                        >\n                            {throttlingPolicyList.map(policy => (\n                                <MenuItem value={policy.tierName} key={policy.tierName}>\n                                    {policy.tierPlan === 'COMMERCIAL' ? (\n                                        <React.Fragment>\n                                            <ListItemText\n                                                classes={{ root: classes.selectMenuRoot }}\n                                                primary={policy.tierName}\n                                                secondary={\n                                                    policy.monetizationAttributes.pricePerRequest ? (\n                                                        <Typography>\n                                                            {policy.monetizationAttributes.pricePerRequest}{' '}\n                                                            {policy.monetizationAttributes.currencyType}\n                                                            {' per Request'}\n                                                        </Typography>\n                                                    ) : (\n                                                        <Typography>\n                                                            {policy.monetizationAttributes.fixedPrice}{' '}\n                                                            {policy.monetizationAttributes.currencyType}\n                                                            {' per '}\n                                                            {policy.monetizationAttributes.billingCycle}\n                                                        </Typography>\n                                                    )\n                                                }\n                                            />\n                                        </React.Fragment>\n                                    ) : (\n                                        <ListItemText primary={policy.tierName} />\n                                    )}\n                                </MenuItem>\n                            ))}\n                        </Select>\n                        <FormHelperText>\n                            <FormattedMessage\n                                id='Shared.AppsAndKeys.SubscribeToApi.available.policies'\n                                defaultMessage='Available Policies -'\n                            />{' '}\n                            {throttlingPolicyList.map((policy, index) => (\n                                <span key={policy.tierName}>\n                                    {policy.tierName}\n                                    {index !== throttlingPolicyList.length - 1 && <span>,</span>}\n                                </span>\n                            ))}\n                        </FormHelperText>\n                    </FormControl>\n                )}\n            </Grid>\n        </Grid>\n    );\n};\nsubscribeToApi.propTypes = {\n    classes: PropTypes.shape({\n        FormControl: PropTypes.string,\n        quotaHelp: PropTypes.string,\n        selectEmpty: PropTypes.string,\n        FormControlOdd: PropTypes.string,\n        subscribeRoot: PropTypes.string,\n        subscribeRootSmall: PropTypes.string,\n        smallDisplayFix: PropTypes.string,\n        selectMenuRoot: PropTypes.string,\n        smallDisplay: PropTypes.string,\n    }).isRequired,\n    applicationsAvailable: PropTypes.arrayOf(PropTypes.shape({\n        value: PropTypes.string,\n        label: PropTypes.string,\n    })).isRequired,\n    throttlingPolicyList: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n    subscriptionRequest: PropTypes.shape({}).isRequired,\n    updateSubscriptionRequest: PropTypes.func.isRequired,\n    renderSmall: PropTypes.bool,\n};\nsubscribeToApi.defaultProps = {\n    renderSmall: false,\n};\n\nexport default withStyles(styles)(subscribeToApi);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Link from '@material-ui/core/Link';\nimport { Link as RouterLink } from 'react-router-dom';\nimport CustomIcon from 'AppComponents/Shared/CustomIcon';\nimport Icon from '@material-ui/core/Icon';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        padding: theme.spacing(1, 3),\n    },\n    link: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    linkNotActive: {\n        display: 'flex',\n        alignItems: 'center',\n        cursor: 'default',\n    },\n    icon: {\n        marginRight: theme.spacing(0.5),\n        width: 20,\n        height: 20,\n    },\n    selectedTagText: {\n        textIndent: 4,\n    },\n    apiGroup: {\n        color: theme.palette.grey[800],\n    },\n}));\n\nexport default function ApiBreadcrumbs(props) {\n    const classes = useStyles();\n    const theme = useTheme();\n    const { selectedTag } = props;\n    return (\n        <Paper elevation={0} className={classes.root}>\n            <Breadcrumbs aria-label='breadcrumb'>\n                <RouterLink\n                    to={theme.custom.tagWise.active && theme.custom.tagWise.style === 'page' ? '/api-groups' : '/apis'}\n                    className={classes.apiGroup}\n                >\n                    <Link color='inherit' className={classes.link}>\n                        <Icon className={classes.icon}>dynamic_feed</Icon>\n                        <FormattedMessage defaultMessage='API Groups' id='Apis.Listing.ApiBreadcrumbs.apigroups.main' />\n                    </Link>\n                </RouterLink>\n\n                {selectedTag && <Link color='inherit' className={classes.linkNotActive}>\n                    <CustomIcon width={16} height={16} icon='api' />\n                    <span className={classes.selectedTagText}>{selectedTag}</span>\n                </Link>}\n            </Breadcrumbs>\n        </Paper>\n    );\n}\n","import React from 'react';\nimport { SettingsConsumer } from './SettingsContext';\n\nconst withSettings = (WrappedComponent) => {\n    /**\n     * Higher order component with settings\n     * @param {*} props properties\n     * @returns {Context.Consumer}\n     */\n    function HOCWithSettings(props) {\n        return (\n            <SettingsConsumer>\n                {\n                    context => <WrappedComponent {...context} {...props} />\n                }\n            </SettingsConsumer>\n        );\n    }\n    return HOCWithSettings;\n};\n\nexport default withSettings;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport Chip from '@material-ui/core/Chip';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { FormattedMessage } from 'react-intl';\nimport MaterialIcons from 'MaterialIcons';\nimport CONSTS from 'AppData/Constants';\nimport ImageGenerator from './ImageGenerator';\nimport Api from '../../../data/api';\nimport { ApiContext } from '../Details/ApiContext';\n\n/**\n *\n *\n * @param {*} theme\n */\nconst styles = theme => ({\n    thumbContent: {\n        width: theme.custom.thumbnail.width - theme.spacing(1),\n        backgroundColor: theme.palette.background.paper,\n        padding: theme.spacing(1),\n        minHeight: 130,\n    },\n    thumbLeft: {\n        alignSelf: 'flex-start',\n        flex: 1,\n    },\n    thumbRight: {\n        alignSelf: 'flex-end',\n    },\n    thumbInfo: {\n        display: 'flex',\n    },\n    thumbHeader: {\n        width: theme.custom.thumbnail.width - theme.spacing(1),\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        cursor: 'pointer',\n        margin: 0,\n    },\n    contextBox: {\n        width: parseInt((theme.custom.thumbnail.width - theme.spacing(1)) / 2),\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        cursor: 'pointer',\n        margin: 0,\n        display: 'inline-block',\n        lineHeight: '1em',\n    },\n    thumbWrapper: {\n        position: 'relative',\n        paddingTop: 20,\n        marginRight: theme.spacing(2),\n    },\n    deleteIcon: {\n        fill: 'red',\n    },\n    textWrapper: {\n        color: theme.palette.text.secondary,\n        textDecoration: 'none',\n    },\n    imageWrapper: {\n        color: theme.palette.text.secondary,\n        backgroundColor: theme.palette.background.paper,\n        width: theme.custom.thumbnail.width + theme.spacing(1),\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    imageOverlap: {\n        position: 'absolute',\n        bottom: 1,\n        backgroundColor: theme.custom.thumbnail.contentBackgroundColor,\n    },\n});\n/**\n *\n *\n * @class DocThumb\n * @extends {React.Component}\n */\nconst windowURL = window.URL || window.webkitURL;\n\nclass DocThumb extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            active: true,\n            loading: false,\n            open: false,\n            overview_link: '',\n            isRedirect: false,\n            openMoreMenu: false,\n            category: MaterialIcons.categories[0].name,\n            selectedIcon: null,\n            color: null,\n            backgroundIndex: null,\n            imageObj: null,\n        };\n    }\n\n    /**\n     * Clean up resource\n     */\n    componentWillUnmount() {\n        if (this.state.thumbnail) {\n            windowURL.revokeObjectURL(this.state.imageObj);\n        }\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof DocThumb\n     */\n    render() {\n        const {\n            selectedIcon, color, backgroundIndex, category,\n        } = this.state;\n        const { doc, classes, theme } = this.props;\n        const { doc: {\n name, sourceType, apiName, apiVersion, id, apiUUID \n} } = this.props;\n        const details_link = '/apis/' + apiUUID + '/documents/' + id + '/details';\n        const { thumbnail } = theme.custom;\n        const imageWidth = thumbnail.width;\n        const defaultImage = thumbnail.defaultApiImage;\n\n        const ImageView = (\n            <ImageGenerator\n                width={imageWidth}\n                height={140}\n                api={doc}\n                fixedIcon={{\n                    key: selectedIcon,\n                    color,\n                    backgroundIndex,\n                    category,\n                    doc,\n                }}\n            />\n        );\n\n        return (\n            <div className={classes.thumbWrapper}>\n                <Link to={details_link} className={classes.imageWrapper}>\n                    {!defaultImage && ImageView}\n                    {defaultImage && <img src={defaultImage} />}\n                </Link>\n\n                <div\n                    className={classNames(classes.thumbContent, {\n                        [classes.imageOverlap]: thumbnail.contentPictureOverlap,\n                    })}\n                >\n                    <Link to={details_link} className={classes.textWrapper}>\n                        <Typography\n                            className={classes.thumbHeader}\n                            variant='h4'\n                            gutterBottom\n                            onClick={this.handleRedirectToAPIOverview}\n                            title={name}\n                        >\n                            {name}\n                        </Typography>\n                    </Link>\n                    <Typography variant='caption' gutterBottom align='left'>\n                        <FormattedMessage defaultMessage='Source Type:' id='Apis.Listing.DocThumb.sourceType' />\n                        {sourceType}\n                    </Typography>\n                    <div className={classes.thumbInfo}>\n                        <div className={classes.thumbLeft}>\n                            <Typography variant='subtitle1'>{apiName}</Typography>\n                            <Typography variant='caption' gutterBottom align='left'>\n                                <FormattedMessage defaultMessage='Api Name' id='Apis.Listing.DocThumb.apiName' />\n                            </Typography>\n                        </div>\n                        <div className={classes.thumbRight}>\n                            <Typography variant='subtitle1' align='right' className={classes.contextBox}>\n                                {apiVersion}\n                            </Typography>\n                            <Typography variant='caption' gutterBottom align='right'>\n                                <FormattedMessage defaultMessage='Api Version' id='Apis.Listing.DocThumb.apiVersion' />\n                            </Typography>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDocThumb.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n};\n\nDocThumb.contextType = ApiContext;\n\nexport default withStyles(styles, { withTheme: true })(DocThumb);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { createMuiTheme, MuiThemeProvider, withStyles } from '@material-ui/core/styles';\nimport MUIDataTable from 'mui-datatables';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport merge from 'lodash.merge';\nimport queryString from 'query-string';\nimport API from 'AppData/api';\nimport { withTheme } from '@material-ui/styles';\nimport Configurations from 'Config';\nimport StarRatingBar from 'AppComponents/Apis/Listing/StarRatingBar';\nimport withSettings from 'AppComponents/Shared/withSettingsContext';\nimport Loading from 'AppComponents/Base/Loading/Loading';\nimport Alert from 'AppComponents/Shared/Alert';\nimport Icon from '@material-ui/core/Icon';\nimport CustomIcon from 'AppComponents/Shared/CustomIcon';\nimport DefaultConfigurations from '../../../../defaultTheme';\nimport ImageGenerator from './ImageGenerator';\nimport ApiThumb from './ApiThumb';\nimport DocThumb from './DocThumb';\nimport { ApiContext } from '../Details/ApiContext';\nimport NoApi from './NoApi';\n\nconst styles = (theme) => ({\n    rowImageOverride: {\n        '& .material-icons': {\n            marginTop: 5,\n            color: `${theme.custom.thumbnail.iconColor} !important`,\n            fontSize: `${theme.custom.thumbnail.listViewIconSize}px !important`,\n        },\n    },\n    apiNameLink: {\n        display: 'flex',\n        alignItems: 'center',\n        '& span': {\n            marginLeft: theme.spacing(1),\n        },\n        color: theme.palette.getContrastText(theme.custom.listView.tableBodyEvenBackgrund),\n    },\n});\n/**\n * Table view for api listing\n *\n * @class ApiTableView\n * @extends {React.Component}\n */\nclass ApiTableView extends React.Component {\n    /**\n     * @inheritdoc\n     * @param {*} props properties\n     * @memberof ApiTableView\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: null,\n            loading: true,\n        };\n        this.page = 0;\n        this.count = 100;\n        this.rowsPerPage = 10;\n        this.pageType = null;\n    }\n\n    getMuiTheme = () => {\n        const { gridView, theme } = this.props;\n        let themeAdditions = {};\n        let muiTheme = {\n            overrides: {\n                MUIDataTable: {\n                    root: {\n                        backgroundColor: 'transparent',\n                        marginLeft: 40,\n                        marginBottom: 20,\n                        width: '100%',\n                    },\n                    paper: {\n                        boxShadow: 'none',\n                        backgroundColor: 'transparent',\n                        width: '100%',\n                    },\n                    tableRoot: {\n                        border: 'solid 1px #fff',\n                        '& a': {\n                            display: 'flex',\n                            alignItems: 'center',\n                        },\n                        '& a > div': {\n                            paddingRight: 10,\n                        },\n                        '& td': {\n                            whiteSpace: 'nowrap',\n                        },\n                        '& tr:nth-child(even)': {\n                            backgroundColor: theme.custom.listView.tableBodyEvenBackgrund,\n                            '& td': {\n                                color: theme.palette.getContrastText(theme.custom.listView.tableBodyEvenBackgrund),\n                            },\n                        },\n                        '& tr:nth-child(odd)': {\n                            backgroundColor: theme.custom.listView.tableBodyOddBackgrund,\n                            '& td': {\n                                color: theme.palette.getContrastText(theme.custom.listView.tableBodyOddBackgrund),\n                            },\n                        },\n                        '& th': {\n                            backgroundColor: theme.custom.listView.tableHeadBackground,\n                            color: theme.palette.getContrastText(theme.custom.listView.tableHeadBackground),\n                        },\n                    },\n                },\n                MUIDataTableBodyCell: {\n                    root: {\n                        backgroundColor: 'transparent',\n                        width: '100%',\n                    },\n                },\n            },\n        };\n        if (gridView) {\n            themeAdditions = {\n                overrides: {\n                    MUIDataTable: {\n                        tableRoot: {\n                            display: 'block',\n                            '& tbody': {\n                                display: 'flex',\n                                flexWrap: 'wrap',\n                                marginLeft: 0,\n                            },\n                            '& thead': {\n                                display: 'none',\n                            },\n                        },\n                        paper: {\n                            boxShadow: 'none',\n                            backgroundColor: 'transparent',\n                        },\n                    },\n                },\n            };\n        }\n        const systemTheme = merge(DefaultConfigurations, Configurations);\n        muiTheme = Object.assign(muiTheme, themeAdditions, systemTheme);\n        return createMuiTheme(muiTheme);\n    };\n\n    componentDidMount() {\n        this.apiType = this.context.apiType;\n        this.getData();\n    }\n\n    componentDidUpdate(prevProps) {\n        const { query, selectedTag } = this.props;\n        if (\n            this.apiType !== this.context.apiType\n            || query !== prevProps.query\n            || prevProps.selectedTag !== selectedTag\n        ) {\n            this.apiType = this.context.apiType;\n            this.getData();\n        }\n    }\n\n    // get data\n    getData = () => {\n        const { intl } = this.props;\n        this.xhrRequest()\n            .then((data) => {\n                const { body } = data;\n                const { list, pagination } = body;\n                const { total } = pagination;\n                this.count = total;\n                this.setState({ data: list });\n            })\n            .catch((error) => {\n                const { response } = error;\n                const { setTenantDomain } = this.props;\n                if (response && response.body.code === 901300) {\n                    setTenantDomain('INVALID');\n                    Alert.error(intl.formatMessage({\n                        defaultMessage: 'Invalid tenant domain',\n                        id: 'Apis.Listing.ApiTableView.invalid.tenant.domain',\n                    }));\n                } else {\n                    Alert.error(intl.formatMessage({\n                        defaultMessage: 'Error While Loading APIs',\n                        id: 'Apis.Listing.ApiTableView.error.loading',\n                    }));\n                }\n            })\n            .finally(() => {\n                this.setState({ loading: false });\n            });\n    };\n\n    xhrRequest = () => {\n        const { query, selectedTag } = this.props;\n        const { page, rowsPerPage } = this;\n        const { apiType } = this.context;\n        const api = new API();\n        const searchParam = new URLSearchParams(query);\n        const searchQuery = searchParam.get('query');\n        if (query && searchQuery !== null) {\n            const composeQuery = queryString.parse(query);\n            composeQuery.limit = this.rowsPerPage;\n            composeQuery.offset = page * rowsPerPage;\n            return api.search(composeQuery);\n        }\n\n        if (selectedTag) {\n            return api.getAllAPIs({ query: 'tag:' + selectedTag, limit: this.rowsPerPage, offset: page * rowsPerPage });\n        } else {\n            return api.getAllAPIs({ limit: this.rowsPerPage, offset: page * rowsPerPage });\n        }\n    };\n\n    changePage = (page) => {\n        const { intl } = this.props;\n        this.page = page;\n        this.setState({ loading: true });\n        this.xhrRequest()\n            .then((data) => {\n                const { body } = data;\n                const { list } = body;\n                this.setState({\n                    data: list,\n                });\n            })\n            .catch((e) => {\n                Alert.error(intl.formatMessage({\n                    defaultMessage: 'Error While Loading APIs',\n                    id: 'Apis.Listing.ApiTableView.error.loading',\n                }));\n            })\n            .finally(() => {\n                this.setState({ loading: false });\n            });\n    };\n\n    /**\n     * @inheritdoc\n     * @returns {Component}x\n     * @memberof ApiTableView\n     */\n    render() {\n        const { intl, gridView, theme } = this.props;\n        const { custom: { social: { showRating } } } = theme;\n        const { loading } = this.state;\n        const columns = [\n            {\n                name: 'id',\n                options: {\n                    display: 'excluded',\n                    filter: false,\n                },\n            },\n            {\n                name: 'name',\n                options: {\n                    customBodyRender: (value, tableMeta, updateValue, tableViewObj = this) => {\n                        if (tableMeta.rowData) {\n                            const artifact = tableViewObj.state.data[tableMeta.rowIndex];\n                            return <ImageGenerator api={artifact} width={30} height={30} />;\n                        }\n                    },\n                    sort: false,\n                    filter: false,\n                    display: 'excluded',\n                },\n            },\n            {\n                name: 'name',\n                label: intl.formatMessage({\n                    id: 'Apis.Listing.ApiTableView.name',\n                    defaultMessage: 'Name',\n                }),\n                options: {\n                    customBodyRender: (value, tableMeta, updateValue, tableViewObj = this) => {\n                        if (tableMeta.rowData) {\n                            const artifact = tableViewObj.state.data[tableMeta.rowIndex];\n                            const apiName = tableMeta.rowData[2];\n                            const apiId = tableMeta.rowData[0];\n                            const { classes } = this.props;\n\n                            if (artifact) {\n                                if (artifact.type === 'DOC') {\n                                    return (\n                                        <Link\n                                            to={'/apis/' + artifact.apiUUID + '/documents'}\n                                            className={classes.apiNameLink}\n                                        >\n                                            <Icon>library_books</Icon>\n\n                                            <span>\n                                                {' '}\n                                                <FormattedMessage\n                                                    id='Apis.Listing.TableView.TableView.doc.flag'\n                                                    defaultMessage='[Doc] '\n                                                />\n                                                {' '}\n                                                {apiName}\n                                            </span>\n                                        </Link>\n                                    );\n                                }\n                                return (\n                                    <Link\n                                        to={'/apis/' + apiId + '/overview'}\n                                        className={classes.rowImageOverride}\n                                        className={classes.apiNameLink}\n                                    >\n                                        <CustomIcon width={16} height={16} icon='api' strokeColor='#444444' />\n\n                                        <span>{apiName}</span>\n                                    </Link>\n                                );\n                            }\n                        }\n                    },\n                    sort: false,\n                    filter: false,\n                },\n            },\n            {\n                name: 'version',\n                label: intl.formatMessage({\n                    id: 'Apis.Listing.ApiTableView.version',\n                    defaultMessage: 'Version',\n                }),\n                options: {\n                    sort: false,\n                },\n            },\n            {\n                name: 'context',\n                label: intl.formatMessage({\n                    id: 'Apis.Listing.ApiTableView.context',\n                    defaultMessage: 'Context',\n                }),\n                options: {\n                    sort: false,\n                },\n            },\n            {\n                name: 'provider',\n                label: intl.formatMessage({\n                    id: 'Apis.Listing.ApiTableView.provider',\n                    defaultMessage: 'Provider',\n                }),\n                options: {\n                    sort: false,\n                },\n            },\n            {\n                name: 'type',\n                label: intl.formatMessage({\n                    id: 'Apis.Listing.ApiTableView.type',\n                    defaultMessage: 'Type',\n                }),\n                options: {\n                    sort: false,\n                },\n            },\n            {\n                name: 'rating',\n                label: intl.formatMessage({\n                    id: 'Apis.Listing.ApiTableView.rating',\n                    defaultMessage: 'Rating',\n                }),\n                options: {\n                    customBodyRender: (value, tableMeta, updateValue, tableViewObj = this) => {\n                        if (tableMeta.rowData) {\n                            const artifact = tableViewObj.state.data[tableMeta.rowIndex];\n                            if (artifact) {\n                                if (artifact.type !== 'DOC') {\n                                    const apiId = tableMeta.rowData[0];\n                                    const avgRating = tableMeta.rowData[8];\n                                    return (\n                                        <StarRatingBar\n                                            apiRating={avgRating}\n                                            apiId={apiId}\n                                            isEditable={false}\n                                            showSummary={false}\n                                        />\n                                    );\n                                }\n                            }\n                        }\n                    },\n                    sort: false,\n                    display: showRating ? 'true' : 'excluded',\n                },\n            },\n            {\n                name: 'avgRating',\n                options: {\n                    display: 'excluded',\n                    filter: false,\n                },\n            },\n        ];\n        const { page, count, rowsPerPage } = this;\n        const { data } = this.state;\n        const options = {\n            filterType: 'dropdown',\n            responsive: 'stacked',\n            serverSide: true,\n            search: false,\n            count,\n            page,\n            onTableChange: (action, tableState) => {\n                switch (action) {\n                    case 'changePage':\n                        this.changePage(tableState.page);\n                        break;\n                }\n            },\n            selectableRows: 'none',\n            rowsPerPage,\n            onChangeRowsPerPage: (numberOfRows) => {\n                const { page, count } = this;\n                if (page * numberOfRows > count) {\n                    this.page = 0;\n                }\n                this.rowsPerPage = numberOfRows;\n                this.getData();\n            },\n        };\n        if (gridView) {\n            options.customRowRender = (data, dataIndex, rowIndex, tableViewObj = this) => {\n                const artifact = tableViewObj.state.data[dataIndex];\n                if (artifact) {\n                    if (artifact.type === 'DOC') {\n                        return <tr key={rowIndex}><td><DocThumb doc={artifact} /></td></tr>;\n                    } else {\n                        return <tr key={rowIndex}><td><ApiThumb api={artifact} /></td></tr>;\n                    }\n                }\n                return <span />;\n            };\n            options.title = false;\n            options.filter = false;\n            options.print = false;\n            options.download = false;\n            options.viewColumns = false;\n            options.customToolbar = false;\n        } else {\n            options.filter = false;\n        }\n        if (page === 0 && this.count <= rowsPerPage) {\n            options.pagination = false;\n        } else {\n            options.pagination = true;\n        }\n        if (loading) {\n            return <Loading />;\n        }\n        if ((data && data.length === 0) || !data) {\n            return <NoApi />;\n        }\n        return (\n            <MuiThemeProvider theme={this.getMuiTheme()}>\n                <MUIDataTable title='' data={data} columns={columns} options={options} />\n            </MuiThemeProvider>\n        );\n    }\n}\n\nApiTableView.contextType = ApiContext;\n\nexport default withSettings(injectIntl(withTheme(withStyles(styles)(ApiTableView))));\n","/*\n * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Icon from '@material-ui/core/Icon';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { app } from 'Settings';\n\n/**\n * @inheritdoc\n * @param {*} theme theme object\n */\nconst styles = theme => ({\n    thumbContent: {\n        width: theme.custom.tagWise.thumbnail.width - theme.spacing(1),\n        backgroundColor: theme.palette.background.paper,\n        padding: theme.spacing(1),\n    },\n    thumbLeft: {\n        alignSelf: 'flex-start',\n        flex: 1,\n    },\n    thumbRight: {\n        alignSelf: 'flex-end',\n    },\n    thumbInfo: {\n        display: 'flex',\n    },\n    thumbHeader: {\n        width: theme.custom.tagWise.thumbnail.width - theme.spacing(1),\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        cursor: 'pointer',\n        justifyContent: 'center',\n        margin: 0,\n    },\n    contextBox: {\n        // eslint-disable-next-line radix\n        width: parseInt(150 - theme.spacing(0.5)),\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        cursor: 'pointer',\n        margin: 0,\n        display: 'inline-block',\n        lineHeight: '1em',\n    },\n    thumbWrapper: {\n        position: 'relative',\n        paddingTop: 20,\n        marginRight: theme.spacing(2),\n    },\n    deleteIcon: {\n        fill: 'red',\n    },\n    textWrapper: {\n        color: theme.custom.tagCloud.leftMenu.color,\n        '& .material-icons': {\n            color: theme.custom.tagCloud.leftMenu.color,\n        },\n    },\n    image: {\n        width: theme.custom.tagWise.thumbnail.width,\n    },\n    imageWrapper: {\n        color: theme.palette.text.secondary,\n        backgroundColor: theme.palette.background.paper,\n        width: theme.custom.tagWise.thumbnail.width + theme.spacing(1),\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    imageOverlap: {\n        position: 'absolute',\n        bottom: 1,\n        backgroundColor: theme.custom.thumbnail.contentBackgroundColor,\n    },\n});\n\n/**\n * Get APICategoryThumb\n * @param {*} props properties\n * @returns {*}\n */\nfunction APICategoryThumb(props) {\n    const {\n        category, path, classes, theme,\n    } = props;\n    const categoryLink = path + ':' + category.name;\n    const {\n        tagWise: {\n            thumbnail: { image },\n        },\n    } = theme.custom;\n\n    return (\n        <Link to={categoryLink} className={classes.textWrapper}>\n            <ListItem button>\n                <ListItemIcon>\n                    <Icon>label</Icon>\n                </ListItemIcon>\n                <ListItemText primary={category.name} />\n            </ListItem>\n        </Link>\n    );\n\n}\n\nAPICategoryThumb.propTypes = {\n    classes: PropTypes.shape({\n        thumbWrapper: PropTypes.shape({}).isRequired,\n        imageWrapper: PropTypes.shape({}).isRequired,\n        thumbContent: PropTypes.shape({}).isRequired,\n        imageOverlap: PropTypes.shape({}).isRequired,\n        textWrapper: PropTypes.shape({}).isRequired,\n        thumbHeader: PropTypes.shape({}).isRequired,\n        image: PropTypes.shape({}).isRequired,\n    }).isRequired,\n    theme: PropTypes.shape({\n        custom: PropTypes.shape({\n            tagWise: PropTypes.shape({}).isRequired,\n        }).isRequired,\n    }).isRequired,\n    category: PropTypes.shape({\n        name: PropTypes.string.isRequired,\n    }).isRequired,\n    path: PropTypes.shape({}).isRequired,\n    style: PropTypes.string.isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(APICategoryThumb);\n","/*\n * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useTheme, makeStyles } from '@material-ui/core/styles';\nimport { Link, useHistory } from 'react-router-dom';\nimport Typography from '@material-ui/core/Typography';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Icon from '@material-ui/core/Icon';\nimport { FormattedMessage } from 'react-intl';\nimport APICategoryThumb from './APICategoryThumb';\n\nconst useStyles = makeStyles(theme => ({\n    mainTitle: {\n        paddingTop: 10,\n    },\n    mainTitleWrapper: {\n        flexGrow: 1,\n    },\n    listContentWrapper: {\n        padding: `0 ${theme.spacing(3)}px`,\n    },\n    textWrapper: {\n        color: theme.custom.tagCloud.leftMenu.color,\n        '& .material-icons': {\n            color: theme.custom.tagCloud.leftMenu.color,\n        },\n    },\n    tagWiseThumbWrapper: {\n        display: 'flex',\n    },\n    filterTitle: {\n        fontWeight: 200,\n        paddingLeft: theme.spacing(2),\n        background: theme.custom.tagCloud.leftMenu.titleBackground,\n        color: theme.palette.getContrastText(theme.custom.tagCloud.leftMenu.titleBackground),\n        height: theme.custom.infoBar.height,\n        alignItems: 'center',\n        display: 'flex',\n    },\n}));\n\n/**\n * Shared listing page\n *\n * @class CategoryListingCategories\n * @extends {Component}\n */\nfunction CategoryListingCategories(props) {\n    const classes = useStyles();\n    const theme = useTheme();\n    const history = useHistory();\n    const {\n        custom: {\n            tagWise: {\n                key, active, style, showAllApis,\n            },\n        },\n    } = theme;\n\n\n    const tagWiseURL = '/apis?offset=0&query=api-category';\n    const { allCategories } = props;\n\n    /**\n     *\n     * @inheritdoctheme\n     * @returns {React.Component} @inheritdoc\n     * @memberof TagCloudListing\n     */\n\n    return allCategories && allCategories.length > 0 ? (\n        (\n            <React.Fragment>\n                <Typography variant='h6' gutterBottom className={classes.filterTitle}>\n                    <FormattedMessage defaultMessage='API Categories' id='Apis.Listing.CategoryListingCategories.title' />\n                </Typography>\n                <List component='nav' aria-label='main mailbox folders'>\n                    {Object.keys(allCategories).map((key) => {\n                        return <APICategoryThumb key={key} category={allCategories[key]} path={tagWiseURL} style={style} />;\n                    })}\n                </List>\n            </React.Fragment>\n        )\n    ) : (\n        <div className={classes.mainTitle}>\n            <Typography variant='subtitle1' gutterBottom align='center'>\n                <FormattedMessage\n                    defaultMessage='Categories cannot be found'\n                    id='Apis.Listing.CategoryListingCategories.categoriesNotFound'\n                />\n            </Typography>\n        </div>\n    );\n}\n\nCategoryListingCategories.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    allTags: PropTypes.shape({}).isRequired,\n};\n\nexport default CategoryListingCategories;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { useTheme, makeStyles } from '@material-ui/core/styles';\nimport Divider from '@material-ui/core/Divider';\nimport Typography from '@material-ui/core/Typography';\nimport { FormattedMessage } from 'react-intl';\nimport { TagCloud } from 'react-tagcloud';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\n\nconst useStyles = makeStyles(theme => ({\n    clickablePointer: {\n        cursor: 'pointer',\n        padding: theme.spacing(1),\n    },\n    filterTitle: {\n        fontWeight: 200,\n        paddingLeft: theme.spacing(2),\n        background: theme.custom.tagCloud.leftMenu.titleBackground,\n        color: theme.palette.getContrastText(theme.custom.tagCloud.leftMenu.titleBackground),\n        height: theme.custom.infoBar.height,\n        alignItems: 'center',\n        display: 'flex',\n    },\n}));\n\n/**\n * Component used to handle API Tag Cloud\n * @class ApiTagCloud\n * @extends {React.Component}\n * @param {any} value @inheritDoc\n */\nfunction ApiTagCloud(props) {\n    const classes = useStyles();\n    const theme = useTheme();\n    const {\n        custom: {\n            tagWise: { key, active },\n            tagCloud: { colorOptions },\n        },\n    } = theme;\n    const history = useHistory();\n\n    const { allTags } = props;\n    let apisTagWithoutGroups = null;\n    if (allTags.count !== 0) {\n        // Remve the tags with a sufix '-group' to ignore the\n        if (active) {\n            apisTagWithoutGroups = allTags.filter(item => item.value.search(key) === -1);\n        } else {\n            apisTagWithoutGroups = allTags;\n        }\n    }\n\n    /**\n     *\n     * @param {String} tag selected tag\n     * @memberof ApiTagCloud\n     */\n    const handleOnClick = (tag) => {\n        const tagSearchURL = `/apis?offset=0&query=tag:${tag.value}`;\n        history.push(tagSearchURL);\n    };\n\n    return (\n        apisTagWithoutGroups && (\n            <React.Fragment>\n                <Typography variant='h6' gutterBottom className={classes.filterTitle}>\n                    <FormattedMessage defaultMessage='Tag Cloud' id='Apis.Listing.ApiTagCloud.title' />\n                </Typography>\n                <TagCloud\n                    minSize={14}\n                    maxSize={25}\n                    colorOptions={colorOptions}\n                    tags={apisTagWithoutGroups}\n                    shuffle={false}\n                    className={classes.clickablePointer}\n                    onClick={tag => handleOnClick(tag)}\n                />\n            </React.Fragment>\n        )\n    );\n}\n\nApiTagCloud.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    tag: PropTypes.shape({}).isRequired,\n    listType: PropTypes.string.isRequired,\n    apiType: PropTypes.string.isRequired,\n    allTags: PropTypes.shape({}).isRequired,\n};\n\nexport default ApiTagCloud;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport { withStyles } from '@material-ui/core/styles';\nimport Chip from '@material-ui/core/Chip';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport MaterialIcons from 'MaterialIcons';\nimport StarRatingBar from 'AppComponents/Apis/Listing/StarRatingBar';\nimport ImageGenerator from './ImageGenerator';\nimport Api from '../../../data/api';\nimport { ApiContext } from '../Details/ApiContext';\nimport classNames from 'classnames';\n\n/**\n *\n *\n * @param {*} theme\n */\nconst styles = theme => ({\n    card: {\n        margin: theme.spacing.unit * (3 / 2),\n        maxWidth: theme.custom.thumbnail.width,\n        transition: 'box-shadow 0.3s ease-in-out',\n    },\n    apiDetails: {\n        padding: theme.spacing.unit,\n        background: theme.custom.thumbnail.contentBackgroundColor,\n        padding: theme.spacing.unit,\n        color: theme.palette.getContrastText(theme.custom.thumbnail.contentBackgroundColor),\n        '& a': {\n            color: theme.palette.getContrastText(theme.custom.thumbnail.contentBackgroundColor),\n        },\n    },\n    suppressLinkStyles: {\n        textDecoration: 'none',\n        color: theme.palette.text.disabled,\n    },\n    row: {\n        display: 'inline-block',\n    },\n    thumbBy: {\n        'padding-left': '5px',\n    },\n    media: {\n        // ⚠️ object-fit is not supported by IE11.\n        objectFit: 'cover',\n    },\n    thumbContent: {\n        width: theme.custom.thumbnail.width - theme.spacing(2),\n    },\n    thumbLeft: {\n        alignSelf: 'flex-start',\n        flex: 1,\n        width: '25%',\n        'padding-left': '5px',\n        'padding-right': '65px',\n    },\n    thumbRight: {\n        alignSelf: 'flex-end',\n    },\n    thumbInfo: {\n        display: 'flex',\n    },\n    thumbHeader: {\n        width: theme.custom.thumbnail.width - theme.spacing.unit,\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        cursor: 'pointer',\n        margin: 0,\n        'padding-left': '5px',\n    },\n    contextBox: {\n        width: parseInt((theme.custom.thumbnail.width - theme.spacing.unit) / 2, 10),\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        cursor: 'pointer',\n        margin: 0,\n        display: 'inline-block',\n        lineHeight: '1em',\n        'padding-top': 5,\n        'padding-right': 5,\n        'padding-bottom': 1.5,\n        textAlign: 'left',\n    },\n    thumbWrapper: {\n        position: 'relative',\n        paddingTop: 20,\n        marginRight: theme.spacing.unit * 2,\n    },\n    deleteIcon: {\n        fill: 'red',\n    },\n    textWrapper: {\n        color: theme.palette.text.secondary,\n        textDecoration: 'none',\n    },\n    imageWrapper: {\n        color: theme.custom.thumbnail.iconColor,\n        width: theme.custom.thumbnail.width,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    imageOverlap: {\n        position: 'absolute',\n        bottom: 1,\n    },\n    chipWrapper: {\n        marginTop: '15px',\n    },\n    ratingWrapper: {\n        marginTop: '20px',\n    },\n});\n\nconst windowURL = window.URL || window.webkitURL;\n\n/**\n *\n * Render API Card component in API listing card view,containing essential API information like name , version ect\n * @class RecommendedApiThumb\n * @extends {Component}\n */\nclass RecommendedApiThumb extends React.Component {\n    /**\n     *Creates an instance of RecommendedApiThumb.\n     * @param {*} props\n     * @memberof RecommendedApiThumb\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            category: MaterialIcons.categories[0].name,\n            selectedIcon: null,\n            color: null,\n            backgroundIndex: null,\n            imageObj: null,\n            isHover: false,\n        };\n        this.toggleMouseOver = this.toggleMouseOver.bind(this);\n    }\n\n    /**\n     *\n     *\n     * @memberof RecommendedApiThumb\n     */\n    componentDidMount() {\n        const { api } = this.props;\n        const restApi = new Api();\n\n        const promisedThumbnail = restApi.getAPIThumbnail(api.id);\n\n        promisedThumbnail.then((response) => {\n            if (response && response.data) {\n                if (response.headers['content-type'] === 'application/json') {\n                    const iconJson = JSON.parse(response.data);\n                    this.setState({\n                        selectedIcon: iconJson.key,\n                        category: iconJson.category,\n                        color: iconJson.color,\n                        backgroundIndex: iconJson.backgroundIndex,\n                    });\n                } else if (response && response.data.size > 0) {\n                    const url = windowURL.createObjectURL(response.data);\n                    this.setState({ imageObj: url });\n                }\n            }\n        });\n    }\n\n    /**\n     * Clean up resource\n     */\n    componentWillUnmount() {\n        if (this.state.thumbnail) {\n            windowURL.revokeObjectURL(this.state.imageObj);\n        }\n    }\n\n    /**\n     * Get Path Prefix depedning on the respective API Type being rendered\n     *\n     * @returns {String} path\n     * @memberof RecommendedApiThumb\n     */\n    getPathPrefix() {\n        const path = '/apis/';\n        return path;\n    }\n\n    /**\n     * Toggle mouse Hover state to set the card `raised` property\n     *\n     * @param {React.SyntheticEvent} event mouseover and mouseout\n     * @memberof RecommendedApiThumb\n     */\n    toggleMouseOver(event) {\n        this.setState({ isHover: event.type === 'mouseover' });\n    }\n\n    /**\n     * @inheritdoc\n     * @returns {React.Component} @inheritdoc\n     * @memberof RecommendedApiThumb\n     */\n    render() {\n        const {\n            imageObj, selectedIcon, color, backgroundIndex, category, isHover,\n        } = this.state;\n        const path = this.getPathPrefix();\n\n        // const detailsLink = path + this.props.api.id;\n        const detailsLink = path + this.props.api.id;\n        const {\n            api, classes, theme, customWidth, customHeight, showInfo,\n        } = this.props;\n        const { thumbnail } = theme.custom;\n        const { name, version, context } = api;\n\n        let { provider } = api;\n        // if (\n        //     api.businessInformation &&\n        //     api.businessInformation.businessOwner &&\n        //     api.businessInformation.businessOwner.trim() !== ''\n        // ) {\n        //     provider = api.businessInformation.businessOwner;\n        // }\n        // if (!api.lifeCycleStatus) {\n        //     api.lifeCycleStatus = api.status;\n        // }\n        const imageWidth = customWidth || thumbnail.width;\n        const imageHeight = customHeight || 140;\n        const defaultImage = thumbnail.defaultApiImage;\n\n        let ImageView;\n        if (imageObj) {\n            ImageView = (\n                <img\n                    height={imageHeight}\n                    width={imageWidth}\n                    src={imageObj}\n                    alt='API Thumbnail'\n                    className={classes.media}\n                />\n            );\n        } else {\n            ImageView = (\n                <ImageGenerator\n                    width={imageWidth}\n                    height={imageHeight}\n                    api={api}\n                    fixedIcon={{\n                        key: selectedIcon,\n                        color,\n                        backgroundIndex,\n                        category,\n                        api,\n                    }}\n                />\n            );\n        }\n        return (\n            <Card\n                onMouseOver={this.toggleMouseOver}\n                onFocus={this.toggleMouseOver}\n                onMouseOut={this.toggleMouseOver}\n                onBlur={this.toggleMouseOver}\n                raised={isHover}\n                className={classNames('image-thumbnail', classes.card)}\n            >\n                <CardMedia>\n                    <Link to={detailsLink} className={classes.suppressLinkStyles}>\n                        {!defaultImage && ImageView}\n                        {defaultImage && <img src={defaultImage} alt='img' />}\n                    </Link>\n                </CardMedia>\n                {showInfo && (\n                    <CardContent classes={{ root: classes.apiDetails }}>\n                        <Link to={detailsLink} className={classes.textWrapper}>\n                            <Typography\n                                className={classes.thumbHeader}\n                                variant='h5'\n                                gutterBottom\n                                onClick={this.handleRedirectToAPIOverview}\n                                title={name}\n                            >\n                                {name}\n                            </Typography>\n                        </Link>\n                        <div className={classes.thumbInfo}>\n                            <div className={classes.thumbLeft}>\n                                <Typography\n                                    variant='subtitle1'\n                                    gutterBottom\n                                    align='left'\n                                    className={classNames('api-thumb-rating', classes.ratingWrapper)}\n                                >\n                                    <StarRatingBar\n                                        apiRating={api.avgRating}\n                                        apiId={api.id}\n                                        isEditable={false}\n                                        showSummary={false}\n                                    />\n                                </Typography>\n                            </div>\n                            <div className={classes.thumbRight}>\n                                <Typography\n                                    variant='subtitle1'\n                                    gutterBottom\n                                    align='right'\n                                    className={classes.chipWrapper}\n                                >\n                                    {(api.type === 'GRAPHQL' || api.transportType === 'GRAPHQL') && (\n                                        <Chip\n                                            label={api.transportType === undefined ? api.type : api.transportType}\n                                            color='primary'\n                                        />\n                                    )}\n                                </Typography>\n                            </div>\n                        </div>\n                    </CardContent>\n                )}\n            </Card>\n        );\n    }\n}\nRecommendedApiThumb.defaultProps = {\n    customWidth: null,\n    customHeight: null,\n    showInfo: true,\n};\nRecommendedApiThumb.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    customWidth: PropTypes.number,\n    customHeight: PropTypes.number,\n    showInfo: PropTypes.bool,\n};\n\nRecommendedApiThumb.contextType = ApiContext;\n \nexport default withStyles(styles, { withTheme: true })(RecommendedApiThumb);\n ","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { createMuiTheme, MuiThemeProvider, withStyles } from '@material-ui/core/styles';\nimport MUIDataTable from 'mui-datatables';\nimport { injectIntl } from 'react-intl';\nimport API from 'AppData/api';\nimport { withTheme } from '@material-ui/styles';\nimport Configurations from 'Config';\nimport StarRatingBar from 'AppComponents/Apis/Listing/StarRatingBar';\nimport withSettings from 'AppComponents/Shared/withSettingsContext';\nimport Loading from 'AppComponents/Base/Loading/Loading';\nimport Alert from 'AppComponents/Shared/Alert';\nimport CustomIcon from 'AppComponents/Shared/CustomIcon';\nimport ImageGenerator from './ImageGenerator';\nimport RecommendedApiThumb from './RecommendedApiThumb';\nimport { ApiContext } from '../Details/ApiContext';\n\nconst styles = theme => ({\n    rowImageOverride: {\n        '& .material-icons': {\n            marginTop: 5,\n            color: `${theme.custom.thumbnail.iconColor} !important`,\n            fontSize: `${theme.custom.thumbnail.listViewIconSize}px !important`,\n        },\n    },\n    apiNameLink: {\n        display: 'flex',\n        alignItems: 'center',\n        '& span': {\n            marginLeft: theme.spacing(1),\n        },\n        color: theme.palette.getContrastText(theme.custom.listView.tableBodyEvenBackgrund),\n    },\n});\n/**\n * Table view for api listing\n *\n * @class Recommendations\n * @extends {React.Component}\n */\nclass Recommendations extends React.Component {\n    /**\n     * @inheritdoc\n     * @param {*} props properties\n     * @memberof Recommendations\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: null,\n            loading: true,\n        };\n    }\n\n    getMuiTheme = () => {\n        const { gridView, theme } = this.props;\n        let themeAdditions = {};\n        let muiTheme = {\n            overrides: {\n                MUIDataTable: {\n                    root: {\n                        backgroundColor: 'transparent',\n                        marginLeft: 40,\n                        marginBottom: 20,\n                        width: '100%',\n                    },\n                    paper: {\n                        boxShadow: 'none',\n                        backgroundColor: 'transparent',\n                        width: '100%',\n                    },\n                    tableRoot: {\n                        border: 'solid 1px #fff',\n                        '& a': {\n                            display: 'flex',\n                            alignItems: 'center',\n                        },\n                        '& a > div': {\n                            paddingRight: 10,\n                        },\n                        '& td': {\n                            whiteSpace: 'nowrap',\n                        },\n                        '& tr:nth-child(even)': {\n                            backgroundColor: theme.custom.listView.tableBodyEvenBackgrund,\n                            '& td': {\n                                color: theme.palette.getContrastText(theme.custom.listView.tableBodyEvenBackgrund),\n                            },\n                        },\n                        '& tr:nth-child(odd)': {\n                            backgroundColor: theme.custom.listView.tableBodyOddBackgrund,\n                            '& td': {\n                                color: theme.palette.getContrastText(theme.custom.listView.tableBodyOddBackgrund),\n                            },\n                        },\n                        '& th': {\n                            backgroundColor: theme.custom.listView.tableHeadBackground,\n                            color: theme.palette.getContrastText(theme.custom.listView.tableHeadBackground),\n                        },\n                    },\n                },\n                MUIDataTableBodyCell: {\n                    root: {\n                        backgroundColor: 'transparent',\n                        width: '100%',\n                    },\n                },\n            },\n        };\n        if (gridView) {\n            themeAdditions = {\n                overrides: {\n                    MUIDataTable: {\n                        tableRoot: {\n                            display: 'block',\n                            '& tbody': {\n                                display: 'flex',\n                                flexWrap: 'wrap',\n                                marginLeft: 0,\n                            },\n                            '& thead': {\n                                display: 'none',\n                            },\n                        },\n                        paper: {\n                            boxShadow: 'none',\n                            backgroundColor: 'transparent',\n                        },\n                    },\n                },\n            };\n        }\n        muiTheme = Object.assign(muiTheme, themeAdditions, Configurations);\n        return createMuiTheme(muiTheme);\n    };\n\n    componentDidMount() {\n        this.getData();\n    }\n\n    componentDidUpdate(prevProps) {\n        const { query, selectedTag } = this.props;\n        if (\n            query !== prevProps.query ||\n            prevProps.selectedTag !== selectedTag\n        ) {\n            this.getData();\n        }\n    }\n\n    // get data\n    getData = () => {\n        const { intl } = this.props;\n        this.xhrRequest()\n            .then((data) => {\n                const { body } = data;\n                const { list } = body;\n                this.setState({ data: list });\n            })\n            .catch((error) => {\n                const { response } = error;\n                const { setTenantDomain } = this.props;\n                if (response && response.body.code === 901300) {\n                    setTenantDomain('INVALID');\n                    Alert.error(intl.formatMessage({\n                        defaultMessage: 'Invalid tenant domain',\n                        id: 'Apis.Listing.Recommendations.invalid.tenant.domain',\n                    }));\n                } else {\n                    Alert.error(intl.formatMessage({\n                        defaultMessage: 'Error While Loading APIs',\n                        id: 'Apis.Listing.Recommendations.error.loading',\n                    }));\n                }\n            })\n            .finally(() => {\n                this.setState({ loading: false });\n            });\n    };\n\n    xhrRequest = () => {\n        const api = new API();\n        return api.getApiRecommendations();\n    };\n\n    /**\n     * @inheritdoc\n     * @returns {Component}x\n     * @memberof Recommendations\n     */\n    render() {\n        const { intl, gridView } = this.props;\n        const { loading } = this.state;\n        const columns = [\n            {\n                name: 'id',\n                options: {\n                    display: 'excluded',\n                    filter: false,\n                },\n            },\n            {\n                name: 'name',\n                options: {\n                    customBodyRender: (value, tableMeta, updateValue, tableViewObj = this) => {\n                        if (tableMeta.rowData) {\n                            const artifact = tableViewObj.state.data[tableMeta.rowIndex];\n                            return <ImageGenerator api={artifact} width={30} height={30} />;\n                        }\n                    },\n                    sort: false,\n                    filter: false,\n                    display: 'excluded',\n                },\n            },\n            {\n                name: 'name',\n                label: intl.formatMessage({\n                    id: 'Apis.Listing.Recommendations.name',\n                    defaultMessage: 'Name',\n                }),\n                options: {\n                    customBodyRender: (tableMeta, tableViewObj = this) => {\n                        if (tableMeta.rowData) {\n                            const artifact = tableViewObj.state.data[tableMeta.rowIndex];\n                            const apiName = tableMeta.rowData[2];\n                            const apiId = tableMeta.rowData[0];\n                            const { classes } = this.props;\n\n                            if (artifact) {\n                                return (\n                                    <Link\n                                        to={'/apis/' + apiId + '/overview'}\n                                        className={classes.rowImageOverride}\n                                        className={classes.apiNameLink}\n                                    >\n                                        <CustomIcon width={16} height={16} icon='api' strokeColor='#444444' />\n\n                                        <span>{apiName}</span>\n                                    </Link>\n                                );\n                            }\n                        }\n                    },\n                    sort: false,\n                    filter: false,\n                },\n            },\n            {\n                name: 'rating',\n                label: intl.formatMessage({\n                    defaultMessage: 'Rating',\n                    id: 'Apis.Listing.Recommendations.rating',\n                }),\n                options: {\n                    customBodyRender: (value, tableMeta, updateValue, tableViewObj = this) => {\n                        if (tableMeta.rowData) {\n                            const artifact = tableViewObj.state.data[tableMeta.rowIndex];\n                            if (artifact) {\n                                if (artifact.type !== 'DOC') {\n                                    const apiId = tableMeta.rowData[0];\n                                    const avgRating = tableMeta.rowData[8];\n                                    return (\n                                        <StarRatingBar\n                                            apiRating={avgRating}\n                                            apiId={apiId}\n                                            isEditable={false}\n                                            showSummary={false}\n                                        />\n                                    );\n                                }\n                            }\n                        }\n                    },\n                    sort: false,\n                },\n            },\n            {\n                name: 'avgRating',\n                options: {\n                    display: 'excluded',\n                    filter: false,\n                },\n            },\n        ];\n        const { data } = this.state;\n        const options = {\n            filterType: 'dropdown',\n            responsive: 'stacked',\n            serverSide: true,\n            search: false,\n        };\n        if (gridView) {\n            options.customRowRender = (data, dataIndex, rowIndex, tableViewObj = this) => {\n                const artifact = tableViewObj.state.data[dataIndex];\n                if (artifact) {\n                    return <tr key={rowIndex}><td><RecommendedApiThumb api={artifact} /></td></tr>;\n                }\n                return <span />;\n            };\n            options.title = true;\n            options.filter = false;\n            options.print = false;\n            options.download = false;\n            options.viewColumns = false;\n            options.customToolbar = false;\n            options.rowsPerPageOptions = false;\n            options.pagination = false;\n        } else {\n            options.filter = false;\n        }\n        if (loading) {\n            return <Loading />;\n        }\n        if ((data && data.length === 0) || !data) {\n            return null;\n        }\n        return (\n            <MuiThemeProvider theme={this.getMuiTheme()}>\n                <MUIDataTable title='Recommended APIs for you' data={data} columns={columns} options={options} />\n            </MuiThemeProvider>\n        );\n    }\n}\n\nRecommendations.contextType = ApiContext;\n\nexport default withSettings(injectIntl(withTheme(withStyles(styles)(Recommendations))));\n\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport { FormattedMessage } from 'react-intl';\nimport IconButton from '@material-ui/core/IconButton';\nimport Icon from '@material-ui/core/Icon';\nimport { withStyles } from '@material-ui/core/styles';\nimport classNames from 'classnames';\nimport CustomIcon from 'AppComponents/Shared/CustomIcon';\nimport Settings from 'AppComponents/Shared/SettingsContext';\nimport API from 'AppData/api';\nimport ApiBreadcrumbs from './ApiBreadcrumbs';\nimport ApiTableView from './ApiTableView';\nimport { ApiContext } from '../Details/ApiContext';\nimport TagCloudListingTags from './TagCloudListingTags';\nimport CategoryListingCategories from './CategoryListingCategories';\nimport ApiTagCloud from './ApiTagCloud';\nimport Recommendations from './Recommendations';\nimport AuthManager from '../../../data/AuthManager';\n\nconst styles = (theme) => ({\n    rightIcon: {\n        marginLeft: theme.spacing(1),\n    },\n    button: {\n        margin: theme.spacing(1),\n        marginBottom: 0,\n    },\n    buttonRight: {\n        alignSelf: 'flex-end',\n        display: 'flex',\n    },\n    ListingWrapper: {\n        paddingTop: 10,\n        paddingLeft: 35,\n        maxWidth: theme.custom.contentAreaWidth,\n    },\n    appBar: {\n        height: 70,\n        background: theme.custom.infoBar.background,\n        color: theme.palette.getContrastText(theme.custom.infoBar.background),\n        borderBottom: 'solid 1px ' + theme.palette.grey.A200,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    mainIconWrapper: {\n        paddingTop: 13,\n        paddingLeft: 20,\n        paddingRight: 20,\n    },\n    mainTitle: {\n        paddingTop: 10,\n    },\n    mainTitleWrapper: {\n        flexGrow: 1,\n    },\n    listContentWrapper: {\n        padding: `0 ${theme.spacing(3)}px`,\n        display: 'flex',\n    },\n    iconDefault: {\n        color: theme.palette.getContrastText(theme.custom.infoBar.background),\n    },\n    iconSelected: {\n        color: theme.custom.infoBar.listGridSelectedColor,\n    },\n    content: {\n        flexGrow: 1,\n        display: 'flex',\n        flex: 1,\n        flexDirection: 'column',\n        paddingBottom: theme.spacing(3),\n    },\n    contentWithTags: {\n        marginLeft: theme.custom.tagCloud.leftMenu.width,\n    },\n    contentWithoutTags: {\n        marginLeft: 0,\n    },\n    contentWithTagsHidden: {\n        marginLeft: theme.custom.tagCloud.leftMenu.sliderWidth,\n    },\n    LeftMenu: {\n        backgroundColor: theme.custom.tagCloud.leftMenu.background,\n        color: theme.custom.tagCloud.leftMenu.color,\n        textAlign: 'left',\n        fontFamily: theme.typography.fontFamily,\n        position: 'absolute',\n        bottom: 0,\n        paddingLeft: 0,\n        width: theme.custom.tagCloud.leftMenu.width,\n        top: 0,\n        left: 0,\n        overflowY: 'auto',\n    },\n    LeftMenuForSlider: {\n        backgroundColor: theme.custom.tagCloud.leftMenu.background,\n        color: theme.custom.tagCloud.leftMenu.color,\n        textAlign: 'left',\n        fontFamily: theme.typography.fontFamily,\n        position: 'absolute',\n        bottom: 0,\n        paddingLeft: 0,\n        width: theme.custom.tagCloud.leftMenu.sliderWidth,\n        top: 0,\n        left: 0,\n        overflowY: 'auto',\n        display: 'flex',\n    },\n    sliderButton: {\n        fontWeight: 200,\n        background: theme.custom.tagCloud.leftMenu.sliderBackground,\n        color: theme.palette.getContrastText(theme.custom.tagCloud.leftMenu.sliderBackground),\n        height: theme.custom.infoBar.height,\n        alignItems: 'center',\n        display: 'flex',\n        position: 'absolute',\n        right: 0,\n        cursor: 'pointer',\n    },\n    rotatedText: {\n        transform: 'rotate(270deg)',\n        transformOrigin: 'left bottom 0',\n        position: 'absolute',\n        whiteSpace: 'nowrap',\n        top: theme.custom.infoBar.height * 2,\n        marginLeft: 23,\n        cursor: 'pointer',\n    },\n    recommendationsBar: {\n        height: 60,\n        background: theme.custom.infoBar.background,\n        color: theme.palette.getContrastText(theme.custom.infoBar.background),\n        borderBottom: 'solid 1px ' + theme.palette.grey.A200,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n});\n\n/**\n * Shared listing page\n *\n * @class CommonListing\n * @extends {Component}\n */\nclass CommonListing extends React.Component {\n    static contextType = Settings;\n\n    /**\n     * Constructor\n     *\n     * @param {*} props Properties\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            listType: props.theme.custom.defaultApiView,\n            allTags: null,\n            showLeftMenu: false,\n            isMonetizationEnabled: false,\n            isRecommendationEnabled: false,\n        };\n    }\n\n    /**\n     *\n     * Switch the view between grid and list view\n     * @param {String} value view type\n     * @memberof CommonListing\n     */\n    setListType = (value) => {\n        this.setState({ listType: value });\n    };\n\n    /**\n     *\n     * Get all tags\n     * @memberof CommonListing\n     */\n    componentDidMount() {\n        const restApiClient = new API();\n        const promisedTags = restApiClient.getAllTags();\n        promisedTags\n            .then((response) => {\n                this.setState({ allTags: response.body.list });\n            })\n            .catch((error) => {\n                console.log(error);\n            });\n        const promisedCategories = restApiClient.apiCategories();\n            promisedCategories\n                .then((response) => {\n                    this.setState({ allCategories: response.body.list });\n                })\n                .catch((error) => {\n                    console.log(error);\n                });\n        this.isMonetizationEnabled();\n        this.isRecommendationEnabled();\n    }\n\n    toggleLeftMenu = () => {\n        this.setState((prevState) => ({ showLeftMenu: !prevState.showLeftMenu }));\n    };\n\n    /**\n     * retrieve Settings from the context and check the monetization enabled\n     */\n    isMonetizationEnabled = () => {\n        const settingsContext = this.context;\n        const enabled = settingsContext.settings.monetizationEnabled;\n        this.setState({ isMonetizationEnabled: enabled });\n    }\n\n    /**\n     * retrieve Settings from the context and check whether recommendation is enabled\n     */\n    isRecommendationEnabled = () => {\n        const settingsContext = this.context;\n        const enabled = settingsContext.settings.recommendationEnabled;\n        this.setState({ isRecommendationEnabled: enabled });\n    }\n\n    /**\n     *\n     * @inheritdoctheme\n     * @returns {React.Component} @inheritdoc\n     * @memberof CommonListing\n     */\n    render() {\n        const {\n            theme,\n            classes,\n            location: { search },\n        } = this.props;\n        const user = AuthManager.getUser();\n        const {\n            custom: {\n                tagWise: { key, active, style },\n                tagCloud: { active: tagCloudActive },\n            },\n        } = theme;\n        const {\n            listType, allTags, showLeftMenu, isMonetizationEnabled, allCategories, isRecommendationEnabled\n        } = this.state;\n        const strokeColorMain = theme.palette.getContrastText(theme.custom.infoBar.background);\n        const searchParam = new URLSearchParams(search);\n        const searchQuery = searchParam.get('query');\n        let selectedTag = null;\n        if (search && searchQuery !== null) {\n            // For the tagWise search\n            if (active && key) {\n                const splits = searchQuery.split(':');\n                if (splits.length > 1 && splits[1].search(key) != -1) {\n                    const splitTagArray = splits[1].split(key);\n                    if (splitTagArray.length > 0) {\n                        selectedTag = splitTagArray[0];\n                    }\n                } else if (splits.length > 1 && splits[0] === 'tag') {\n                    selectedTag = splits[1];\n                }\n            }\n        }\n        const tagPaneVisible = allTags && allTags.length > 0 && (tagCloudActive || active);\n        const categoryPaneVisible = allCategories && allCategories.length > 0;\n        return (\n            <>\n                {(categoryPaneVisible || tagPaneVisible) && showLeftMenu && (\n                    <div className={classes.LeftMenu}>\n                        <div className={classes.sliderButton} onClick={this.toggleLeftMenu}>\n                            <Icon>keyboard_arrow_left</Icon>\n                        </div>\n                        {categoryPaneVisible && <CategoryListingCategories allCategories={allCategories} />}\n                        {tagPaneVisible && active && <TagCloudListingTags allTags={allTags} />}\n                        {tagPaneVisible && tagCloudActive && <ApiTagCloud allTags={allTags} />}\n                    </div>\n                )}\n                {(categoryPaneVisible || tagPaneVisible) && !showLeftMenu && (\n                    <div className={classes.LeftMenuForSlider}>\n                        <div className={classes.sliderButton} onClick={this.toggleLeftMenu}>\n                            <Icon>keyboard_arrow_right</Icon>\n                        </div>\n                        <div className={classes.rotatedText} onClick={this.toggleLeftMenu}>\n                            <FormattedMessage defaultMessage='Tag Cloud' id='Apis.Listing.Listing.ApiTagCloud.title' />\n                        </div>\n                    </div>\n                )}\n\n                <main\n                    className={classNames(\n                        classes.content,\n                        { [classes.contentWithoutTags]: !(tagPaneVisible || categoryPaneVisible) || !showLeftMenu },\n                        { [classes.contentWithTagsHidden]: (tagPaneVisible || categoryPaneVisible) && !showLeftMenu },\n                        { [classes.contentWithTags]: (tagPaneVisible || categoryPaneVisible) && showLeftMenu },\n                    )}\n                    id='commonListing'\n                >\n                    <div className={classes.appBar} id='commonListingAppBar'>\n                        <div className={classes.mainIconWrapper}>\n                            <CustomIcon strokeColor={strokeColorMain} width={42} height={42} icon='api' />\n                        </div>\n                        <div className={classes.mainTitleWrapper} id='mainTitleWrapper'>\n                            <Typography variant='h4' className={classes.mainTitle}>\n                                <FormattedMessage defaultMessage='APIs' id='Apis.Listing.Listing.apis.main' />\n                            </Typography>\n                        </div>\n                        <div className={classes.buttonRight} id='listGridWrapper'>\n                            <IconButton className={classes.button} onClick={() => this.setListType('list')}>\n                                <Icon\n                                    className={classNames(\n                                        { [classes.iconSelected]: listType === 'list' },\n                                        { [classes.iconDefault]: listType === 'grid' },\n                                    )}\n                                >\n                                    list\n                                </Icon>\n                            </IconButton>\n                            <IconButton className={classes.button} onClick={() => this.setListType('grid')}>\n                                <Icon\n                                    className={classNames(\n                                        { [classes.iconSelected]: listType === 'grid' },\n                                        { [classes.iconDefault]: listType === 'list' },\n                                    )}\n                                >\n                                    grid_on\n                                </Icon>\n                            </IconButton>\n                        </div>\n                    </div>\n                    {active && allTags && allTags.length > 0 && <ApiBreadcrumbs selectedTag={selectedTag} />}\n                    <div className={classes.listContentWrapper}>\n                        {listType === 'grid' && (\n                            <ApiContext.Provider value={{ isMonetizationEnabled }}>\n                                <ApiTableView gridView query={search} />\n                            </ApiContext.Provider>\n                        )}\n                        {listType === 'list' && (\n                            <ApiContext.Provider value={{ isMonetizationEnabled }}>\n                                <ApiTableView gridView={false} query={search} />\n                            </ApiContext.Provider>\n                        )}\n                    </div>\n                    {isRecommendationEnabled && user &&\n                        <div>\n                            {active && allTags && allTags.length > 0 && <ApiBreadcrumbs selectedTag={selectedTag} />}\n                            <div className={classes.listContentWrapper}>\n                                {listType === 'grid' && (\n                                    <ApiContext.Provider value={{ isRecommendationEnabled }}>\n                                        <Recommendations gridView query={search} />\n                                    </ApiContext.Provider>\n                                )}\n                                {listType === 'list' && (\n                                    <ApiContext.Provider value={{ isRecommendationEnabled }}>\n                                        <Recommendations gridView query={search} />\n                                    </ApiContext.Provider>\n                                )}\n                            </div>\n                        </div>\n                    }\n                </main>\n            </>\n        );\n    }\n}\n\nCommonListing.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    location: PropTypes.shape({\n        search: PropTypes.string,\n    }),\n};\n\nCommonListing.defaultProps = {\n    location: PropTypes.shape({\n        search: '',\n    }),\n};\n\nexport default withStyles(styles, { withTheme: true })(CommonListing);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport CloudDownloadRounded from '@material-ui/icons/CloudDownloadRounded';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport CopyToClipboard from 'react-copy-to-clipboard';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport TextField from '@material-ui/core/TextField';\nimport Icon from '@material-ui/core/Icon';\nimport API from 'AppData/api';\nimport Utils from 'AppData/Utils';\nimport Alert from 'AppComponents/Shared/Alert';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { ApiContext } from './ApiContext';\n\nconst styles = theme => ({\n    buttonIcon: {\n        marginRight: 10,\n    },\n    iconAligner: {\n        display: 'flex',\n        justifyContent: 'flex-start',\n        alignItems: 'center',\n    },\n    iconEven: {\n        color: theme.palette.secondary.light,\n        width: theme.spacing(3),\n    },\n    iconOdd: {\n        color: theme.palette.secondary.main,\n        width: theme.spacing(3),\n    },\n    iconTextWrapper: {\n        display: 'inline-block',\n        paddingLeft: 20,\n    },\n    bootstrapRoot: {\n        padding: 0,\n        'label + &': {\n            marginTop: theme.spacing(3),\n        },\n    },\n    bootstrapInput: {\n        borderRadius: 4,\n        backgroundColor: theme.palette.common.white,\n        border: '1px solid #ced4da',\n        padding: '5px 12px',\n        width: 350,\n        transition: theme.transitions.create(['border-color', 'box-shadow']),\n        '&:focus': {\n            borderColor: '#80bdff',\n            boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\n        },\n    },\n    iconStyle: {\n        cursor: 'grab',\n    },\n});\n\n/**\n *  @inheritdoc\n */\nclass Environments extends React.Component {\n    constructor(props) {\n        super(props);\n        this.apiClient = new API();\n        this.state = {\n            urlCopied: false,\n        };\n        this.downloadWSDL = this.downloadWSDL.bind(this);\n        this.onCopy = this.onCopy.bind(this);\n    }\n\n    onCopy = (name) => {\n        this.setState({\n            [name]: true,\n        });\n        const that = this;\n        const caller = function () {\n            that.setState({ urlCopied: false });\n        };\n        setTimeout(caller, 2000);\n    }\n\n    /**\n     * Downloads the WSDL of the api for the provided environment\n     *\n     * @param {string} apiId uuid of the API\n     * @param {string} environmentName name of the environment\n     */\n    downloadWSDL(apiId, environmentName) {\n        const { intl } = this.props;\n        const wsdlClient = this.apiClient.getWsdlClient();\n        const promisedGet = wsdlClient.downloadWSDLForEnvironment(apiId, environmentName);\n        promisedGet\n            .then((done) => {\n                Utils.downloadFile(done);\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                    Alert.error(intl.formatMessage({\n                        id: 'Apis.Details.Environments.download.wsdl.error',\n                        defaultMessage: 'Error downloading the WSDL',\n                    }));\n                }\n            });\n    }\n\n    /**\n     * Downloads the swagger of the api for the provided environment\n     *\n     * @param {string} apiId uuid of the API\n     * @param {string} environment name of the environment\n     */\n    downloadSwagger(apiId, environment) {\n        const promiseSwagger = this.apiClient.getSwaggerByAPIIdAndEnvironment(apiId, environment);\n        promiseSwagger\n            .then((done) => {\n                Utils.downloadFile(done);\n            })\n            .catch((error) => {\n                console.log(error);\n                Alert.error(intl.formatMessage({\n                    id: 'Apis.Details.Environments.download.swagger.error',\n                    defaultMessage: 'Error downloading the Swagger',\n                }));\n            });\n    }\n\n    /**\n     *  @inheritdoc\n     */\n    render() {\n        const { api } = this.context;\n        const { classes, intl } = this.props;\n        const { urlCopied } = this.state;\n\n\n        return (\n            <Grid container spacing={2} item xs={12}>\n                {api.endpointURLs.map((endpoint) => {\n                    return (\n                        <Grid key={endpoint} item xs={12} key={endpoint.environmentName}>\n                            <ExpansionPanel>\n                                <ExpansionPanelSummary\n                                    expandIcon={<Icon>expand_more</Icon>}\n                                    aria-controls='panel1a-content'\n                                    id='panel1a-header'\n                                >\n                                    <div className={classes.iconAligner}>\n                                        {endpoint.environmentType === 'hybrid' && (\n                                            <Icon className={classes.iconEven}>cloud</Icon>\n                                        )}\n                                        {endpoint.environmentType === 'production' && (\n                                            <Icon className={classes.iconEven}>check_circle</Icon>\n                                        )}\n                                        {endpoint.environmentType === 'sandbox' && (\n                                            <Icon className={classes.iconEven}>Build</Icon>\n                                        )}\n                                        <span className={classes.iconTextWrapper}>\n                                            <Typography className={classes.heading}>\n                                                {endpoint.environmentName}\n                                            </Typography>\n                                        </span>\n                                    </div>\n                                </ExpansionPanelSummary>\n                                <ExpansionPanelDetails>\n                                    <Grid container item xs={12} spacing={2}>\n                                        {(endpoint.URLs.http !== null\n                                            || endpoint.URLs.https !== null\n                                            || endpoint.URLs.ws !== null\n                                            || endpoint.URLs.wss !== null) && (\n                                            <Typography className={classes.heading}>\n                                                <FormattedMessage\n                                                    id='Apis.Details.InfoBar.gateway.urls'\n                                                    defaultMessage='Gateway URLs'\n                                                />\n                                            </Typography>\n                                        )}\n                                        {endpoint.URLs.http !== null && (\n                                            <Grid item xs={12}>\n                                                <TextField\n                                                    defaultValue={endpoint.URLs.http}\n                                                    id='bootstrap-input'\n                                                    InputProps={{\n                                                        disableUnderline: true,\n                                                        readOnly: true,\n                                                        classes: {\n                                                            root: classes.bootstrapRoot,\n                                                            input: classes.bootstrapInput,\n                                                        },\n                                                    }}\n                                                    InputLabelProps={{\n                                                        shrink: true,\n                                                        className: classes.bootstrapFormLabel,\n                                                    }}\n                                                />\n                                                <Tooltip\n                                                    title={\n                                                        urlCopied\n                                                            ? intl.formatMessage({\n                                                                defaultMessage: 'Copied',\n                                                                id: 'Apis.Details.Environments.copied',\n                                                            })\n                                                            : intl.formatMessage({\n                                                                defaultMessage: 'Copy to clipboard',\n                                                                id: 'Apis.Details.Environments.copy.to.clipboard',\n                                                            })\n                                                    }\n                                                    placement='right'\n                                                    className={classes.iconStyle}\n                                                >\n                                                    <CopyToClipboard\n                                                        text={endpoint.URLs.http}\n                                                        onCopy={() => this.onCopy('urlCopied')}\n                                                    >\n                                                        <Icon color='secondary'>insert_drive_file</Icon>\n                                                    </CopyToClipboard>\n                                                </Tooltip>\n                                            </Grid>\n                                        )}\n                                        {endpoint.URLs.https !== null && (\n                                            <Grid item xs={12}>\n                                                <TextField\n                                                    defaultValue={endpoint.URLs.https}\n                                                    id='bootstrap-input'\n                                                    InputProps={{\n                                                        disableUnderline: true,\n                                                        readOnly: true,\n                                                        classes: {\n                                                            root: classes.bootstrapRoot,\n                                                            input: classes.bootstrapInput,\n                                                        },\n                                                    }}\n                                                    InputLabelProps={{\n                                                        shrink: true,\n                                                        className: classes.bootstrapFormLabel,\n                                                    }}\n                                                />\n                                                <Tooltip\n                                                    title={\n                                                        urlCopied\n                                                            ? intl.formatMessage({\n                                                                defaultMessage: 'Copied',\n                                                                id: 'Apis.Details.Environments.copied',\n                                                            })\n                                                            : intl.formatMessage({\n                                                                defaultMessage: 'Copy to clipboard',\n                                                                id: 'Apis.Details.Environments.copy.to.clipboard',\n                                                            })\n                                                    }\n                                                    placement='right'\n                                                    className={classes.iconStyle}\n                                                >\n                                                    <CopyToClipboard\n                                                        text={endpoint.URLs.https}\n                                                        onCopy={() => this.onCopy('urlCopied')}\n                                                    >\n                                                        <Icon color='secondary'>insert_drive_file</Icon>\n                                                    </CopyToClipboard>\n                                                </Tooltip>\n                                            </Grid>\n                                        )}\n                                        {endpoint.URLs.ws !== null && (\n                                            <Grid item xs={12}>\n                                                <TextField\n                                                    defaultValue={endpoint.URLs.ws}\n                                                    id='bootstrap-input'\n                                                    InputProps={{\n                                                        disableUnderline: true,\n                                                        readOnly: true,\n                                                        classes: {\n                                                            root: classes.bootstrapRoot,\n                                                            input: classes.bootstrapInput,\n                                                        },\n                                                    }}\n                                                    InputLabelProps={{\n                                                        shrink: true,\n                                                        className: classes.bootstrapFormLabel,\n                                                    }}\n                                                />\n                                                <Tooltip\n                                                    title={\n                                                        urlCopied\n                                                            ? intl.formatMessage({\n                                                                defaultMessage: 'Copied',\n                                                                id: 'Apis.Details.Environments.copied',\n                                                            })\n                                                            : intl.formatMessage({\n                                                                defaultMessage: 'Copy to clipboard',\n                                                                id: 'Apis.Details.Environments.copy.to.clipboard',\n                                                            })\n                                                    }\n                                                    placement='right'\n                                                    className={classes.iconStyle}\n                                                >\n                                                    <CopyToClipboard\n                                                        text={endpoint.URLs.ws}\n                                                        onCopy={() => this.onCopy('urlCopied')}\n                                                    >\n                                                        <Icon color='secondary'>insert_drive_file</Icon>\n                                                    </CopyToClipboard>\n                                                </Tooltip>\n                                            </Grid>\n                                        )}\n                                        {endpoint.URLs.wss !== null && (\n                                            <Grid item xs={12}>\n                                                <TextField\n                                                    defaultValue={endpoint.URLs.wss}\n                                                    id='bootstrap-input'\n                                                    InputProps={{\n                                                        disableUnderline: true,\n                                                        readOnly: true,\n                                                        classes: {\n                                                            root: classes.bootstrapRoot,\n                                                            input: classes.bootstrapInput,\n                                                        },\n                                                    }}\n                                                    InputLabelProps={{\n                                                        shrink: true,\n                                                        className: classes.bootstrapFormLabel,\n                                                    }}\n                                                />\n                                                <Tooltip\n                                                    title={\n                                                        urlCopied\n                                                            ? intl.formatMessage({\n                                                                defaultMessage: 'Copied',\n                                                                id: 'Apis.Details.Environments.copied',\n                                                            })\n                                                            : intl.formatMessage({\n                                                                defaultMessage: 'Copy to clipboard',\n                                                                id: 'Apis.Details.Environments.copy.to.clipboard',\n                                                            })\n                                                    }\n                                                    placement='right'\n                                                    className={classes.iconStyle}\n                                                >\n                                                    <CopyToClipboard\n                                                        text={endpoint.URLs.wss}\n                                                        onCopy={() => this.onCopy('urlCopied')}\n                                                    >\n                                                        <Icon color='secondary'>insert_drive_file</Icon>\n                                                    </CopyToClipboard>\n                                                </Tooltip>\n                                            </Grid>\n                                        )}\n                                        {endpoint.defaultVersionURLs !== null &&\n                                            (endpoint.defaultVersionURLs.http !== null ||\n                                                endpoint.defaultVersionURLs.https !== null ||\n                                                endpoint.defaultVersionURLs.ws !== null ||\n                                                endpoint.defaultVersionURLs.wss !== null) && (\n                                            <Typography className={classes.heading}>\n                                                    <FormattedMessage\n                                                    id='Apis.Details.InfoBar.default.gateway.urls'\n                                                    defaultMessage='Default Gateway URLs'\n                                                />\n                                                </Typography>\n                                        )}\n                                        {endpoint.defaultVersionURLs !== null &&\n                                            endpoint.defaultVersionURLs.http !== null && (\n                                            <Grid item xs={12}>\n                                                <TextField\n                                                    defaultValue={endpoint.defaultVersionURLs.http}\n                                                    id='bootstrap-input'\n                                                    InputProps={{\n                                                        disableUnderline: true,\n                                                        readOnly: true,\n                                                        classes: {\n                                                            root: classes.bootstrapRoot,\n                                                            input: classes.bootstrapInput,\n                                                        },\n                                                    }}\n                                                    InputLabelProps={{\n                                                        shrink: true,\n                                                        className: classes.bootstrapFormLabel,\n                                                    }}\n                                                />\n                                                <Tooltip\n                                                    title={\n                                                        urlCopied\n                                                            ? intl.formatMessage({\n                                                                defaultMessage: 'Copied',\n                                                                id: 'Apis.Details.Environments.copied',\n                                                            })\n                                                            : intl.formatMessage({\n                                                                defaultMessage: 'Copy to clipboard',\n                                                                id: 'Apis.Details.Environments.copy.to.clipboard',\n                                                            })\n                                                    }\n                                                    placement='right'\n                                                    className={classes.iconStyle}\n                                                >\n                                                    <CopyToClipboard\n                                                        text={endpoint.defaultVersionURLs.http}\n                                                        onCopy={() => this.onCopy('urlCopied')}\n                                                    >\n                                                        <Icon color='secondary'>file_copy</Icon>\n                                                    </CopyToClipboard>\n                                                </Tooltip>\n                                            </Grid>\n                                        )}\n                                        {endpoint.defaultVersionURLs !== null &&\n                                            endpoint.defaultVersionURLs.https !== null && (\n                                            <Grid item xs={12}>\n                                                <TextField\n                                                    defaultValue={endpoint.defaultVersionURLs.https}\n                                                    id='bootstrap-input'\n                                                    InputProps={{\n                                                        disableUnderline: true,\n                                                        readOnly: true,\n                                                        classes: {\n                                                            root: classes.bootstrapRoot,\n                                                            input: classes.bootstrapInput,\n                                                        },\n                                                    }}\n                                                    InputLabelProps={{\n                                                        shrink: true,\n                                                        className: classes.bootstrapFormLabel,\n                                                    }}\n                                                />\n                                                <Tooltip\n                                                    title={\n                                                        urlCopied\n                                                            ? intl.formatMessage({\n                                                                defaultMessage: 'Copied',\n                                                                id: 'Apis.Details.Environments.copied',\n                                                            })\n                                                            : intl.formatMessage({\n                                                                defaultMessage: 'Copy to clipboard',\n                                                                id: 'Apis.Details.Environments.copy.to.clipboard',\n                                                            })\n                                                    }\n                                                    placement='right'\n                                                    className={classes.iconStyle}\n                                                >\n                                                    <CopyToClipboard\n                                                        text={endpoint.defaultVersionURLs.https}\n                                                        onCopy={() => this.onCopy('urlCopied')}\n                                                    >\n                                                        <Icon color='secondary'>file_copy</Icon>\n                                                    </CopyToClipboard>\n                                                </Tooltip>\n                                            </Grid>\n                                        )}\n                                        {endpoint.defaultVersionURLs !== null &&\n                                            endpoint.defaultVersionURLs.ws !== null && (\n                                            <Grid item xs={12}>\n                                                <TextField\n                                                    defaultValue={endpoint.defaultVersionURLs.ws}\n                                                    id='bootstrap-input'\n                                                    InputProps={{\n                                                        disableUnderline: true,\n                                                        readOnly: true,\n                                                        classes: {\n                                                            root: classes.bootstrapRoot,\n                                                            input: classes.bootstrapInput,\n                                                        },\n                                                    }}\n                                                    InputLabelProps={{\n                                                        shrink: true,\n                                                        className: classes.bootstrapFormLabel,\n                                                    }}\n                                                />\n                                                <Tooltip\n                                                    title={\n                                                        urlCopied\n                                                            ? intl.formatMessage({\n                                                                defaultMessage: 'Copied',\n                                                                id: 'Apis.Details.Environments.copied',\n                                                            })\n                                                            : intl.formatMessage({\n                                                                defaultMessage: 'Copy to clipboard',\n                                                                id: 'Apis.Details.Environments.copy.to.clipboard',\n                                                            })\n                                                    }\n                                                    placement='right'\n                                                    className={classes.iconStyle}\n                                                >\n                                                    <CopyToClipboard\n                                                        text={endpoint.defaultVersionURLs.ws}\n                                                        onCopy={() => this.onCopy('urlCopied')}\n                                                    >\n                                                        <Icon color='secondary'>file_copy</Icon>\n                                                    </CopyToClipboard>\n                                                </Tooltip>\n                                            </Grid>\n                                        )}\n                                        {endpoint.defaultVersionURLs !== null &&\n                                            endpoint.defaultVersionURLs.wss !== null && (\n                                            <Grid item xs={12}>\n                                                <TextField\n                                                    defaultValue={endpoint.defaultVersionURLs.wss}\n                                                    id='bootstrap-input'\n                                                    InputProps={{\n                                                        disableUnderline: true,\n                                                        readOnly: true,\n                                                        classes: {\n                                                            root: classes.bootstrapRoot,\n                                                            input: classes.bootstrapInput,\n                                                        },\n                                                    }}\n                                                    InputLabelProps={{\n                                                        shrink: true,\n                                                        className: classes.bootstrapFormLabel,\n                                                    }}\n                                                />\n                                                <Tooltip\n                                                    title={\n                                                        urlCopied\n                                                            ? intl.formatMessage({\n                                                                defaultMessage: 'Copied',\n                                                                id: 'Apis.Details.Environments.copied',\n                                                            })\n                                                            : intl.formatMessage({\n                                                                defaultMessage: 'Copy to clipboard',\n                                                                id: 'Apis.Details.Environments.copy.to.clipboard',\n                                                            })\n                                                    }\n                                                    placement='right'\n                                                    className={classes.iconStyle}\n                                                >\n                                                    <CopyToClipboard\n                                                        text={endpoint.defaultVersionURLs.wss}\n                                                        onCopy={() => this.onCopy('urlCopied')}\n                                                    >\n                                                        <Icon color='secondary'>file_copy</Icon>\n                                                    </CopyToClipboard>\n                                                </Tooltip>\n                                            </Grid>\n                                        )}\n                                        {api.type === 'SOAP' && (\n                                            <Button\n                                                size='small'\n                                                onClick={() => this.downloadWSDL(api.id, endpoint.environmentName)}\n                                            >\n                                                <CloudDownloadRounded className={classes.buttonIcon} />\n                                                <FormattedMessage\n                                                    id='Apis.Details.Environments.download.wsdl'\n                                                    defaultMessage='WSDL'\n                                                />\n                                            </Button>\n                                        )}\n                                        {(api.type === 'HTTP' || api.type === 'SOAPTOREST') && (\n                                            <Button\n                                                size='small'\n                                                onClick={() => this.downloadSwagger(api.id, endpoint.environmentName)}\n                                            >\n                                                <CloudDownloadRounded className={classes.buttonIcon} />\n                                                <FormattedMessage\n                                                    id='Apis.Details.Environments.download.swagger'\n                                                    defaultMessage='Swagger'\n                                                />\n                                            </Button>\n                                        )}\n                                    </Grid>\n                                </ExpansionPanelDetails>\n                            </ExpansionPanel>\n                        </Grid>\n                    );\n                })}\n            </Grid>\n        );\n    }\n}\n\nEnvironments.propTypes = {\n    classes: PropTypes.object.isRequired,\n    intl: PropTypes.shape({}).isRequired,\n};\nEnvironments.contextType = ApiContext;\n\nexport default injectIntl(withStyles(styles)(Environments));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport CloudDownloadRounded from '@material-ui/icons/CloudDownloadRounded';\nimport CopyToClipboard from 'react-copy-to-clipboard';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Icon from '@material-ui/core/Icon';\nimport API from 'AppData/api';\nimport Utils from 'AppData/Utils';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { ApiContext } from './ApiContext';\n\nconst styles = (theme) => ({\n    iconAligner: {\n        display: 'flex',\n        justifyContent: 'flex-start',\n        alignItems: 'center',\n    },\n    iconEven: {\n        color: theme.palette.secondary.light,\n        width: theme.spacing(3),\n    },\n    iconTextWrapper: {\n        display: 'inline-block',\n        paddingLeft: 20,\n    },\n    bootstrapRoot: {\n        padding: 0,\n        'label + &': {\n            marginTop: theme.spacing(3),\n        },\n    },\n    bootstrapInput: {\n        borderRadius: 4,\n        backgroundColor: theme.palette.common.white,\n        border: '1px solid #ced4da',\n        padding: '5px 12px',\n        width: 350,\n        transition: theme.transitions.create(['border-color', 'box-shadow']),\n        '&:focus': {\n            borderColor: '#80bdff',\n            boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\n        },\n    },\n    buttonIcon: {\n        marginRight: 10,\n    },\n    iconStyle: {\n        cursor: 'grab',\n    },\n});\n\nclass Labels extends React.Component {\n    constructor(props) {\n        super(props);\n        this.apiClient = new API();\n        this.state = {\n            urlCopied: false,\n        };\n    }\n\n    onCopy = (name) => {\n        this.setState({\n            [name]: true,\n        });\n        const that = this;\n        const caller = function () {\n            that.setState({ urlCopied: false });\n        };\n        setTimeout(caller, 2000);\n    }\n\n    /**\n     * Downloads the Swagger of the api for the provided label\n     *\n     * @param {string} apiId uuid of the API\n     * @param {string} label name of the environment\n     */\n    downloadSwagger(apiId, label) {\n        const promiseSwagger = this.apiClient.getSwaggerByAPIIdAndLabel(apiId, label);\n        promiseSwagger\n            .then((done) => {\n                Utils.downloadFile(done);\n            })\n            .catch((error) => {\n                console.log(error);\n                Alert.error(intl.formatMessage({\n                    id: 'Apis.Details.Environments.download.wsdl.error',\n                    defaultMessage: 'Error downloading the Swagger',\n                }));\n            });\n    }\n\n    render() {\n        const { api } = this.context;\n        const { classes, intl } = this.props;\n        const { urlCopied } = this.state;\n\n        return (\n            <Grid container spacing={2} item xs={12}>\n                {api.labels.map((label) => {\n                    return (\n                        <Grid key={label} item xs={12}>\n                            <ExpansionPanel>\n                                <ExpansionPanelSummary\n                                    expandIcon={<Icon>expand_more</Icon>}\n                                    aria-controls='panel1a-content'\n                                    id='panel1a-header'\n                                >\n                                    <div className={classes.iconAligner}>\n                                        <Icon className={classes.iconEven}>label</Icon>\n                                        <span className={classes.iconTextWrapper}>\n                                            <Typography className={classes.heading}>\n                                                {label.name}\n                                            </Typography>\n                                        </span>\n                                    </div>\n                                </ExpansionPanelSummary>\n                                <ExpansionPanelDetails>\n                                    <Grid container item xs={12} spacing={2}>\n                                        <Typography className={classes.heading}>\n                                            <FormattedMessage\n                                                id='Apis.Details.InfoBar.microgateway.urls'\n                                                defaultMessage='Microgateway URLs'\n                                            />\n                                        </Typography>\n                                        {label.accessUrls.map((row) => (\n                                            <Grid item xs={12} key={row}>\n                                                <TextField\n                                                    defaultValue={row}\n                                                    id='bootstrap-input'\n                                                    InputProps={{\n                                                        disableUnderline: true,\n                                                        readOnly: true,\n                                                        classes: {\n                                                            root: classes.bootstrapRoot,\n                                                            input: classes.bootstrapInput,\n                                                        },\n                                                    }}\n                                                    InputLabelProps={{\n                                                        shrink: true,\n                                                        className: classes.bootstrapFormLabel,\n                                                    }}\n                                                />\n                                                <Tooltip\n                                                    title={\n                                                        urlCopied\n                                                            ? intl.formatMessage({\n                                                                defaultMessage: 'Copied',\n                                                                id: 'Apis.Details.Labels.copied',\n                                                            })\n                                                            : intl.formatMessage({\n                                                                defaultMessage: 'Copy to clipboard',\n                                                                id: 'Apis.Details.Labels.copy.to.clipboard',\n                                                            })\n                                                    }\n                                                    placement='right'\n                                                    className={classes.iconStyle}\n                                                >\n                                                    <CopyToClipboard\n                                                        text={row}\n                                                        onCopy={() => this.onCopy('urlCopied')}\n                                                    >\n                                                        <Icon color='secondary'>insert_drive_file</Icon>\n                                                    </CopyToClipboard>\n                                                </Tooltip>\n                                            </Grid>\n                                        ))}\n                                        {(api.type === 'HTTP' || api.type === 'SOAPTOREST') && (\n                                            <Button\n                                                size='small'\n                                                onClick={\n                                                    () => this.downloadSwagger(api.id, label.name)\n                                                }\n                                            >\n                                                <CloudDownloadRounded className={classes.buttonIcon} />\n                                                <FormattedMessage\n                                                    id='Apis.Details.Environments.download.swagger'\n                                                    defaultMessage='Swagger'\n                                                />\n                                            </Button>\n                                        )}\n                                    </Grid>\n                                </ExpansionPanelDetails>\n                            </ExpansionPanel>\n                        </Grid>\n                    );\n                })}\n            </Grid>\n        );\n    }\n}\n\nLabels.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\nLabels.contextType = ApiContext;\n\nexport default injectIntl(withStyles(styles)(Labels));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Icon from '@material-ui/core/Icon';\nimport { Link, withRouter } from 'react-router-dom';\nimport Collapse from '@material-ui/core/Collapse';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport Grade from '@material-ui/icons/Grade';\nimport Chip from '@material-ui/core/Chip';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport API from 'AppData/api';\nimport StarRatingBar from 'AppComponents/Apis/Listing/StarRatingBar';\nimport StarRatingSummary from 'AppComponents/Apis/Details/StarRatingSummary';\nimport { ApiContext } from 'AppComponents/Apis/Details/ApiContext';\nimport VerticalDivider from '../../Shared/VerticalDivider';\nimport ApiThumb from '../Listing/ApiThumb';\nimport ResourceNotFound from '../../Base/Errors/ResourceNotFound';\nimport AuthManager from '../../../data/AuthManager';\nimport Environments from './Environments';\nimport Labels from './Labels';\n\n/**\n *\n *\n * @param {*} theme\n */\nconst styles = (theme) => {\n    const mainBack = theme.custom.infoBar.background || '#ffffff';\n    const infoBarHeight = theme.custom.infoBar.height || 70;\n    const starColor = theme.custom.infoBar.starColor || theme.palette.getContrastText(mainBack);\n\n    return {\n        table: {\n            minWidth: '100%',\n        },\n        root: {\n            height: infoBarHeight,\n            background: mainBack,\n            color: theme.palette.getContrastText(mainBack),\n            borderBottom: 'solid 1px ' + theme.palette.grey.A200,\n            display: 'flex',\n            alignItems: 'center',\n            paddingLeft: theme.spacing(2),\n        },\n        backIcon: {\n            color: theme.palette.primary.main,\n            fontSize: 56,\n            cursor: 'pointer',\n        },\n        backText: {\n            color: theme.palette.primary.main,\n            cursor: 'pointer',\n            fontFamily: theme.typography.fontFamily,\n        },\n        starRate: {\n            fontSize: 40,\n            color: starColor,\n        },\n        infoContent: {\n            color: theme.palette.getContrastText(mainBack),\n            background: mainBack,\n            padding: theme.spacing(3),\n            '& td, & th': {\n                color: theme.palette.getContrastText(mainBack),\n            },\n        },\n        infoContentBottom: {\n            background: theme.custom.infoBar.sliderBackground,\n            color: theme.palette.getContrastText(theme.custom.infoBar.sliderBackground),\n            borderBottom: 'solid 1px ' + theme.palette.grey.A200,\n        },\n        contentWrapper: {\n            maxWidth: theme.custom.contentAreaWidth - theme.custom.leftMenu.width,\n            alignItems: 'center',\n        },\n        infoBarMain: {\n            width: '100%',\n            zIndex: 100,\n        },\n        buttonView: {\n            textAlign: 'left',\n            justifyContent: 'left',\n            display: 'flex',\n            paddingLeft: theme.spacing(3),\n            cursor: 'pointer',\n        },\n        buttonOverviewText: {\n            display: 'inline-block',\n            paddingTop: 3,\n        },\n        paper: {\n            margin: theme.spacing(1),\n        },\n        leftCol: {\n            width: 200,\n        },\n        iconAligner: {\n            display: 'flex',\n            justifyContent: 'flex-start',\n            alignItems: 'center',\n        },\n        iconTextWrapper: {\n            display: 'inline-block',\n            paddingLeft: 20,\n        },\n        iconEven: {\n            color: theme.custom.infoBar.iconEvenColor,\n            width: theme.spacing(3),\n        },\n        iconOdd: {\n            color: theme.custom.infoBar.iconOddColor,\n            width: theme.spacing(3),\n        },\n        margin: {\n            marginLeft: 30,\n        },\n        contentToTop: {\n            verticlaAlign: 'top',\n        },\n        viewInPubStoreLauncher: {\n            display: 'flex',\n            flexDirection: 'column',\n            color: theme.palette.getContrastText(mainBack),\n            textAlign: 'center',\n            textDecoration: 'none',\n        },\n        linkText: {\n            fontSize: theme.typography.fontSize,\n        },\n        chip: {\n            background: theme.custom.infoBar.tagChipBackground,\n            color: theme.palette.getContrastText(theme.custom.infoBar.tagChipBackground),\n            marginRight: theme.spacing(1),\n        },\n        expandWrapper: {\n            cursor: 'pointer',\n            display: 'block',\n        },\n        linkTitle: {\n            color: theme.palette.getContrastText(theme.custom.infoBar.background),\n        },\n        leftMenu: {},\n        leftMenuHorizontal: {},\n        leftMenuVerticalLeft: {},\n        leftMenuVerticalRight: {},\n        leftLInkMain: {},\n        leftLInkMainText: {},\n        detailsContent: {},\n        content: {},\n        contentLoader: {},\n        contentLoaderRightMenu: {},\n    };\n};\n\n/**\n *\n *\n * @class InfoBar\n * @extends {React.Component}\n */\nclass InfoBar extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            api: null,\n            applications: null,\n            policies: null,\n            dropDownApplications: null,\n            dropDownPolicies: null,\n            notFound: false,\n            tabValue: 'Social Sites',\n            comment: '',\n            commentList: null,\n            showOverview: true,\n            checked: false,\n            avgRating: 0,\n            total: 0,\n            count: 0,\n        };\n        this.getSchema = this.getSchema.bind(this);\n        this.getProvider = this.getProvider.bind(this);\n        this.setRatingUpdate = this.setRatingUpdate.bind(this);\n    }\n\n    ditectCurrentMenu = (location) => {\n        const routeToCheck = 'overview';\n        const { pathname } = location;\n        const test1 = new RegExp('/' + routeToCheck + '$', 'g');\n        const test2 = new RegExp('/' + routeToCheck + '/', 'g');\n        if (pathname.match(test1) || pathname.match(test2)) {\n            this.setState({ showOverview: true });\n        } else {\n            this.setState({ showOverview: false });\n        }\n    };\n\n    componentDidMount() {\n        const { history } = this.props;\n        this.ditectCurrentMenu(history.location);\n        history.listen((location) => {\n            this.ditectCurrentMenu(location);\n        });\n    }\n\n    /**\n     *\n     *\n     * @memberof InfoBar\n     */\n    toggleOverview = (todo) => {\n        if (typeof todo === 'boolean') {\n            this.setState({ showOverview: todo });\n        } else {\n            this.setState((state) => ({ showOverview: !state.showOverview }));\n        }\n    };\n\n    getProvider(api) {\n        let { provider } = api;\n        if (\n            api.businessInformation\n            && api.businessInformation.businessOwner\n            && api.businessInformation.businessOwner.trim() !== ''\n        ) {\n            provider = api.businessInformation.businessOwner;\n        }\n        return provider;\n    }\n\n    getSchema() {\n        const newAPI = new API();\n        const { api } = this.context;\n        const promisedGraphQL = newAPI.getGraphQLSchemaByAPIId(api.id);\n        promisedGraphQL.then((response) => {\n            const windowUrl = window.URL || window.webkitURL;\n            const binary = new Blob([response.data]);\n            const url = windowUrl.createObjectURL(binary);\n            const anchor = document.createElement('a');\n            anchor.href = url;\n            anchor.download = this.getProvider(api) + '-' + api.name + '-' + api.version + '.graphql';\n            anchor.click();\n            windowUrl.revokeObjectURL(url);\n        });\n    }\n\n    setRatingUpdate(ratings) {\n        if (ratings) {\n            const { avgRating, total, count } = ratings;\n            this.setState({ avgRating, total, count });\n        }\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof InfoBar\n     */\n    render() {\n        const { api } = this.context;\n\n        const { classes, theme, intl } = this.props;\n        const {\n            notFound, showOverview, prodUrlCopied, sandboxUrlCopied, epUrl, avgRating, total, count,\n        } = this.state;\n        const {\n            custom: {\n                leftMenu: { position },\n                infoBar: { showThumbnail, height },\n                tagWise: { key, active },\n                social: { showRating },\n            },\n        } = theme;\n\n        // Remve the tags with a sufix '-group' from tags\n        const apisTagsWithoutGroups = [];\n        if (active && api.tags && api.tags.length > 0) {\n            for (let i = 0; i < api.tags.length; i++) {\n                if (api.tags[i].search(key) != -1 && api.tags[i].split(key).length > 0) {\n                    apisTagsWithoutGroups.push(api.tags[i].split(key)[0]);\n                } else {\n                    apisTagsWithoutGroups.push(api.tags[i]);\n                }\n            }\n        }\n\n        const { resourceNotFountMessage } = this.props;\n        const user = AuthManager.getUser();\n        if (notFound) {\n            return <ResourceNotFound message={resourceNotFountMessage} />;\n        }\n\n        return (\n            <div className={classes.infoBarMain} id='infoBar'>\n                <div className={classes.root}>\n                    {showThumbnail && (\n                        <ApiThumb api={api} customWidth={70} customHeight={50} showInfo={false} />\n                    )}\n                    <div style={{ marginLeft: theme.spacing(1) }}>\n                        <Link to={'/apis/' + api.id + '/overview'} className={classes.linkTitle}>\n                            <Typography variant='h4'>{api.name}</Typography>\n                        </Link>\n                        <Typography variant='caption' gutterBottom align='left'>\n                            {this.getProvider(api)}\n                        </Typography>\n                    </div>\n                    <VerticalDivider height={70} />\n                    {!api.advertiseInfo.advertised && user && showRating && (\n                        <StarRatingSummary avgRating={avgRating} reviewCount={total} returnCount={count} />\n\n                    )}\n                    {api.advertiseInfo.advertised && (\n                        <>\n                            <a\n                                target='_blank'\n                                rel='noopener noreferrer'\n                                href={api.advertiseInfo.originalStoreUrl}\n                                className={classes.viewInPubStoreLauncher}\n                            >\n                                <div>\n                                    <LaunchIcon />\n                                </div>\n                                <div className={classes.linkText}>Visit Publisher Dev Portal</div>\n                            </a>\n                            <VerticalDivider height={70} />\n                        </>\n                    )}\n                </div>\n                {position === 'horizontal' && <div style={{ height: 60 }} />}\n                {showOverview && (\n                    <Collapse in={showOverview}>\n                        <div className={classes.infoContent}>\n                            <div className={classes.contentWrapper}>\n                                <Typography>{api.description}</Typography>\n                                <Table className={classes.table}>\n                                    <TableBody>\n                                        <TableRow>\n                                            <TableCell component='th' scope='row' className={classes.leftCol}>\n                                                <div className={classes.iconAligner}>\n                                                    <Icon className={classes.iconOdd}>settings_input_component</Icon>\n                                                    <span className={classes.iconTextWrapper}>\n                                                        <FormattedMessage\n                                                            id='Apis.Details.InfoBar.list.version'\n                                                            defaultMessage='Version'\n                                                        />\n                                                    </span>\n                                                </div>\n                                            </TableCell>\n                                            <TableCell>{api.version}</TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell component='th' scope='row'>\n                                                <div className={classes.iconAligner}>\n                                                    <Icon className={classes.iconEven}>account_balance_wallet</Icon>\n                                                    <span className={classes.iconTextWrapper}>\n                                                        <FormattedMessage\n                                                            id='Apis.Details.InfoBar.list.context'\n                                                            defaultMessage='Context'\n                                                        />\n                                                    </span>\n                                                </div>\n                                            </TableCell>\n                                            <TableCell>{api.context}</TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell component='th' scope='row'>\n                                                <div className={classes.iconAligner}>\n                                                    <Icon className={classes.iconOdd}>account_circle</Icon>\n                                                    <span className={classes.iconTextWrapper}>\n                                                        <FormattedMessage\n                                                            id='Apis.Details.InfoBar.provider'\n                                                            defaultMessage='Provider'\n                                                        />\n                                                    </span>\n                                                </div>\n                                            </TableCell>\n                                            <TableCell>{this.getProvider(api)}</TableCell>\n                                        </TableRow>\n                                        {/* <TableRow>\n                                                    <TableCell component='th' scope='row'>\n                                                        <div className={classes.iconAligner}>\n                                                            <Icon className={classes.iconEven}>update</Icon>\n                                                            <span className={classes.iconTextWrapper}>\n                                                                <FormattedMessage\n                                                                    id='Apis.Details.InfoBar.last.updated'\n                                                                    defaultMessage='Last updated'\n                                                                />\n                                                            </span>\n                                                        </div>\n                                                    </TableCell>\n                                                    <TableCell>21 May 2018</TableCell>\n                                                </TableRow> */}\n                                        {user && !api.advertiseInfo.advertised && showRating && (\n                                            <TableRow>\n                                                <TableCell component='th' scope='row'>\n                                                    <div className={classes.iconAligner}>\n                                                        <Grade className={classes.iconEven} />\n                                                        <span className={classes.iconTextWrapper}>\n                                                            <FormattedMessage\n                                                                id='Apis.Details.InfoBar.list.context.rating'\n                                                                defaultMessage='Rating'\n                                                            />\n                                                        </span>\n                                                    </div>\n                                                </TableCell>\n                                                <TableCell>\n                                                    <StarRatingBar\n                                                        apiId={api.id}\n                                                        isEditable\n                                                        showSummary={false}\n                                                        setRatingUpdate={this.setRatingUpdate}\n                                                    />\n                                                </TableCell>\n                                            </TableRow>\n                                        )}\n                                        {api.type === 'GRAPHQL' && (\n                                            <TableRow>\n                                                <TableCell component='th' scope='row'>\n                                                    <div className={classes.iconAligner}>\n                                                        <Icon className={classes.iconOdd}>cloud_download</Icon>\n                                                        <span className={classes.iconTextWrapper}>\n                                                            <FormattedMessage\n                                                                id='Apis.Details.InfoBar.download.Schema'\n                                                                defaultMessage='Download Schema'\n                                                            />\n                                                        </span>\n                                                    </div>\n                                                </TableCell>\n                                                <TableCell>\n                                                    <Button\n                                                        onClick={this.getSchema}\n                                                        size='small'\n                                                        fontSize='small'\n                                                        variant='outlined'\n                                                    >\n                                                        <FormattedMessage\n                                                            id='Apis.Details.InfoBar.graphQL.schema'\n                                                            defaultMessage='GraphQL Schema'\n                                                        />\n                                                    </Button>\n                                                </TableCell>\n                                            </TableRow>\n                                        )}\n                                        {!api.advertiseInfo.advertised ? (\n                                            <>\n                                                <TableRow>\n                                                    <TableCell\n                                                        component='th'\n                                                        scope='row'\n                                                        className={classes.contentToTop}\n                                                    >\n                                                        <div className={classes.iconAligner}>\n                                                            <Icon className={classes.iconEven}>desktop_windows</Icon>\n                                                            <span className={classes.iconTextWrapper}>\n                                                                <FormattedMessage\n                                                                    id='Apis.Details.InfoBar.gateway.environments'\n                                                                    defaultMessage='Gateway Environments'\n                                                                />\n                                                            </span>\n                                                        </div>\n                                                    </TableCell>\n                                                    <TableCell>\n                                                        <Environments />\n                                                    </TableCell>\n                                                </TableRow>\n                                                {api.labels.length !== 0 && (\n                                                    <TableRow>\n                                                        <TableCell\n                                                            component='th'\n                                                            scope='row'\n                                                            className={classes.contentToTop}\n                                                        >\n                                                            <div className={classes.iconAligner}>\n                                                                <Icon className={classes.iconEven}>games</Icon>\n                                                                <span className={classes.iconTextWrapper}>\n                                                                    <FormattedMessage\n                                                                        id='Apis.Details.InfoBar.available.mgLabels'\n                                                                        defaultMessage='Available Microgateways'\n                                                                    />\n                                                                </span>\n                                                            </div>\n                                                        </TableCell>\n                                                        <TableCell>\n                                                            <Labels />\n                                                        </TableCell>\n                                                    </TableRow>\n                                                )}\n                                            </>\n                                        ) : (\n                                            <TableRow>\n                                                <TableCell component='th' scope='row'>\n                                                    <div className={classes.iconAligner}>\n                                                        <Icon className={classes.iconOdd}>account_circle</Icon>\n                                                        <span className={classes.iconTextWrapper}>\n                                                            <FormattedMessage\n                                                                id='Apis.Details.InfoBar.owner'\n                                                                defaultMessage='Owner'\n                                                            />\n                                                        </span>\n                                                    </div>\n                                                </TableCell>\n                                                <TableCell>{api.advertiseInfo.apiOwner}</TableCell>\n                                            </TableRow>\n                                        )}\n                                        {apisTagsWithoutGroups && apisTagsWithoutGroups.length > 0 && (\n                                            <TableRow>\n                                                <TableCell component='th' scope='row'>\n                                                    <div className={classes.iconAligner}>\n                                                        <Icon className={classes.iconEven}>bookmark</Icon>\n                                                        <span className={classes.iconTextWrapper}>\n                                                            <FormattedMessage\n                                                                id='Apis.Details.InfoBar.list.tags'\n                                                                defaultMessage='Tags'\n                                                            />\n                                                        </span>\n                                                    </div>\n                                                </TableCell>\n                                                <TableCell>\n                                                    {apisTagsWithoutGroups.map((tag) => (\n                                                        <Chip label={tag} className={classes.chip} key={tag} />\n                                                    ))}\n                                                </TableCell>\n                                            </TableRow>\n                                        )}\n                                    </TableBody>\n                                </Table>\n                            </div>\n                        </div>\n                    </Collapse>\n                )}\n                <div className={classes.infoContentBottom}>\n                    <a className={classes.expandWrapper} onClick={this.toggleOverview}>\n                        <div className={classes.buttonView}>\n                            {showOverview ? (\n                                <Typography className={classes.buttonOverviewText}>\n                                    <FormattedMessage id='Apis.Details.InfoBar.less' defaultMessage='LESS' />\n                                </Typography>\n                            ) : (\n                                <Typography className={classes.buttonOverviewText}>\n                                    <FormattedMessage id='Apis.Details.InfoBar.more' defaultMessage='MORE' />\n                                </Typography>\n                            )}\n                            {showOverview ? <Icon>arrow_drop_up</Icon> : <Icon>arrow_drop_down</Icon>}\n                        </div>\n                    </a>\n                </div>\n            </div>\n        );\n    }\n}\nInfoBar.defaultProps = {\n    classes: {\n        leftMenu: {},\n        leftMenuHorizontal: {},\n        leftMenuVerticalLeft: {},\n        leftMenuVerticalRight: {},\n        leftLInkMain: {},\n        leftLInkMainText: {},\n        detailsContent: {},\n        content: {},\n        contentLoader: {},\n        contentLoaderRightMenu: {},\n    },\n};\nInfoBar.propTypes = {\n    classes: PropTypes.shape({}),\n    theme: PropTypes.object.isRequired,\n    intl: PropTypes.shape({\n        formatMessage: PropTypes.func,\n    }).isRequired,\n};\n\nInfoBar.contextType = ApiContext;\n\nexport default injectIntl(withRouter(withStyles(styles, { withTheme: true })(InfoBar)));\n","import React, { useContext } from 'react';\nimport Button from '@material-ui/core/Button';\nimport { FormattedMessage } from 'react-intl';\nimport { ApiContext } from 'AppComponents/Apis/Details/ApiContext';\nimport { Box } from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst styles = {\n    button: {\n        mt: 2,\n        mr: 1,\n    },\n    wizardButtons: {\n        pl: 2,\n    },\n};\n\nconst ButtonPanel = (props) => {\n    const {\n        currentStep, handleCurrentStep, handleReset, nextActive,\n    } = props;\n    const stepsLength = 5;\n    const { api, updateSubscriptionData } = useContext(ApiContext);\n    const history = useHistory();\n\n    /**\n     * Redirect  to the API console page\n     */\n    const handleTest = () => {\n        history.push(`/apis/${api.id}/test`);\n    };\n\n    /**\n     * Redirect back to credentials page\n     */\n    const handleCancel = () => {\n        updateSubscriptionData(history.push('credentials'));\n    };\n\n    return (\n        <Box display='flex' {...styles.wizardButtons}>\n            {currentStep < stepsLength - 1 && (\n                <Box {...styles.button}>\n                    <Button\n                        onClick={handleCancel}\n                        variant='text'\n                    >\n                        <FormattedMessage\n                            id='Apis.Details.Credentials.Wizard.Wizard.Cancel'\n                            defaultMessage='CANCEL'\n                        />\n                    </Button>\n                </Box>\n            )}\n            {currentStep >= stepsLength - 1 && (\n                <Box {...styles.button}>\n                    <Button\n                        onClick={handleTest}\n                        {...styles.button}\n                        variant='outlined'\n                    >\n                        <FormattedMessage\n                            id='Apis.Details.Credentials.Wizard.Wizard.test'\n                            defaultMessage='Test'\n                        />\n                    </Button>\n                </Box>\n            )}\n            {currentStep >= stepsLength - 1 && (\n                <Box {...styles.button}>\n                    <Button\n                        variant='outlined'\n                        onClick={handleReset}\n                    >\n                        <FormattedMessage\n                            id='Apis.Details.Credentials.Wizard.Wizard.rest'\n                            defaultMessage='Reset'\n                        />\n                    </Button>\n                </Box>\n            )}\n            <Box {...styles.button}>\n                <Button\n                    variant='contained'\n                    color='primary'\n                    onClick={handleCurrentStep}\n                    disabled={!nextActive}\n                >\n                    {currentStep === stepsLength - 1\n                        ? (\n                            <FormattedMessage\n                                id='Apis.Details.Credentials.Wizard.Wizard.finish'\n                                defaultMessage='Finish'\n                            />\n                        )\n                        : (\n                            <FormattedMessage\n                                id='Apis.Details.Credentials.Wizard.Wizard.next'\n                                defaultMessage='Next'\n                            />\n                        )}\n                </Button>\n            </Box>\n        </Box>\n    );\n};\n\nButtonPanel.defaultProps = {\n    nextActive: true,\n};\n\nButtonPanel.propTypes = {\n    currentStep: PropTypes.func.isRequired,\n    handleCurrentStep: PropTypes.func.isRequired,\n    handleReset: PropTypes.func.isRequired,\n    nextActive: PropTypes.bool,\n};\n\nexport default ButtonPanel;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport ApplicationCreateForm from 'AppComponents/Shared/AppsAndKeys/ApplicationCreateForm';\nimport API from 'AppData/api';\nimport Alert from 'AppComponents/Shared/Alert';\nimport cloneDeep from 'lodash.clonedeep';\nimport { injectIntl } from 'react-intl';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ButtonPanel from './ButtonPanel';\n\nconst useStyles = makeStyles((theme) => ({\n    appCreateFormWrapper: {\n        paddingLeft: theme.spacing(2),\n    },\n}));\n\nconst createAppStep = (props) => {\n    const APPLICATION_STATES = {\n        CREATED: 'CREATED',\n        APPROVED: 'APPROVED',\n        REJECTED: 'REJECTED',\n    };\n    const [throttlingPolicyList, setThrottlingPolicyList] = useState([]);\n    const [applicationRequest, setApplicationRequest] = useState({\n        name: '',\n        throttlingPolicy: '',\n        description: '',\n        tokenType: 'JWT',\n        groups: null,\n        attributes: {},\n    });\n    const [isNameValid, setIsNameValid] = useState(true);\n    const [allAppAttributes, setAllAppAttributes] = useState(null);\n    const [notFound, setNotFound] = useState(false);\n    const {\n        currentStep, setCreatedApp, incrementStep, intl, setStepStatus, stepStatuses,\n    } = props;\n\n    const validateName = (value) => {\n        if (!value || value.trim() === '') {\n            setIsNameValid({ isNameValid: false });\n            return Promise.reject(new Error(intl.formatMessage({\n                defaultMessage: 'Application name is required',\n                id: 'Apis.Details.Credentials.Wizard.CreateAppStep.application.name.is.required',\n            })));\n        }\n        setIsNameValid({ isNameValid: true });\n        return Promise.resolve(true);\n    };\n\n    /**\n     * @param {object} name application attribute name\n     * @returns {void}\n     * @memberof ApplicationFormHandler\n     */\n    const isRequiredAttribute = (name) => {\n        if (allAppAttributes) {\n            for (let i = 0; i < allAppAttributes.length; i++) {\n                if (allAppAttributes[i].attribute === name) {\n                    return allAppAttributes[i].required === 'true';\n                }\n            }\n        }\n        return false;\n    };\n\n    /**\n     * @param {object} name application attribute name\n     * @returns {Object} attribute value\n     * @memberof ApplicationFormHandler\n     */\n    const getAttributeValue = (name) => {\n        return applicationRequest.attributes[name];\n    };\n\n    const createApplication = () => {\n        const api = new API();\n        validateName(applicationRequest.name)\n            .then(() => api.createApplication(applicationRequest))\n            .then((response) => {\n                const data = response.body;\n                if (data.status === APPLICATION_STATES.APPROVED) {\n                    const appCreated = { value: data.applicationId, label: data.name };\n                    console.log('Application created successfully.');\n                    setCreatedApp(appCreated);\n                    incrementStep();\n                    setStepStatus(stepStatuses.PROCEED);\n                } else {\n                    setStepStatus(stepStatuses.BLOCKED);\n                }\n            })\n            .catch((error) => {\n                const { response } = error;\n                if (response && response.body) {\n                    const message = response.body.description || intl.formatMessage({\n                        defaultMessage: 'Error while creating the application',\n                        id: 'Apis.Details.Credentials.Wizard.CreateAppStep.error.while.creating.the.application',\n                    });\n                    Alert.error(message);\n                } else {\n                    Alert.error(error.message);\n                }\n                console.error('Error while creating the application');\n            });\n    };\n\n    /**\n     * @param {object} name application attribute name\n     * @returns {void}\n     * @memberof ApplicationFormHandler\n     */\n    const handleAttributesChange = (name) => (event) => {\n        const newApplicationRequest = cloneDeep(applicationRequest);\n        newApplicationRequest.attributes[name] = event.target.value;\n        setApplicationRequest(newApplicationRequest);\n    };\n\n    /**\n     * add a new group function\n     * @param {*} chip newly added group\n     * @param {*} appGroups already existing groups\n     */\n    const handleAddChip = (chip, appGroups) => {\n        const newRequest = { ...applicationRequest };\n        let values = appGroups || [];\n        values = values.slice();\n        values.push(chip);\n        newRequest.groups = values;\n        setApplicationRequest(newRequest);\n    };\n\n    /**\n     * remove a group from already existing groups function\n     * @param {*} chip selected group to be removed\n     * @param {*} index selected group index to be removed\n     * @param {*} appGroups already existing groups\n     */\n    const handleDeleteChip = (chip, index, appGroups) => {\n        const newRequest = { ...applicationRequest };\n        let values = appGroups || [];\n        values = values.filter((v) => v !== chip);\n        newRequest.groups = values;\n        setApplicationRequest(newRequest);\n    };\n\n    useEffect(() => {\n        // Get all the tiers to populate the drop down.\n        const api = new API();\n        const promiseTiers = api.getAllTiers('application');\n        const promisedAttributes = api.getAllApplicationAttributes();\n        Promise.all([promiseTiers, promisedAttributes])\n            .then((response) => {\n                const [tierResponse, allAttributes] = response;\n                const throttlingPolicyListLocal = tierResponse.body.list.map((item) => item.name);\n                const newRequest = { ...applicationRequest };\n                if (throttlingPolicyListLocal.length > 0) {\n                    [newRequest.throttlingPolicy] = throttlingPolicyListLocal;\n                }\n                const allAppAttr = [];\n                allAttributes.body.list.map((item) => allAppAttr.push(item));\n                if (allAttributes.length > 0) {\n                    newRequest.attributes = allAppAttr.filter((item) => !item.hidden);\n                }\n                setApplicationRequest(newRequest);\n                setThrottlingPolicyList(throttlingPolicyListLocal);\n                setAllAppAttributes(allAppAttr);\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                }\n                const { status } = error;\n                if (status === 404) {\n                    setNotFound(true);\n                }\n            });\n    }, []);\n\n    const classes = useStyles();\n\n    return (\n        <div className={classes.appCreateFormWrapper}>\n            <Box px={2} display='flex' justifyContent='flex-start'>\n                <Grid item xs={10} md={6}>\n                    <ApplicationCreateForm\n                        throttlingPolicyList={throttlingPolicyList}\n                        applicationRequest={applicationRequest}\n                        updateApplicationRequest={setApplicationRequest}\n                        validateName={validateName}\n                        isNameValid={isNameValid}\n                        allAppAttributes={allAppAttributes}\n                        handleAttributesChange={handleAttributesChange}\n                        isRequiredAttribute={isRequiredAttribute}\n                        getAttributeValue={getAttributeValue}\n                        handleDeleteChip={handleDeleteChip}\n                        handleAddChip={handleAddChip}\n                    />\n                </Grid>\n            </Box>\n            <ButtonPanel\n                classes={classes}\n                currentStep={currentStep}\n                handleCurrentStep={createApplication}\n            />\n        </div>\n    );\n};\n\nexport default injectIntl(createAppStep);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport SubscribeToApi from 'AppComponents/Shared/AppsAndKeys/SubscribeToApi';\nimport Alert from 'AppComponents/Shared/Alert';\nimport API from 'AppData/api';\nimport { ApiContext } from 'AppComponents/Apis/Details/ApiContext';\nimport { injectIntl } from 'react-intl';\nimport ButtonPanel from './ButtonPanel';\n\nconst subscribeToAppStep = (props) => {\n    const SUBSCRIPTION_STATES = {\n        ON_HOLD: 'ON_HOLD',\n        UNBLOCKED: 'UNBLOCKED',\n        REJECTED: 'REJECTED',\n    };\n    const [subscriptionRequest, setApplicationRequest] = useState({\n        applicationId: '',\n        apiId: '',\n        throttlingPolicy: '',\n    });\n    const { api: apiObject } = useContext(ApiContext);\n    const [newApp, setNewApp] = useState(null);\n    const [throttlingPolicyList] = useState(apiObject.tiers);\n    const {\n        currentStep, createdApp, incrementStep, intl, setStepStatus,\n        stepStatuses, classes,\n    } = props;\n    const subscribeToApplication = () => {\n        const api = new API();\n        api.subscribe(\n            subscriptionRequest.apiId, subscriptionRequest.applicationId,\n            subscriptionRequest.throttlingPolicy,\n        )\n            .then((response) => {\n                if (response.body.status === SUBSCRIPTION_STATES.UNBLOCKED) {\n                    console.log('Subscription created successfully with ID : ' + response.body.subscriptionId);\n                    Alert.info(intl.formatMessage({\n                        defaultMessage: 'Subscribed successfully',\n                        id: 'Apis.Details.Credentials.Wizard.SubscribeToAppStep.subscribed.successfully',\n                    }));\n                    incrementStep();\n                    setStepStatus(stepStatuses.PROCEED);\n                } else {\n                    setStepStatus(stepStatuses.BLOCKED);\n                }\n            })\n            .catch((error) => {\n                console.log('Error while creating the subscription.');\n                console.error(error);\n            });\n    };\n\n    useEffect(() => {\n        const newSubscriptionRequest = { ...subscriptionRequest, apiId: apiObject.id };\n        if (throttlingPolicyList) {\n            const [tierData] = throttlingPolicyList;\n            newSubscriptionRequest.throttlingPolicy = tierData.tierName;\n        }\n        if (createdApp) {\n            newSubscriptionRequest.applicationId = createdApp.value;\n        }\n        setApplicationRequest(newSubscriptionRequest);\n        setNewApp(createdApp);\n    }, [createdApp]);\n\n    return (\n        <>\n            <SubscribeToApi\n                throttlingPolicyList={throttlingPolicyList}\n                applicationsAvailable={[newApp]}\n                subscriptionRequest={subscriptionRequest}\n                updateSubscriptionRequest={setApplicationRequest}\n            />\n            <ButtonPanel\n                classes={classes}\n                currentStep={currentStep}\n                handleCurrentStep={subscribeToApplication}\n            />\n        </>\n    );\n};\n\nexport default injectIntl(subscribeToAppStep);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useEffect, useState } from 'react';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport KeyConfiguration from 'AppComponents/Shared/AppsAndKeys/KeyConfiguration';\nimport Application from 'AppData/Application';\nimport API from 'AppData/api';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { makeStyles } from '@material-ui/core/styles';\nimport cloneDeep from 'lodash.clonedeep';\nimport ButtonPanel from './ButtonPanel';\n\nconst useStyles = makeStyles((theme) => ({\n    keyConfigWrapper: {\n        paddingLeft: theme.spacing(4),\n    },\n    radioWrapper: {\n        flexDirection: 'row',\n    },\n}));\n\nconst generateKeysStep = (props) => {\n    const keyStates = {\n        COMPLETED: 'COMPLETED',\n        APPROVED: 'APPROVED',\n        CREATED: 'CREATED',\n        REJECTED: 'REJECTED',\n    };\n    const [selectedType, setSelectedType] = useState('PRODUCTION');\n    const [notFound, setNotFound] = useState(false);\n    const [nextActive, setNextActive] = useState(true);\n    const [isUserOwner, setIsUserOwner] = useState(false);\n\n    const [keyRequest, setKeyRequest] = useState({\n        keyType: 'PRODUCTION',\n        serverSupportedGrantTypes: [],\n        supportedGrantTypes: [],\n        callbackUrl: '',\n    });\n\n    const {\n        currentStep, createdApp, incrementStep, setCreatedKeyType, intl,\n        setStepStatus, stepStatuses,\n    } = props;\n\n    /**\n    * @param {*} event event\n    * @param {*} currentTab current tab\n    * @memberof Wizard\n    */\n    const handleRadioChange = (event) => {\n        const newKeyType = event.target.value;\n        setSelectedType(newKeyType);\n        const newKeyRequest = cloneDeep(keyRequest);\n        newKeyRequest.keyType = newKeyType;\n        setKeyRequest(newKeyRequest);\n    };\n\n    useEffect(() => {\n        setIsUserOwner(true);\n        const api = new API();\n        const promisedSettings = api.getSettings();\n        promisedSettings\n            .then((response) => {\n                const newRequest = cloneDeep(keyRequest);\n                newRequest.serverSupportedGrantTypes = response.obj.grantTypes;\n                newRequest.supportedGrantTypes = response.obj.grantTypes.filter((item) => item !== 'authorization_code'\n                    && item !== 'implicit');\n                setKeyRequest(newRequest);\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                }\n                const { status } = error;\n                if (status === 404) {\n                    setNotFound({ notFound: true });\n                }\n            });\n    }, []);\n\n    const generateKeys = () => {\n        Application.get(createdApp.value).then((application) => {\n            return application.generateKeys(\n                keyRequest.keyType, keyRequest.supportedGrantTypes,\n                keyRequest.callbackUrl,\n            );\n        }).then((response) => {\n            if (response.keyState === keyStates.CREATED || response.keyState === keyStates.REJECTED) {\n                setStepStatus(stepStatuses.BLOCKED);\n            } else {\n                incrementStep();\n                setCreatedKeyType(keyRequest.keyType);\n                setStepStatus(stepStatuses.PROCEED);\n                console.log('Keys generated successfully with ID : ' + response);\n            }\n        }).catch((error) => {\n            if (process.env.NODE_ENV !== 'production') {\n                console.log(error);\n            }\n            const { status } = error;\n            if (status === 404) {\n                setNotFound(true);\n            }\n        });\n    };\n    const classes = useStyles();\n\n    return (\n        <>\n            <div className={classes.keyConfigWrapper}>\n                <FormControl component='fieldset' className={classes.formControl}>\n                    <FormLabel component='legend'>\n                        <FormattedMessage\n                            defaultMessage='Key Type'\n                            id='Apis.Details.Credentials.Wizard.GenerateKeysStep.keyType'\n                        />\n                    </FormLabel>\n                    <RadioGroup value={selectedType} onChange={handleRadioChange} classes={{ root: classes.radioWrapper }}>\n                        <FormControlLabel\n                            value='PRODUCTION'\n                            control={<Radio />}\n                            label={intl.formatMessage({\n                                defaultMessage: 'PRODUCTION',\n                                id: 'Apis.Details.Credentials.Wizard.GenerateKeysStep.production',\n                            })}\n                        />\n                        <FormControlLabel\n                            value='SANDBOX'\n                            control={<Radio />}\n                            label={intl.formatMessage({\n                                defaultMessage: 'SANDBOX',\n                                id: 'Apis.Details.Credentials.Wizard.GenerateKeysStep.sandbox',\n                            })}\n                        />\n                    </RadioGroup>\n                </FormControl>\n                <KeyConfiguration\n                    updateKeyRequest={setKeyRequest}\n                    keyRequest={keyRequest}\n                    keyType={selectedType}\n                    isUserOwner={isUserOwner}\n                    setGenerateEnabled={setNextActive}\n                />\n            </div>\n            <ButtonPanel\n                classes={classes}\n                currentStep={currentStep}\n                handleCurrentStep={generateKeys}\n                nextActive={nextActive}\n            />\n        </>\n    );\n};\n\nexport default injectIntl(generateKeysStep);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState, useEffect } from 'react';\nimport Tokens from 'AppComponents/Shared/AppsAndKeys/Tokens';\nimport Application from 'AppData/Application';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { injectIntl, defineMessages } from 'react-intl';\nimport Typography from '@material-ui/core/Typography';\nimport ButtonPanel from './ButtonPanel';\n\nconst useStyles = makeStyles((theme) => ({\n    tokenWrapper: {\n        paddingLeft: theme.spacing(3),\n        paddingRight: theme.spacing(7),\n    },\n    title: {\n        paddingLeft: theme.spacing(2),\n    },\n}));\n\nconst generateAccessTokenStep = (props) => {\n    const [keyType, setKeyType] = useState('PRODUCTION');\n    const [subscriptionScopes, setSubscriptionScopes] = useState([]);\n    const [notFound, setNotFound] = useState(false);\n\n    const [accessTokenRequest, setAccessTokenRequest] = useState({\n        timeout: 3600,\n        scopesSelected: [],\n        keyType: '',\n    });\n    const {\n        currentStep, createdApp, setCreatedToken, incrementStep, createdKeyType, intl,\n    } = props;\n\n    useEffect(() => {\n        const newRequest = { ...accessTokenRequest, keyType: createdKeyType };\n        setKeyType(createdKeyType);\n        setAccessTokenRequest(newRequest);\n    }, [createdKeyType]);\n\n    useEffect(() => {\n        Application.get(createdApp.value)\n            .then((application) => {\n                application.getKeys().then(() => {\n                    const subscriptionScopesList = application.subscriptionScopes\n                        .map((scope) => { return scope.key; });\n                    setSubscriptionScopes(subscriptionScopesList);\n                });\n            }).catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.error(error);\n                }\n                const { status } = error;\n                if (status === 404) {\n                    setNotFound(true);\n                }\n            });\n    }, []);\n\n    const generateAccessToken = () => {\n        Application.get(createdApp.value)\n            .then((application) => {\n                return application.generateToken(\n                    accessTokenRequest.keyType,\n                    accessTokenRequest.timeout,\n                    accessTokenRequest.scopesSelected,\n                );\n            })\n            .then((response) => {\n                console.log('token generated successfully ' + response);\n                setCreatedToken(response);\n                incrementStep();\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.error(error);\n                }\n                const { status } = error;\n                if (status === 404) {\n                    setNotFound(true);\n                }\n            });\n    };\n    const classes = useStyles();\n    const messages = defineMessages({\n        dataInfo: {\n            id: 'Apis.Details.Credentials.Wizard.GenerateAccessTokenStep',\n            defaultMessage: 'Generate Access Toke for {keyType} environment',\n        },\n    });\n\n    return (\n        <>\n            <div className={classes.tokenWrapper}>\n                <Typography variant='subtitle1' component='div' className={classes.title}>\n                    {intl.formatMessage(messages.dataInfo, { keyType })}\n                </Typography>\n                <Tokens\n                    updateAccessTokenRequest={setAccessTokenRequest}\n                    accessTokenRequest={accessTokenRequest}\n                    subscriptionScopes={subscriptionScopes}\n                />\n                <ButtonPanel\n                    classes={classes}\n                    currentStep={currentStep}\n                    handleCurrentStep={generateAccessToken}\n                />\n            </div>\n        </>\n    );\n};\n\nexport default injectIntl(generateAccessTokenStep);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useContext } from 'react';\nimport ViewToken from 'AppComponents/Shared/AppsAndKeys/ViewToken';\nimport { ApiContext } from 'AppComponents/Apis/Details/ApiContext';\nimport { Box } from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid';\nimport { useHistory } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ButtonPanel from './ButtonPanel';\n\nconst useStyles = makeStyles((theme) => ({\n    tokenWrapper: {\n        paddingLeft: theme.spacing(2),\n    },\n}));\n\nconst copyAccessTokenStep = (props) => {\n    const {\n        currentStep, createdToken, handleReset, handleRedirectTest,\n    } = props;\n    const history = useHistory();\n    const { api, updateSubscriptionData } = useContext(ApiContext);\n    const completeStep = () => {\n        updateSubscriptionData(history.push(`/apis/${api.id}/credentials`));\n    };\n    const classes = useStyles();\n\n    return (\n        <div className={classes.tokenWrapper}>\n            <Grid md={10}>\n                <Box my={1} mx={2}>\n                    <ViewToken token={{ ...createdToken, isOauth: true }} />\n                </Box>\n            </Grid>\n            <ButtonPanel\n                classes={classes}\n                currentStep={currentStep}\n                handleCurrentStep={completeStep}\n                handleReset={handleReset}\n            />\n        </div>\n    );\n};\n\nexport default copyAccessTokenStep;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport { Typography, Paper, Box } from '@material-ui/core';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { withStyles } from '@material-ui/core/styles';\nimport CreateAppStep from './CreateAppStep';\nimport SubscribeToAppStep from './SubscribeToAppStep';\nimport GenerateKeysStep from './GenerateKeysStep';\nimport GenerateAccessTokenStep from './GenerateAccessTokenStep';\nimport CopyAccessTokenStep from './CopyAccessTokenStep';\n\nconst styles = (theme) => ({\n    paper: {\n        marginLeft: theme.spacing(3),\n    },\n    titleSub: {\n        marginLeft: theme.spacing(3),\n        paddingTop: theme.spacing(2),\n        paddingBottom: theme.spacing(2),\n    },\n});\n\nconst stepComponents = [CreateAppStep, SubscribeToAppStep, GenerateKeysStep,\n    GenerateAccessTokenStep, CopyAccessTokenStep];\n\n/**\n * Class used for wizard\n */\nclass Wizard extends Component {\n    /**\n     * @param {*} props properties\n     */\n    constructor(props) {\n        super(props);\n        const { intl } = this.props;\n        this.steps = [\n            intl.formatMessage({\n                defaultMessage: 'Create application',\n                id: 'Apis.Details.Credentials.Wizard.Wizard.create',\n            }),\n            intl.formatMessage({\n                defaultMessage: 'Subscribe to new application',\n                id: 'Apis.Details.Credentials.Wizard.Wizard.subscribe.to.new.application',\n            }),\n            intl.formatMessage({\n                defaultMessage: 'Generate Keys',\n                id: 'Apis.Details.Credentials.Wizard.Wizard.generate.keys',\n            }),\n            intl.formatMessage({\n                defaultMessage: 'Generate Access Token',\n                id: 'Apis.Details.Credentials.Wizard.Wizard.generate.access.token',\n            }),\n            intl.formatMessage({\n                defaultMessage: 'Copy Access Token',\n                id: 'Apis.Details.Credentials.Wizard.Wizard.copy.access.token',\n            }),\n        ];\n        this.stepStatuses = {\n            PROCEED: 'PROCEED',\n            BLOCKED: 'BLOCKED',\n        };\n        this.state = {\n            currentStep: 0,\n            createdApp: null,\n            createdToken: null,\n            redirect: false,\n            createdKeyType: '',\n            stepStatus: 'PROCEED',\n        };\n    }\n\n    /**\n     * Used to set the status retured after executing each step. Used in workflow\n     * scenario to evaluate wheather we can proceed to next step\n     * @param {*} stepStatus status\n     */\n    setStepStatus = (stepStatus) => {\n        this.setState({ stepStatus });\n    }\n\n    /**\n     * Set the created app from step 1\n     * @param {*} createdApp app created\n     */\n    setCreatedApp = (createdApp) => {\n        this.setState({ createdApp });\n    }\n\n    /**\n     * Set the created token from step 4\n     * @param {*} createdToken token created\n     */\n    setCreatedToken = (createdToken) => {\n        this.setState({ createdToken });\n    }\n\n    /**\n     * Set the created keytype from step 3\n     * @param {*} createdKeyType token created\n     */\n    setCreatedKeyType = (createdKeyType) => {\n        this.setState({ createdKeyType });\n    }\n\n    /**\n     * Increment the current step or next step by 1\n     */\n    handleNext = () => {\n        this.setState(({ currentStep }) => {\n            return { currentStep: currentStep + 1 };\n        });\n    }\n\n    /**\n     * Rest the currentStep to 0 and bring wizard back to first step\n     * @memberof Wizard\n     */\n    handleReset = () => {\n        this.setState({\n            currentStep: 0,\n        });\n    };\n\n    /**\n     * @inheritdoc\n     */\n    render() {\n        const { classes } = this.props;\n        const { currentStep, stepStatus } = this.state;\n        const CurrentStepComponent = stepComponents[currentStep];\n        return (\n            <>\n                <Typography variant='h4' className={classes.titleSub}>\n                    <FormattedMessage\n                        id={'Apis.Details.Credentials.Credentials'\n                    + '.api.credentials.generate'}\n                        defaultMessage='Subscription &amp; Key Generation Wizard'\n                    />\n                </Typography>\n                <Paper elevation={0} className={classes.paper}>\n                    <Box py={1} mx='auto' display='flex' >\n                        <Grid item xs={12} md={12}>\n                            <Stepper activeStep={currentStep}>\n                                {this.steps.map((label) => {\n                                    return (\n                                        <Step key={label}>\n                                            <StepLabel>{label}</StepLabel>\n                                        </Step>\n                                    );\n                                })}\n                            </Stepper>\n                        </Grid>\n                    </Box>\n                    <Box py={1} mx='auto' display='block' >\n                        {stepStatus === this.stepStatuses.PROCEED && (\n                            <>\n                                <CurrentStepComponent\n                                    {...this.state}\n                                    incrementStep={this.handleNext}\n                                    setStepStatus={this.setStepStatus}\n                                    stepStatuses={this.stepStatuses}\n                                    classes={classes}\n                                    setCreatedApp={this.setCreatedApp}\n                                    setCreatedKeyType={this.setCreatedKeyType}\n                                    setCreatedToken={this.setCreatedToken}\n                                    handleReset={this.handleReset}\n                                />\n                            </>\n                        )}\n                    </Box>\n                    <Box py={1} mb={1} mx='auto' display='flex' >\n                        {stepStatus === this.stepStatuses.BLOCKED && (\n                            <Box pt={2} px={3} display='flex' >\n                                <Typography variant='h5'>\n                                    <FormattedMessage\n                                        id={'Apis.Details.Credentials.Wizard.Wizard.approval.request.'\n                                                + 'for.this.step.has'}\n                                        defaultMessage='A request to register this step has been sent.'\n                                    />\n                                </Typography>\n                            </Box>\n                        )}\n                    </Box>\n                </Paper>\n            </>\n        );\n    }\n}\n\nWizard.propTypes = {\n    classes: PropTypes.shape({\n        appBar: PropTypes.string,\n        toolbar: PropTypes.string,\n        subscribeTitle: PropTypes.string,\n        plainContent: PropTypes.string,\n        root: PropTypes.string,\n        instructions: PropTypes.string,\n        button: PropTypes.string,\n        wizardContent: PropTypes.string,\n    }).isRequired,\n    intl: PropTypes.func.isRequired,\n    throttlingPolicyList: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nexport default injectIntl(withStyles(styles)(Wizard));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n\nimport SwaggerClient from 'swagger-client';\nimport { Mutex } from 'async-mutex';\nimport Settings from 'Settings';\nimport queryString from 'query-string';\nimport AuthManager from 'AppData/AuthManager';\nimport Utils from 'AppData/Utils';\n\n/**\n * This class expose single swaggerClient instance created using the given swagger URL (Publisher, Store, ect ..)\n * it's highly unlikely to change the REST API Swagger definition (swagger.json) file on the fly,\n * Hence this singleton class help to preserve consecutive swagger client object creations saving redundant IO operations.\n */\nclass APIClient {\n    /**\n     * @param {String} host : Host of apis. Host for the swagger-client's spec property.\n     * @param {{}} args : Accept as an optional argument for APIClient constructor.Merge the given args with default args.\n     * @returns {APIClient|*|null}\n     */\n    constructor(host, args = {}) {\n        this.host = host || location.host;\n        this.environment = Utils.getCurrentEnvironment();\n        const authorizations = {\n            OAuth2Security: {\n                token: { access_token: AuthManager.getUser() ? AuthManager.getUser().getPartialToken() : '' },\n            },\n        };\n\n        SwaggerClient.http.withCredentials = true;\n        const promisedResolve = SwaggerClient.resolve({ url: 'https://' + Utils.getEnvironment().host + '/api/wso2/monetization/swagger.yaml', requestInterceptor: (request) => { request.headers.Accept = 'text/yaml'; } });\n        APIClient.spec = promisedResolve;\n        this._client = promisedResolve.then((resolved) => {\n            const argsv = Object.assign(\n                args,\n                {\n                    spec: this._fixSpec(resolved.spec),\n                    authorizations,\n                    requestInterceptor: this._getRequestInterceptor(),\n                    responseInterceptor: this._getResponseInterceptor(),\n                },\n            );\n            SwaggerClient.http.withCredentials = true;\n            return new SwaggerClient(argsv);\n        });\n        this._client.catch(AuthManager.unauthorizedErrorHandler);\n        this.mutex = new Mutex();\n    }\n\n    /**\n     * Expose the private _client property to public\n     * @returns {APIClient} an instance of APIClient class\n     */\n    get client() {\n        return this._client;\n    }\n\n    /**\n     * Get the ETag of a given resource key from the session storage\n     * @param key {string} key of resource.\n     * @returns {string} ETag value for the given key\n     */\n    static getETag(key) {\n        return sessionStorage.getItem('etag_' + key);\n    }\n\n    /**\n     * Add an ETag to a given resource key into the session storage\n     * @param key {string} key of resource.\n     * @param etag {string} etag value to be stored against the key\n     */\n    static addETag(key, etag) {\n        sessionStorage.setItem('etag_' + key, etag);\n    }\n\n    /**\n     * Get Scope for a particular resource path\n     *\n     * @param resourcePath resource path of the action\n     * @param resourceMethod resource method of the action\n     */\n    static getScopeForResource(resourcePath, resourceMethod) {\n        if (!APIClient.spec) {\n            SwaggerClient.http.withCredentials = true;\n            APIClient.spec = SwaggerClient.resolve({ url: Utils.getSwaggerURL() });\n        }\n        return APIClient.spec.then((resolved) => {\n            return resolved.spec.paths[resourcePath] && resolved.spec.paths[resourcePath][resourceMethod] && resolved.spec.paths[resourcePath][resourceMethod].security[0].OAuth2Security[0];\n        });\n    }\n\n    /**\n     * Temporary method to fix the hostname attribute Till following issues get fixed ~tmkb\n     * https://github.com/swagger-api/swagger-js/issues/1081\n     * https://github.com/swagger-api/swagger-js/issues/1045\n     * @param spec {JSON} : Json object of the specification\n     * @returns {JSON} : Fixed specification\n     * @private\n     */\n    _fixSpec(spec) {\n        spec.host = this.host;\n        spec.security = [{ OAuth2Security: ['apim:api_subscribe'] }];\n        return spec;\n    }\n\n    _getResponseInterceptor() {\n        return (data) => {\n            if (data.headers.etag) {\n                APIClient.addETag(data.url, data.headers.etag);\n            }\n\n            // If an unauthenticated response is received, we check whether the token is valid by introspecting it.\n            // If it is not valid, we need to clear the stored tokens (in cookies etc) in the browser by redirecting the\n            //   user to logout.\n            if (data.status === 401 && data.obj != null && data.obj.description === 'Unauthenticated request') {\n                const userData = AuthManager.getUserFromToken();\n                const existingUser = AuthManager.getUser(this.environment.label);\n                if (existingUser) {\n                    userData.then((user) => {\n                        if (user) {\n                            window.location = Settings.app.context + Utils.CONST.LOGOUT_CALLBACK;\n                        }\n                    }).catch((error) => {\n                        console.error('Error occurred while checking token status. Hence redirecting to login', error);\n                        window.location = Settings.app.context + Utils.CONST.LOGOUT_CALLBACK;\n                    });\n                } else {\n                    console.error('Attempted a call to a protected API without a proper access token');\n                }\n            }\n            return data;\n        };\n    }\n\n    /**\n     * Interceptor for each request\n     * @returns {Object}\n     * @memberof APIClient\n     */\n    _getRequestInterceptor() {\n        return (request) => {\n            const { location } = window;\n            if (location) {\n                const { tenant } = queryString.parse(location.search);\n                if (tenant) {\n                    request.headers['X-WSO2-Tenant'] = tenant;\n                }\n            }\n\n            const existingUser = AuthManager.getUser(this.environment.label);\n            if (!existingUser) {\n                console.log('User not found. Token refreshing failed.');\n                return request;\n            }\n            let existingToken = AuthManager.getUser(this.environment.label).getPartialToken();\n            const refToken = AuthManager.getUser(this.environment.label).getRefreshPartialToken();\n            if (existingToken) {\n                request.headers.authorization = 'Bearer ' + existingToken;\n                return request;\n            } else {\n                console.log('Access token is expired. Trying to refresh.');\n                if (!refToken) {\n                    console.log('Refresh token not found. Token refreshing failed.');\n                    return request;\n                }\n            }\n\n            const env = this.environment;\n            const promise = new Promise((resolve, reject) => {\n                this.mutex.acquire().then((release) => {\n                    existingToken = AuthManager.getUser(env.label).getPartialToken();\n                    if (existingToken) {\n                        request.headers.authorization = 'Bearer ' + existingToken;\n                        release();\n                        resolve(request);\n                    } else {\n                        AuthManager.refresh(env).then(res => res.json())\n                            .then(() => {\n                                request.headers.authorization = 'Bearer '\n                                    + AuthManager.getUser(env.label).getPartialToken();\n                                release();\n                                resolve(request);\n                            }).catch((error) => {\n                                console.error('Error:', error);\n                                release();\n                                reject();\n                            })\n                            .finally(() => {\n                                release();\n                            });\n                    }\n                });\n            });\n\n            if (APIClient.getETag(request.url)\n                && (request.method === 'PUT' || request.method === 'DELETE' || request.method === 'POST')) {\n                request.headers['If-Match'] = APIClient.getETag(request.url);\n            }\n            return promise;\n        };\n    }\n}\n\nAPIClient.spec = null;\n\nexport default APIClient;\n","/*\n * Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport Utils from 'AppData/Utils';\nimport APIClient from './MonetizationClient';\n\nclass APIClientFactory {\n    constructor() {\n        if (APIClientFactory._instance) {\n            return APIClientFactory._instance;\n        }\n\n        this._APIClientMap = new Map();\n        APIClientFactory._instance = this;\n    }\n\n    getAPIClient(environmentLabel) {\n        let api_Client = this._APIClientMap.get(environmentLabel);\n\n        if (api_Client) {\n            return api_Client;\n        }\n\n        api_Client = new APIClient(Utils.getEnvironment().host);\n        this._APIClientMap.set(environmentLabel, api_Client);\n        return api_Client;\n    }\n\n    destroyAPIClient(environmentLabel) {\n        this._APIClientMap.delete(environmentLabel);\n    }\n}\n\nAPIClientFactory._instance = null;\n\nexport default APIClientFactory;\n","/**\n * Copyright (c) 2019, WSO2 Inc. (http://wso2.com) All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport Utils from 'AppData/Utils';\nimport APIClientFactory from './MonetizationClientFactory';\n/**\n * This class contains tenant related api requests\n */\nclass Monetization {\n    /**\n     * @inheritdoc\n     */\n    constructor() {\n        this.client = new APIClientFactory().getAPIClient(Utils.getEnvironment().label).client;\n    }\n\n    completeCheckout = (sessionId, workflowReferenceId) => {\n        return this.client.then((client) => {\n            const requestContent = {\n                sessionId,\n                workflowReferenceId,\n            };\n            const payload = { body: requestContent };\n            return client.apis.Stripe.post_subscriptions_complete_checkout(payload);\n        });\n    };\n\n    getUpdateCardSession = (apiId) => {\n        return this.client.then((client) => {\n            const payload = {\n                apiId,\n            };\n            return client.apis.Stripe.post_stripe_setup_card_session__apiId_(payload);\n        });\n    };\n\n    completeUpdateCardSession = (sessionId) => {\n        return this.client.then((client) => {\n            const payload = {\n                body: { sessionId },\n            };\n            return client.apis.Stripe.post_stripe_update_stripe_card(payload);\n        });\n    };\n    getCardDetails = () => {\n        return this.client.then((client) => {\n            console.log(client.apis.Stripe);\n            return client.apis.Stripe.get_stripe_billing_details();\n        });\n    };\n}\n\nexport default Monetization;\n","import React, { useEffect, useContext } from 'react';\nimport queryString from 'query-string';\nimport { useHistory } from 'react-router-dom';\nimport { injectIntl } from 'react-intl';\nimport Progress from 'AppComponents/Shared/Progress';\nimport Alert from 'AppComponents/Shared/Alert';\nimport PropTypes from 'prop-types';\nimport { ApiContext } from 'AppComponents/Apis/Details/ApiContext';\nimport Monetization from '../data/Monetization';\n\nconst CheckoutSuccessPage = (props) => {\n    const { intl } = props;\n    const { updateSubscriptionData } = useContext(ApiContext);\n    const history = useHistory();\n    const { sessionId, workflowId } = queryString.parse(props.location.search);\n    useEffect(() => {\n        const monetization = new Monetization();\n        if (sessionId && workflowId) {\n            monetization.completeCheckout(sessionId, workflowId)\n                .then((response) => {\n                    console.log('Checkout Succesful');\n                    history.push('credentials?checkout=successful');\n                    if (updateSubscriptionData) {\n                        updateSubscriptionData();\n                    }\n                    Alert.info(intl.formatMessage({\n                        defaultMessage: 'Subscribed successfully',\n                        id: 'monetization.CustomComponent.CheckoutSucessPage.subscribed.successfully',\n                    }));\n                })\n                .catch((error) => {\n                    console.log('Error while completing checkout.');\n                    console.log(error);\n                    Alert.error(intl.formatMessage({\n                        defaultMessage: 'Failed to complete checkout process. Please retry',\n                        id: 'monetization.CustomComponent.CheckoutSucessPage.checkout.failed',\n                    }));\n                    history.push('credentials?checkout=failed');\n                });\n        } else {\n            console.log('Error while completing checkout. Session Id or workflow reference is empty');\n            Alert.error(intl.formatMessage({\n                defaultMessage: 'Failed to complete checkout process',\n                id: 'monetization.CustomComponent.CheckoutSucessPage.invalid.ids',\n            }));\n            history.push('credentials?checkout=failed');\n        }\n    }, []);\n    return (\n        <Progress />\n    );\n};\nCheckoutSuccessPage.propTypes = {\n    history: PropTypes.shape({\n        push: PropTypes.func.isRequired,\n    }).isRequired,\n    location: PropTypes.shape({\n        search: PropTypes.string,\n    }).isRequired,\n    intl: PropTypes.shape({\n        formatMessage: PropTypes.func.isRequired,\n    }).isRequired,\n};\nexport default injectIntl(CheckoutSuccessPage);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\n\n\n/**\n * Base component for all API create forms\n *\n * @param {Object} props title and children components are expected\n * @returns {React.Component} Base element\n */\nexport default function PaymentDetailsBase(props) {\n    const { title, children } = props;\n    return (\n        <Box mt={2}>\n            <Grid container spacing={3}>\n                {/*\n            Following two grids control the placement of whole create page\n            For centering the content better use `container` props, but instead used an empty grid item for flexibility\n             */}\n                <Grid item sm={12} md={12}>\n                    <Box mx={2}>\n                        <Grid container spacing={5}>\n                            <Grid item md={12}>\n                                {title}\n                            </Grid>\n                            <Grid item md={12}>\n                                <Paper elevation={1}>{children}</Paper>\n                            </Grid>\n                        </Grid>\n                    </Box>\n                </Grid>\n            </Grid>\n        </Box>\n\n    );\n}\nPaymentDetailsBase.propTypes = {\n    title: PropTypes.element.isRequired,\n    children: PropTypes.element.isRequired,\n};\n","import React, { useContext, useState, useEffect } from 'react';\nimport { ApiContext } from 'AppComponents/Apis/Details/ApiContext';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport Alert from 'AppComponents/Shared/Alert';\nimport Progress from 'AppComponents/Shared/Progress';\nimport queryString from 'query-string';\nimport Monetization from '../data/Monetization';\nimport PaymentDetailsBase from './PaymentDetailsBase';\n\nconst PaymentDetails = (props) => {\n    const { api } = useContext(ApiContext);\n    const [isRedirecting, setIsRedirecting] = useState(false);\n    const [loading, setLoading] = useState(true);\n    const [cardDetails, setCardDetails] = useState(null);\n    useEffect(() => {\n        const { sessionId } = queryString.parse(props.location.search);\n        const monetization = new Monetization();\n        const { intl } = props;\n        if (sessionId) {\n            monetization\n                .completeUpdateCardSession(sessionId)\n                .then((response) => {\n                    setLoading(false);\n                    Alert.info(intl.formatMessage({\n                        defaultMessage: 'Card details have been updated successfully',\n                        id: 'monetization.CustomComponent.PaymentDetails.card.updated.successfully',\n                    }));\n                    return monetization.getCardDetails();\n                })\n                .then((cardRes) => {\n                    setCardDetails(cardRes.obj);\n                })\n                .catch((error) => {\n                    console.log('Error while upating card.');\n                    console.log(error);\n                    Alert.error(intl.formatMessage({\n                        defaultMessage: 'Failed to update card details. Please try again.',\n                        id: 'monetization.CustomComponent.PaymentDetails.card.update.failed',\n                    }));\n                    setLoading(false);\n                });\n        } else {\n            monetization\n                .getCardDetails()\n                .then((response) => {\n                    setCardDetails(response.obj);\n                    setLoading(false);\n                })\n                .catch((error) => {\n                    console.log('Error while upating card.');\n                    console.log(error);\n                    const { status } = error;\n                    let message = 'Failed to fetch card details. Please try again.';\n                    if (status === 404) {\n                        message = 'No card details found';\n                    }\n                    Alert.error(intl.formatMessage({\n                        defaultMessage: message,\n                        id: 'monetization.CustomComponent.PaymentDetails.card.update.failed',\n                    }));\n                    setLoading(false);\n                });\n        }\n    }, []);\n\n    const redirectToUpdateCard = () => {\n        setIsRedirecting(true);\n        const monetization = new Monetization();\n        monetization.getUpdateCardSession(api.id)\n            .then((response) => {\n                const { sessionId, stripePublishableKey } = response.body;\n                const stripe = Stripe(stripePublishableKey);\n                const { error } = stripe.redirectToCheckout({\n                    sessionId,\n                });\n                if (error) {\n                    console.log('Error while creating redirect.');\n                    console.error(error);\n                    setIsRedirecting(false);\n                }\n            })\n            .catch((error) => {\n                console.log('Error while settiping update card session.');\n                console.log(error);\n                setIsRedirecting(false);\n            });\n    };\n    if (loading) {\n        return <Progress />;\n    }\n    console.log(cardDetails);\n    if (cardDetails) {\n        return (\n            <PaymentDetailsBase title={\n                <Typography variant='h5'>\n                    <FormattedMessage\n                        id='monetization.CustomComponent.PaymentDetails.payment.details'\n                        defaultMessage='Payment Details'\n                    />\n                </Typography>\n            }\n            >\n                <Box py={1} mb={1} display='block'>\n                    <Grid item xs={11} md={8}>\n                        <Box display='flex' mt={1} ml={5}>\n                            <Box display='block'>\n                                <Typography variant='subtitle2'>\n                                    <FormattedMessage\n                                        id='monetization.CustomComponent.PaymentDetails.card.brand'\n                                        defaultMessage='Card brand'\n                                    />\n                                </Typography>\n                                <Typography variant='body1' >\n                                    {cardDetails.brand}\n                                </Typography>\n                            </Box>\n                            <Box display='block' ml={3}>\n                                <Typography variant='subtitle2'>\n                                    <FormattedMessage\n                                        id='monetization.CustomComponent.PaymentDetails.last.4'\n                                        defaultMessage='last 4'\n                                    />\n                                </Typography>\n                                <Typography variant='body1' >\n                                    {cardDetails.last4}\n                                </Typography>\n                            </Box>\n                        </Box>\n                        <Box display='flex' ml={5} mt={1}>\n                            <Box display='block'>\n                                <Typography variant='subtitle2'>\n                                    <FormattedMessage\n                                        id='monetization.CustomComponent.PaymentDetails.last.4'\n                                        defaultMessage='Expiry Month'\n                                    />\n                                </Typography>\n                                <Typography variant='body1' >\n                                    {cardDetails.expMonth}\n                                </Typography>\n                            </Box>\n                            <Box display='block' ml={3}>\n                                <Typography variant='subtitle2'>\n                                    <FormattedMessage\n                                        id='monetization.CustomComponent.PaymentDetails.last.4'\n                                        defaultMessage='Expiry year'\n                                    />\n                                </Typography>\n                                <Typography variant='body1' >\n                                    {cardDetails.expYear}\n                                </Typography>\n                            </Box>\n                        </Box>\n                    </Grid>\n                    <Grid item xs={11} md={8}>\n                        <Box my={2} ml={5} display='flex'>\n                            <Button\n                                color='primary'\n                                variant='contained'\n                                size='small'\n                                icon='edit'\n                                disalbed={isRedirecting}\n                                onClick={redirectToUpdateCard}\n                            >\n                                <FormattedMessage\n                                    id='monetization.CustomComponent.PaymentDetails.update.card'\n                                    defaultMessage='update card'\n                                />\n                                {isRedirecting && <CircularProgress size={24} />}\n                            </Button>\n                        </Box>\n                    </Grid>\n                </Box>\n            </PaymentDetailsBase>);\n    } else {\n        return (\n            <PaymentDetailsBase title={\n                <Typography variant='h5'>\n                    <FormattedMessage\n                        id='monetization.CustomComponent.PaymentDetails.payment.details'\n                        defaultMessage='No payment details found'\n                    />\n                </Typography>\n            }\n            />\n        );\n    }\n};\n\nPaymentDetails.propTypes = {\n    history: PropTypes.shape({\n        push: PropTypes.func.isRequired,\n    }).isRequired,\n    location: PropTypes.shape({\n        search: PropTypes.string,\n    }).isRequired,\n    intl: PropTypes.shape({\n        formatMessage: PropTypes.func.isRequired,\n    }).isRequired,\n};\n\nexport default injectIntl(PaymentDetails);\n","/* eslint-disable react/jsx-props-no-spreading */\n/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { lazy, Suspense } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport {\n    Route, Switch, Redirect, Link, withRouter,\n} from 'react-router-dom';\nimport Typography from '@material-ui/core/Typography';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport Api from 'AppData/api';\nimport AuthManager from 'AppData/AuthManager';\nimport withSettings from 'AppComponents/Shared/withSettingsContext';\nimport Alert from 'AppComponents/Shared/Alert';\nimport classNames from 'classnames';\nimport { Helmet } from 'react-helmet';\nimport { app } from 'Settings';\nimport CustomIcon from '../../Shared/CustomIcon';\nimport LeftMenuItem from '../../Shared/LeftMenuItem';\nimport { ResourceNotFound } from '../../Base/Errors/index';\nimport InfoBar from './InfoBar';\nimport { ApiContext } from './ApiContext';\nimport Progress from '../../Shared/Progress';\nimport Wizard from './Credentials/Wizard/Wizard';\n// === Start @monetization custom addition ===\nimport CheckoutSuccessPage from '/Users/dushansilva/projects-wso2/wso2-monetization/monetization-ui-customizations/src/main/resources/devportal/override//CustomComponents/CheckoutSuccessPage';\nimport PaymentDetails from '/Users/dushansilva/projects-wso2/wso2-monetization/monetization-ui-customizations/src/main/resources/devportal/override//CustomComponents/PaymentDetails';\n// === End @monetization custom addition ===\n\nconst ApiConsole = lazy(() => import('./ApiConsole/ApiConsole' /* webpackChunkName: \"APIConsole\" */));\nconst GraphQLConsole = lazy(() => import('./GraphQLConsole/GraphQLConsole' /* webpackChunkName: \"GraphQLConsole\" */));\nconst Overview = lazy(() => import('./Overview' /* webpackChunkName: \"APIOverview\" */));\nconst Documents = lazy(() => import('./Documents/Documents' /* webpackChunkName: \"APIDocuments\" */));\nconst Credentials = lazy(() => import('./Credentials/Credentials' /* webpackChunkName: \"APICredentials\" */));\nconst Comments = lazy(() => import('./Comments/Comments' /* webpackChunkName: \"APIComments\" */));\nconst Sdk = lazy(() => import('./Sdk' /* webpackChunkName: \"APISdk\" */));\n\nconst LoadableSwitch = withRouter((props) => {\n    const { match, api } = props;\n    const apiUuid = match.params.api_uuid;\n    const path = '/apis/';\n    const { advertised } = api.advertiseInfo;\n    const redirectURL = path + apiUuid + '/overview';\n    const user = AuthManager.getUser();\n\n    let tryoutRoute;\n    if (api.type === 'GRAPHQL') {\n        tryoutRoute = <Route path='/apis/:apiUuid/test' component={GraphQLConsole} />\n    }else {\n        tryoutRoute = <Route path='/apis/:apiUuid/test' component={ApiConsole} />\n    }\n\n    return (\n        <Suspense fallback={<Progress />}>\n            <Switch>\n                <Redirect exact from={`/apis/${apiUuid}`} to={redirectURL} />\n                <Route path='/apis/:apiUuid/overview' render={() => <Overview {...props} />} />\n                <Route path='/apis/:apiUuid/documents' component={Documents} />\n                {/* // === Start @monetization custom addition === */}\n                {user && <Route exact path='/apis/:apiUuid/checkout-success' component={CheckoutSuccessPage} />}\n                {user && <Route exact path='/apis/:apiUuid/checkout-failed' component={CheckoutSuccessPage} />}\n                {user && <Route exact path='/apis/:apiUuid/payment-details' component={PaymentDetails} />}\n                {/* // === Start @monetization custom addition === */}\n                <Route exact path='/apis/:apiUuid/credentials/wizard' component={Wizard} />\n                {!advertised && <Route path='/apis/:apiUuid/comments' component={Comments} />}\n                {!advertised && <Route path='/apis/:apiUuid/credentials' component={Credentials} />}\n                {!advertised && tryoutRoute}\n                {!advertised && <Route path='/apis/:apiUuid/sdk' component={Sdk} />}\n                <Route component={ResourceNotFound} />\n            </Switch>\n        </Suspense>\n    );\n});\n\n/**\n *\n * @returns style object\n * @param {*} theme\n */\nconst styles = (theme) => {\n    const {\n        custom: {\n            leftMenu: { width, position },\n        },\n    } = theme;\n    const shiftToLeft = position === 'vertical-left' ? width : 0;\n    const shiftToRight = position === 'vertical-right' ? width : 0;\n    const leftMenuPaddingLeft = position === 'horizontal' ? theme.spacing(3) : 0;\n\n    return {\n        leftMenu: {\n            backgroundColor: theme.custom.leftMenu.background,\n            backgroundImage: `url(${app.context}${theme.custom.leftMenu.backgroundImage})`,\n            textAlign: 'left',\n            fontFamily: theme.typography.fontFamily,\n            position: 'absolute',\n            bottom: 0,\n            paddingLeft: leftMenuPaddingLeft,\n        },\n        leftMenuHorizontal: {\n            top: theme.custom.infoBar.height,\n            width: '100%',\n            overflowX: 'auto',\n            height: 60,\n            display: 'flex',\n            left: 0,\n        },\n        leftMenuVerticalLeft: {\n            width: theme.custom.leftMenu.width,\n            top: 0,\n            left: 0,\n            overflowY: 'auto',\n        },\n        leftMenuVerticalRight: {\n            width: theme.custom.leftMenu.width,\n            top: 0,\n            right: 0,\n            overflowY: 'auto',\n        },\n        leftLInkMain: {\n            borderRight: 'solid 1px ' + theme.custom.leftMenu.background,\n            cursor: 'pointer',\n            background: theme.custom.leftMenu.rootBackground,\n            color: theme.palette.getContrastText(theme.custom.leftMenu.rootBackground),\n            textDecoration: 'none',\n            alignItems: 'center',\n            justifyContent: 'center',\n            display: 'flex',\n            height: theme.custom.infoBar.height,\n            textDecoration: 'none',\n        },\n        leftLInkMainText: {\n            fontSize: 18,\n            color: theme.palette.grey[500],\n            textDecoration: 'none',\n            paddingLeft: theme.spacing(2),\n        },\n        detailsContent: {\n            display: 'flex',\n            flex: 1,\n        },\n        content: {\n            display: 'flex',\n            flex: 1,\n            flexDirection: 'column',\n            marginLeft: shiftToLeft,\n            marginRight: shiftToRight,\n            paddingBottom: theme.spacing(3),\n        },\n        contentLoader: {\n            paddingTop: theme.spacing(3),\n        },\n        contentLoaderRightMenu: {\n            paddingRight: theme.custom.leftMenu.width,\n        },\n    };\n};\n/**\n *\n *\n * @class Details\n * @extends {React.Component}\n */\nclass Details extends React.Component {\n    /**\n     *Creates an instance of Details.\n     * @param {*} props\n     * @memberof Details\n     */\n    constructor(props) {\n        super(props);\n        /**\n         *\n         *\n         * @memberof Details\n         */\n        this.updateSubscriptionData = (callback) => {\n            let existingSubscriptions = null;\n            let promisedApplications = null;\n\n            const restApi = new Api();\n\n            // const subscriptionClient = new Subscription();\n            const promisedAPI = restApi.getAPIById(this.api_uuid);\n\n            promisedAPI\n                .then((api) => {\n                    this.setState({ api: api.body });\n                })\n                .catch((error) => {\n                    const { status, response } = error;\n                    const { setTenantDomain, intl } = this.props;\n\n                    const message = intl.formatMessage({\n                        defaultMessage: 'Invalid tenant domain',\n                        id: 'Apis.Details.index.invalid.tenant.domain',\n                    });\n                    if (response && response.body.code === 901300) {\n                        setTenantDomain('INVALID');\n                        Alert.error(message);\n                    }\n                    console.error('Error when getting apis', error);\n                    if (status === 404) {\n                        this.setState({ notFound: true });\n                    }\n                });\n            const user = AuthManager.getUser();\n            if (user != null) {\n                existingSubscriptions = restApi.getSubscriptions(this.api_uuid, null);\n                promisedApplications = restApi.getAllApplications();\n\n                Promise.all([existingSubscriptions, promisedApplications])\n                    .then((response) => {\n                        const [subscriptions, applications] = response.map((data) => data.obj);\n                        const appIdToNameMapping = applications.list.reduce((acc, cur) => {\n                            acc[cur.applicationId] = cur.name;\n                            return acc;\n                        }, {});\n                        // get the application IDs of existing subscriptions\n                        const subscribedApplications = subscriptions.list.map((element) => {\n                            return {\n                                value: element.applicationId,\n                                policy: element.throttlingPolicy,\n                                status: element.status,\n                                subscriptionId: element.subscriptionId,\n                                label: appIdToNameMapping[element.applicationId],\n                            };\n                        });\n\n                        // Removing subscribed applications from all the applications and get\n                        // the available applications to subscribe\n                        const subscribedAppIds = subscribedApplications.map((sub) => sub.value);\n                        const applicationsAvailable = applications.list\n                            .filter((app) => !subscribedAppIds.includes(app.applicationId) && app.status === 'APPROVED')\n                            .map((filteredApp) => {\n                                return {\n                                    value: filteredApp.applicationId,\n                                    label: filteredApp.name,\n                                };\n                            });\n                        this.setState({ subscribedApplications, applicationsAvailable }, () => {\n                            if (callback) {\n                                callback();\n                            }\n                        });\n                    })\n                    .catch((error) => {\n                        if (process.env.NODE_ENV !== 'production') {\n                            console.log(error);\n                        }\n                        const { status } = error;\n                        if (status === 404) {\n                            this.setState({ notFound: true });\n                        }\n                    });\n            }\n        };\n\n        this.state = {\n            active: 'overview',\n            overviewHiden: false,\n            updateSubscriptionData: this.updateSubscriptionData,\n            api: null,\n            applications: null,\n            subscribedApplications: [],\n            applicationsAvailable: [],\n            item: 1,\n            xo: null,\n        };\n        this.setDetailsAPI = this.setDetailsAPI.bind(this);\n        this.api_uuid = this.props.match.params.api_uuid;\n    }\n\n    /**\n     *\n     *\n     * @memberof Details\n     */\n    componentDidMount() {\n        this.updateSubscriptionData();\n    }\n\n    /**\n     *\n     *\n     * @param {*} api\n     * @memberof Details\n     */\n    setDetailsAPI(api) {\n        this.setState({ api });\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof Details\n     */\n    render() {\n        const {\n            classes, theme, intl, match,\n        } = this.props;\n        const user = AuthManager.getUser();\n        const { apiUuid } = match.params;\n        const { api, notFound } = this.state;\n        const {\n            custom: {\n                leftMenu: {\n                    rootIconSize, rootIconTextVisible, rootIconVisible, position,\n                },\n                apiDetailPages: {\n                    showCredentials, showComments, showTryout, showDocuments, showSdks,\n                },\n                title: {\n                    prefix, sufix,\n                }\n            },\n        } = theme;\n        const globalStyle = 'body{ font-family: ' + theme.typography.fontFamily + '}';\n        const pathPrefix = '/apis/' + this.api_uuid + '/';\n        if (!api && notFound) {\n            return <ResourceNotFound />;\n        }\n\n        return api ? (\n            <ApiContext.Provider value={this.state}>\n                <Helmet>\n                    <title>{`${prefix} ${api.name}${sufix}`}</title>\n                </Helmet>\n                <style>{globalStyle}</style>\n                <div\n                    className={classNames(\n                        classes.leftMenu,\n                        {\n                            [classes.leftMenuHorizontal]: position === 'horizontal',\n                        },\n                        {\n                            [classes.leftMenuVerticalLeft]: position === 'vertical-left',\n                        },\n                        {\n                            [classes.leftMenuVerticalRight]: position === 'vertical-right',\n                        },\n                        'left-menu',\n                    )}\n                >\n                    {rootIconVisible && (\n                        <Link to='/apis' className={classes.leftLInkMain}>\n                            <CustomIcon width={rootIconSize} height={rootIconSize} icon='api' />\n                            {rootIconTextVisible && (\n                                <Typography className={classes.leftLInkMainText}>\n                                    <FormattedMessage id='Apis.Details.index.all.apis' defaultMessage='ALL APIs' />\n                                </Typography>\n                            )}\n                        </Link>\n                    )}\n                    <LeftMenuItem\n                        text={<FormattedMessage id='Apis.Details.index.overview' defaultMessage='Overview' />}\n                        route='overview'\n                        iconText='overview'\n                        to={pathPrefix + 'overview'}\n                    />\n                    {!api.advertiseInfo.advertised && (\n                        <>\n                            {user && showCredentials && (\n                                <>\n                                    <LeftMenuItem\n                                        text={\n                                            <FormattedMessage\n                                                id='Apis.Details.index.subscriptions'\n                                                defaultMessage='Subscriptions'\n                                            />\n                                        }\n                                        route='credentials'\n                                        iconText='credentials'\n                                        to={pathPrefix + 'credentials'}\n                                    />\n                                </>\n                            )}\n                            {api.type !== 'WS' && showTryout && (\n                                <LeftMenuItem\n                                    text={<FormattedMessage id='Apis.Details.index.try.out' defaultMessage='Try out' />}\n                                    route='test'\n                                    iconText='test'\n                                    to={pathPrefix + 'test'}\n                                />\n                            )}\n                            {showComments && (\n                                <LeftMenuItem\n                                    text={\n                                        <FormattedMessage id='Apis.Details.index.comments' defaultMessage='Comments' />\n                                    }\n                                    route='comments'\n                                    iconText='comments'\n                                    to={pathPrefix + 'comments'}\n                                />\n                            )}\n                        </>\n                    )}\n                    {showDocuments && (\n                        <LeftMenuItem\n                            text={<FormattedMessage id='Apis.Details.index.documentation' defaultMessage='Documentation' />}\n                            route='documents'\n                            iconText='docs'\n                            to={pathPrefix + 'documents'}\n                        />\n                    )}\n                    {!api.advertiseInfo.advertised && api.type !== 'WS' && showSdks && (\n                        <LeftMenuItem\n                            text={<FormattedMessage id='Apis.Details.index.sdk' defaultMessage='SDKs' />}\n                            route='sdk'\n                            iconText='sdk'\n                            to={pathPrefix + 'sdk'}\n                        />\n                    )}\n\n                    {/* // === Start @monetization custom addition === */\n                        user && api.monetization.enabled && (\n                            <LeftMenuItem\n                                text={<FormattedMessage\n                                    id='Apis.Details.index.payment.details'\n                                    defaultMessage='Payment Details'\n                                />}\n                                route='payment-details'\n                                iconText='settings'\n                                to={pathPrefix + 'payment-details'}\n                            />\n                            /* // === Start @monetization custom addition === */\n                        )}\n                </div>\n                <div className={classes.content}>\n                    <InfoBar apiId={apiUuid} innerRef={(node) => (this.infoBar = node)} intl={intl} {...this.props} />\n                    <div\n                        className={classNames(\n                            { [classes.contentLoader]: position === 'horizontal' },\n                            { [classes.contentLoaderRightMenu]: position === 'vertical-right' },\n                        )}\n                    >\n                        <LoadableSwitch api={api} updateSubscriptionData={this.updateSubscriptionData} />\n                    </div>\n                </div>\n            </ApiContext.Provider>\n        ) : (\n            <div className='apim-dual-ring' />\n        );\n    }\n}\n\nDetails.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    match: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({\n        formatMessage: PropTypes.func,\n    }).isRequired,\n};\n\nexport default withSettings(injectIntl(withStyles(styles, { withTheme: true })(Details)));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport { withStyles } from '@material-ui/core';\nimport CommonListing from './Listing/CommonListing';\nimport TagCloudListing from './Listing/TagCloudListing';\nimport Details from './Details/index';\nimport { ResourceNotFound } from '../Base/Errors';\n\n/**\n * Default API Store overview page\n *\n * @returns {React.Component}\n */\nfunction Apis() {\n    return (\n        <Switch>\n            <Route\n                exact\n                path='/api-groups'\n                render={(props) => (\n                    <TagCloudListing {...props} />)}\n            />\n            <Route\n                exact\n                path='/apis'\n                render={(props) => (\n                    <CommonListing {...props} />)}\n            />\n            <Route\n                path='/apis/search'\n                render={(props) => (\n                    <CommonListing {...props} />)}\n            />\n            <Route\n                path='/apis/:api_uuid/'\n                render={(props) => (\n                    <Details {...props} />)}\n            />\n            <Route component={ResourceNotFound} />\n        </Switch>\n    );\n}\n\nexport default withStyles({}, { withTheme: true })(Apis);\n"],"sourceRoot":""}