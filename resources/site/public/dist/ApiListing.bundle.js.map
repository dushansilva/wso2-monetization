{"version":3,"sources":["webpack:///./source/src/app/components/Shared/InlineMessage.jsx","webpack:///./source/src/app/components/Shared/ScopeValidation.jsx","webpack:///./node_modules/@material-ui/core/esm/internal/svg-icons/KeyboardArrowRight.js","webpack:///./node_modules/@material-ui/core/esm/internal/svg-icons/KeyboardArrowLeft.js","webpack:///./node_modules/@material-ui/core/esm/TableFooter/TableFooter.js","webpack:///./source/src/app/components/Shared/GenericDisplayDialog.jsx","webpack:///./source/src/app/components/Applications/Listing/DeleteConfirmation.jsx","webpack:///./node_modules/@material-ui/core/esm/internal/svg-icons/ArrowDownward.js","webpack:///./node_modules/@material-ui/core/esm/TableSortLabel/TableSortLabel.js","webpack:///./node_modules/@material-ui/core/esm/TablePagination/TablePaginationActions.js","webpack:///./node_modules/@material-ui/core/esm/TablePagination/TablePagination.js","webpack:///./source/src/app/components/Applications/Listing/AppsTableContent.jsx","webpack:///./source/src/app/components/Applications/Listing/ApplicationTableHead.jsx","webpack:///./source/src/app/components/Applications/Listing/Listing.jsx"],"names":["InlineMessage","React","Component","value","this","setState","state","expanded","render","classes","type","props","messgeType","className","root","elevation","iconItem","height","content","children","propTypes","PropTypes","shape","isRequired","string","withStyles","theme","display","alignItems","paddingLeft","spacing","borderRadius","border","fontSize","color","palette","primary","main","paddingRight","button","marginTop","marginBottom","paddingTop","paddingBottom","resourcePaths","APIS","SINGLE_API","API_SWAGGER","API_WSDL","API_GW_CONFIG","API_THUMBNAIL","API_COPY","API_LC_HISTORY","API_CHANGE_LC","API_LC","API_LC_PENDING_TASK","API_DEF","API_VALIDATE_DEF","API_DOCS","API_DOC","API_DOC_CONTENT","APPLICATIONS","SINGLE_APPLICATION","APPLICATION_GENERATE_KEYS","APPLICATION_GENERATE_KEY_TYPE","EXPORT_APIS","IMPORT_APIS","SUBSCRIPTION","SINGLE_SUBSCRIPTION","SUBSCRIPTIONS","BLOCK_SUBSCRIPTION","UNBLOCK_SUBSCRIPTION","POLICIES","POLICY","ENDPOINTS","ENDPOINT","LABLES","WORKFLOW","SERVICE_DISCOVERY","resourceMethods","POST","PUT","GET","DELETE","ScopeValidation","constructor","super","componentDidMount","resourcePath","resourceMethod","hasScope","AuthManager","hasScopes","then","haveScope","node","createElement","d","tablelvl2","variant","TableFooter","forwardRef","ref","_props$component","component","other","Provider","name","genericDisplayDialog","handleClick","heading","caption","buttonText","appContent","dialogContainer","onClick","DeleteConfirmation","handleAppDelete","isDeleteOpen","toggleDeleteConfirmation","open","transition","Slide","id","defaultMessage","dense","size","func","bool","createSvgIcon","_props$active","active","_props$direction","direction","_props$hideSortIcon","hideSortIcon","_props$IconComponent","IconComponent","ArrowDownward","ButtonBase","disableRipple","icon","concat","capitalize","cursor","justifyContent","flexDirection","text","secondary","opacity","marginRight","marginLeft","transitions","create","duration","shorter","userSelect","iconDirectionDesc","transform","iconDirectionAsc","_ref","KeyboardArrowRight","_ref2","KeyboardArrowLeft","_ref3","_ref4","backIconButtonProps","count","nextIconButtonProps","onChangePage","page","rowsPerPage","useTheme","IconButton","event","disabled","Math","ceil","defaultLabelDisplayedRows","from","to","defaultRowsPerPageOptions","colSpan","_props$ActionsCompone","ActionsComponent","_props$backIconButton","backIconButtonText","colSpanProp","TableCell","_props$labelDisplayed","labelDisplayedRows","_props$labelRowsPerPa","labelRowsPerPage","_props$nextIconButton","nextIconButtonText","onChangeRowsPerPage","_props$rowsPerPageOpt","rowsPerPageOptions","_props$SelectProps","SelectProps","MenuItemComponent","native","MenuItem","Toolbar","toolbar","spacer","length","Typography","Select","select","selectIcon","input","InputBase","selectRoot","onChange","map","rowsPerPageOption","menuItem","key","label","min","actions","title","typography","pxToRem","padding","minHeight","flex","flexShrink","textAlign","textAlignLast","top","StyledTableCell","head","backgroundColor","common","black","white","body","StyledTableRow","background","default","TableRow","AppsTableContent","notFound","APPLICATION_STATES","CREATED","APPROVED","REJECTED","apps","appsTableData","values","app","deleting","ResourceNotFound","TableBody","fullHeight","tableRow","applicationId","align","status","owner","throttlingPolicy","gutterBottom","subscriptionCount","Tooltip","Icon","aria-label","data-appid","CircularProgress","instanceOf","Map","borderLeft","borderRight","applicationTableHead","createSortHandler","property","onRequestSort","columnData","numeric","disablePadding","sorting","order","orderBy","TableHead","column","sortDirection","TableSortLabel","Listing","enabled","context","settings","applicationSharingEnabled","isApplicationSharingEnabled","Application","all","applications","pagination","total","list","set","data","totalApps","catch","error","console","log","window","location","appSettings","currentOrder","updateApps","target","history","push","currentTarget","getAttribute","deletingId","bind","isApplicationGroupSharingEnabled","intl","newData","get","message","formatMessage","deleteApp","ok","delete","Alert","info","Loading","strokeColorMain","getContrastText","custom","infoBar","paginationEnabled","Box","mainIconWrapper","CustomIcon","strokeColor","width","mainTitleWrapper","mainTitle","createLinkWrapper","Button","Fragment","pl","Grid","container","justify","item","xs","Paper","appTablePaper","Table","ApplicationTableHead","handleRequestSort","TablePagination","handleChangePage","handleChangeRowsPerPage","GenericDisplayDialog","handleClickOpen","Settings","injectIntl","card","minWidth","bullet","margin","pos","createAppWrapper","textDecoration","divider","createButton","alignSelf","titleWrapper","flexGrow","borderBottom","grey","A200","maxWidth","maxHeight","overflow","withTheme"],"mappings":"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","file":"ApiListing.bundle.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Icon from '@material-ui/core/Icon';\nimport VerticalDivider from './VerticalDivider';\n/**\n * Main style object\n *\n * @param {*} theme\n */\nconst styles = theme => ({\n    root: {\n        display: 'flex',\n        height: 100,\n        alignItems: 'center',\n        paddingLeft: theme.spacing(2),\n        borderRadius: theme.shape.borderRadius,\n        border: 'none',\n        '& span.material-icons': {\n            fontSize: 60,\n            color: theme.palette.primary.main,\n        }\n    },\n    iconItem: {\n        paddingRight: theme.spacing(2),\n        fontSize: 60,\n    },\n    button: {\n        marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(1),\n    },\n    content: {\n        paddingTop: theme.spacing(1),\n        paddingBottom: theme.spacing(1),\n    },\n});\n/**\n *  Renders a inline massage\n *\n * @class InlineMessage\n * @extends {React.Component}\n */\nclass InlineMessage extends React.Component {\n    state = {\n        value: 0,\n    };\n\n    handleExpandClick = () => {\n        this.setState(state => ({ expanded: !state.expanded }));\n    };\n\n    render() {\n        const { classes, type } = this.props;\n        const messgeType = type || 'info';\n        return (\n            <Paper className={classes.root} elevation={1}>\n                {messgeType === 'info' && <Icon className={classes.iconItem}>info</Icon>}\n                {messgeType === 'warn' && <Icon className={classes.iconItem}>warning</Icon>}\n                <VerticalDivider height={100} />\n                <div className={classes.content}>{this.props.children}</div>\n            </Paper>\n        );\n    }\n}\nInlineMessage.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    type: PropTypes.string.isRequired,\n};\n\nexport default withStyles(styles)(InlineMessage);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport AuthManager from '../../data/AuthManager';\n\nconst resourcePaths = {\n    APIS: '/apis',\n    SINGLE_API: '/apis/{apiId}',\n    API_SWAGGER: '/apis/{apiId}/swagger',\n    API_WSDL: '/apis/{apiId}/wsdl',\n    API_GW_CONFIG: '/apis/{apiId}/gateway-config',\n    API_THUMBNAIL: '/apis/{apiId}/thumbnail',\n    API_COPY: '/apis/copy-api',\n    API_LC_HISTORY: '/apis/{apiId}/lifecycle-history',\n    API_CHANGE_LC: '/apis/change-lifecycle',\n    API_LC: '/apis/{apiId}/lifecycle',\n    API_LC_PENDING_TASK: '/apis/{apiId}/lifecycle/lifecycle-pending-task',\n    API_DEF: '/apis/import-definition',\n    API_VALIDATE_DEF: '/apis/validate-definition',\n    API_DOCS: '/apis/{apiId}/documents',\n    API_DOC: \"'/apis/{apiId}/documents/{documentId}'\",\n    API_DOC_CONTENT: \"'/apis/{apiId}/documents/{documentId}/content'\",\n    APPLICATIONS: '/applications',\n    SINGLE_APPLICATION: '/applications/{applicationId}',\n    APPLICATION_GENERATE_KEYS: '/applications/{applicationId}/generate-keys',\n    APPLICATION_GENERATE_KEY_TYPE: '/applications/{applicationId}/keys/{keyType}',\n    EXPORT_APIS: '/export/apis',\n    IMPORT_APIS: '/import/apis',\n    SUBSCRIPTION: '/subscriptions',\n    SINGLE_SUBSCRIPTION: '/subscriptions/{subscriptionId}',\n    SUBSCRIPTIONS: '/subscriptions',\n    BLOCK_SUBSCRIPTION: '/subscriptions/block-subscription:',\n    UNBLOCK_SUBSCRIPTION: '/subscriptions/unblock-subscription',\n    POLICIES: \"'/policies/{tierLevel}'\",\n    POLICY: \"'/policies/{tierLevel}/{tierName}'\",\n    ENDPOINTS: '/endpoints',\n    ENDPOINT: '/endpoints/{endpointId}',\n    LABLES: '/labels',\n    WORKFLOW: '/workflows/{workflowReferenceId}',\n    SERVICE_DISCOVERY: '/external-resources/services',\n};\n\nconst resourceMethods = {\n    POST: 'post',\n    PUT: 'put',\n    GET: 'get',\n    DELETE: 'delete',\n};\n\n/**\n * Show element iff user has proper scope for the view/action\n * @class ScopeValidation\n * @extends {React.Component}\n */\nclass ScopeValidation extends React.Component {\n    /**\n     * Creates an instance of ScopeValidation.\n     * @param {any} props @inheritDoc\n     * @memberof ScopeValidation\n     */\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    /**\n     * @inheritDoc\n     * @memberof ScopeValidation\n     */\n    componentDidMount() {\n        const { resourcePath, resourceMethod } = this.props;\n        const hasScope = AuthManager.hasScopes(resourcePath, resourceMethod);\n        if (hasScope) {\n            hasScope.then((haveScope) => {\n                this.setState({ haveScope });\n            });\n        }\n    }\n\n    /**\n     * @inheritDoc\n     * @returns {React.Component} Return react component\n     * @memberof ScopeValidation\n     */\n    render() {\n        const { children } = this.props;\n        if (this.state.haveScope) {\n            return children || null;\n        }\n        return null;\n    }\n}\n\nScopeValidation.propTypes = {\n    children: PropTypes.node.isRequired,\n    resourcePath: PropTypes.string.isRequired,\n    resourceMethod: PropTypes.string.isRequired,\n};\n\nexport {\n    ScopeValidation,\n    resourceMethods,\n    resourcePaths,\n};\n","import React from 'react';\nimport createSvgIcon from './createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z\"\n}), 'KeyboardArrowRight');","import React from 'react';\nimport createSvgIcon from './createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M15.41 16.09l-4.58-4.59 4.58-4.59L14 5.5l-6 6 6 6z\"\n}), 'KeyboardArrowLeft');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'table-footer-group'\n  }\n};\nvar tablelvl2 = {\n  variant: 'footer'\n};\nvar TableFooter = React.forwardRef(function TableFooter(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'tfoot' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return React.createElement(Tablelvl2Context.Provider, {\n    value: tablelvl2\n  }, React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other)));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableFooter.propTypes = {\n  /**\n   * The content of the component, normally `TableRow`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTableFooter'\n})(TableFooter);","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport InlineMessage from 'AppComponents/Shared/InlineMessage';\nimport { Typography } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport { ScopeValidation, resourceMethods, resourcePaths } from 'AppComponents/Shared/ScopeValidation';\n\nconst genericDisplayDialog = (props) => {\n    const {\n        classes, handleClick, heading, caption, buttonText,\n    } = props;\n    return (\n        <div className={classes.appContent}>\n            <InlineMessage type='info' className={classes.dialogContainer}>\n                <Typography variant='h5' component='h3'>\n                    {heading}\n                </Typography>\n                <Typography component='p'>\n                    {caption}\n                </Typography>\n                <ScopeValidation resourcePath={resourcePaths.APPLICATIONS} resourceMethod={resourceMethods.POST}>\n                    <Button\n                        variant='contained'\n                        color='primary'\n                        className={classes.button}\n                        onClick={handleClick}\n                    >\n                        {buttonText}\n                    </Button>\n                </ScopeValidation>\n            </InlineMessage>\n        </div>\n    );\n};\n\nexport default genericDisplayDialog;\n","import React from 'react';\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core/';\nimport Slide from '@material-ui/core/Slide';\nimport { FormattedMessage } from 'react-intl';\nimport PropTypes from 'prop-types';\n\nconst DeleteConfirmation = (props) => {\n    const { handleAppDelete, isDeleteOpen, toggleDeleteConfirmation } = props;\n    return (\n        <Dialog open={isDeleteOpen} transition={Slide}>\n            <DialogTitle>\n                <FormattedMessage\n                    id='Applications.Listing.DeleteConfirmation.dialog.title'\n                    defaultMessage='Delete Application'\n                />\n            </DialogTitle>\n            <DialogContent>\n                <DialogContentText>\n                    <FormattedMessage\n                        id='Applications.Listing.DeleteConfirmation.dialog.text.description'\n                        defaultMessage='The application will be removed'\n                    />\n                </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n                <Button dense onClick={toggleDeleteConfirmation}>\n                    <FormattedMessage\n                        id='Applications.Listing.DeleteConfirmation.dialog.cancel'\n                        defaultMessage='Cancel'\n                    />\n                </Button>\n                <Button\n                    size='small'\n                    variant='outlined'\n                    color='primary'\n                    onClick={handleAppDelete}\n                >\n                    <FormattedMessage\n                        id='Applications.Listing.DeleteConfirmation.dialog,delete'\n                        defaultMessage='Delete'\n                    />\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n};\nDeleteConfirmation.propTypes = {\n    handleAppDelete: PropTypes.func.isRequired,\n    isDeleteOpen: PropTypes.bool.isRequired,\n    toggleDeleteConfirmation: PropTypes.func.isRequired,\n};\nexport default DeleteConfirmation;\n","import React from 'react';\nimport createSvgIcon from './createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z\"\n}), 'ArrowDownward');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport ArrowDownwardIcon from '../internal/svg-icons/ArrowDownward';\nimport withStyles from '../styles/withStyles';\nimport ButtonBase from '../ButtonBase';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      cursor: 'pointer',\n      display: 'inline-flex',\n      justifyContent: 'flex-start',\n      flexDirection: 'inherit',\n      alignItems: 'center',\n      '&:focus': {\n        color: theme.palette.text.secondary\n      },\n      '&:hover': {\n        color: theme.palette.text.secondary,\n        '& $icon': {\n          opacity: 1\n        }\n      },\n      '&$active': {\n        color: theme.palette.text.primary,\n        // && instead of & is a workaround for https://github.com/cssinjs/jss/issues/1045\n        '&& $icon': {\n          opacity: 1,\n          color: theme.palette.text.secondary\n        }\n      }\n    },\n\n    /* Pseudo-class applied to the root element if `active={true}`. */\n    active: {},\n\n    /* Styles applied to the icon component. */\n    icon: {\n      marginRight: 4,\n      marginLeft: 4,\n      opacity: 0,\n      transition: theme.transitions.create(['opacity', 'transform'], {\n        duration: theme.transitions.duration.shorter\n      }),\n      userSelect: 'none'\n    },\n\n    /* Styles applied to the icon component if `direction=\"desc\"`. */\n    iconDirectionDesc: {\n      transform: 'rotate(0deg)'\n    },\n\n    /* Styles applied to the icon component if `direction=\"asc\"`. */\n    iconDirectionAsc: {\n      transform: 'rotate(180deg)'\n    }\n  };\n};\n/**\n * A button based label for placing inside `TableCell` for column sorting.\n */\n\nvar TableSortLabel = React.forwardRef(function TableSortLabel(props, ref) {\n  var _props$active = props.active,\n      active = _props$active === void 0 ? false : _props$active,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$direction = props.direction,\n      direction = _props$direction === void 0 ? 'desc' : _props$direction,\n      _props$hideSortIcon = props.hideSortIcon,\n      hideSortIcon = _props$hideSortIcon === void 0 ? false : _props$hideSortIcon,\n      _props$IconComponent = props.IconComponent,\n      IconComponent = _props$IconComponent === void 0 ? ArrowDownwardIcon : _props$IconComponent,\n      other = _objectWithoutProperties(props, [\"active\", \"children\", \"classes\", \"className\", \"direction\", \"hideSortIcon\", \"IconComponent\"]);\n\n  return React.createElement(ButtonBase, _extends({\n    className: clsx(classes.root, className, active && classes.active),\n    component: \"span\",\n    disableRipple: true,\n    ref: ref\n  }, other), children, hideSortIcon && !active ? null : React.createElement(IconComponent, {\n    className: clsx(classes.icon, classes[\"iconDirection\".concat(capitalize(direction))])\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableSortLabel.propTypes = {\n  /**\n   * If `true`, the label will have the active styling (should be true for the sorted column).\n   */\n  active: PropTypes.bool,\n\n  /**\n   * Label contents, the arrow will be appended automatically.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The current sort direction.\n   */\n  direction: PropTypes.oneOf(['asc', 'desc']),\n\n  /**\n   * Hide sort icon when active is false.\n   */\n  hideSortIcon: PropTypes.bool,\n\n  /**\n   * Sort icon to use.\n   */\n  IconComponent: PropTypes.elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTableSortLabel'\n})(TableSortLabel);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport KeyboardArrowLeft from '../internal/svg-icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '../internal/svg-icons/KeyboardArrowRight';\nimport useTheme from '../styles/useTheme';\nimport IconButton from '../IconButton';\n/**\n * @ignore - internal component.\n */\n\nvar _ref = React.createElement(KeyboardArrowRight, null);\n\nvar _ref2 = React.createElement(KeyboardArrowLeft, null);\n\nvar _ref3 = React.createElement(KeyboardArrowLeft, null);\n\nvar _ref4 = React.createElement(KeyboardArrowRight, null);\n\nvar TablePaginationActions = React.forwardRef(function TablePaginationActions(props, ref) {\n  var backIconButtonProps = props.backIconButtonProps,\n      count = props.count,\n      nextIconButtonProps = props.nextIconButtonProps,\n      onChangePage = props.onChangePage,\n      page = props.page,\n      rowsPerPage = props.rowsPerPage,\n      other = _objectWithoutProperties(props, [\"backIconButtonProps\", \"count\", \"nextIconButtonProps\", \"onChangePage\", \"page\", \"rowsPerPage\"]);\n\n  var theme = useTheme();\n\n  var handleBackButtonClick = function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  };\n\n  var handleNextButtonClick = function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  };\n\n  return React.createElement(\"div\", _extends({\n    ref: ref\n  }, other), React.createElement(IconButton, _extends({\n    onClick: handleBackButtonClick,\n    disabled: page === 0,\n    color: \"inherit\"\n  }, backIconButtonProps), theme.direction === 'rtl' ? _ref : _ref2), React.createElement(IconButton, _extends({\n    onClick: handleNextButtonClick,\n    disabled: page >= Math.ceil(count / rowsPerPage) - 1,\n    color: \"inherit\"\n  }, nextIconButtonProps), theme.direction === 'rtl' ? _ref3 : _ref4));\n});\nprocess.env.NODE_ENV !== \"production\" ? TablePaginationActions.propTypes = {\n  /**\n   * Props applied to the back arrow [`IconButton`](/api/icon-button/) element.\n   */\n  backIconButtonProps: PropTypes.object,\n\n  /**\n   * The total number of rows.\n   */\n  count: PropTypes.number.isRequired,\n\n  /**\n   * Props applied to the next arrow [`IconButton`](/api/icon-button/) element.\n   */\n  nextIconButtonProps: PropTypes.object,\n\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {number} page The page selected.\n   */\n  onChangePage: PropTypes.func.isRequired,\n\n  /**\n   * The zero-based index of the current page.\n   */\n  page: PropTypes.number.isRequired,\n\n  /**\n   * The number of rows per page.\n   */\n  rowsPerPage: PropTypes.number.isRequired\n} : void 0;\nexport default TablePaginationActions;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { chainPropTypes } from '@material-ui/utils';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport InputBase from '../InputBase';\nimport MenuItem from '../MenuItem';\nimport Select from '../Select';\nimport TableCell from '../TableCell';\nimport Toolbar from '../Toolbar';\nimport Typography from '../Typography';\nimport TablePaginationActions from './TablePaginationActions';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.primary,\n      fontSize: theme.typography.pxToRem(14),\n      // Increase the specificity to override TableCell.\n      '&:last-child': {\n        padding: 0\n      }\n    },\n\n    /* Styles applied to the Toolbar component. */\n    toolbar: {\n      minHeight: 52,\n      paddingRight: 2\n    },\n\n    /* Styles applied to the spacer element. */\n    spacer: {\n      flex: '1 1 100%'\n    },\n\n    /* Styles applied to the caption Typography components if `variant=\"caption\"`. */\n    caption: {\n      flexShrink: 0\n    },\n\n    /* Styles applied to the Select component root element. */\n    selectRoot: {\n      // `.selectRoot` should be merged with `.input` in v5.\n      marginRight: 32,\n      marginLeft: 8\n    },\n\n    /* Styles applied to the Select component `select` class. */\n    select: {\n      paddingLeft: 8,\n      paddingRight: 24,\n      textAlign: 'right',\n      textAlignLast: 'right' // Align <select> on Chrome.\n\n    },\n\n    /* Styles applied to the Select component `icon` class. */\n    selectIcon: {\n      top: 1\n    },\n\n    /* Styles applied to the `InputBase` component. */\n    input: {\n      color: 'inherit',\n      fontSize: 'inherit',\n      flexShrink: 0\n    },\n\n    /* Styles applied to the MenuItem component. */\n    menuItem: {},\n\n    /* Styles applied to the internal `TablePaginationActions` component. */\n    actions: {\n      flexShrink: 0,\n      marginLeft: 20\n    }\n  };\n};\n\nvar defaultLabelDisplayedRows = function defaultLabelDisplayedRows(_ref) {\n  var from = _ref.from,\n      to = _ref.to,\n      count = _ref.count;\n  return \"\".concat(from, \"-\").concat(to === -1 ? count : to, \" of \").concat(count);\n};\n\nvar defaultRowsPerPageOptions = [10, 25, 50, 100];\n/**\n * A `TableCell` based component for placing inside `TableFooter` for pagination.\n */\n\nvar TablePagination = React.forwardRef(function TablePagination(props, ref) {\n  var _props$ActionsCompone = props.ActionsComponent,\n      ActionsComponent = _props$ActionsCompone === void 0 ? TablePaginationActions : _props$ActionsCompone,\n      backIconButtonProps = props.backIconButtonProps,\n      _props$backIconButton = props.backIconButtonText,\n      backIconButtonText = _props$backIconButton === void 0 ? 'Previous page' : _props$backIconButton,\n      classes = props.classes,\n      className = props.className,\n      colSpanProp = props.colSpan,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? TableCell : _props$component,\n      count = props.count,\n      _props$labelDisplayed = props.labelDisplayedRows,\n      labelDisplayedRows = _props$labelDisplayed === void 0 ? defaultLabelDisplayedRows : _props$labelDisplayed,\n      _props$labelRowsPerPa = props.labelRowsPerPage,\n      labelRowsPerPage = _props$labelRowsPerPa === void 0 ? 'Rows per page:' : _props$labelRowsPerPa,\n      nextIconButtonProps = props.nextIconButtonProps,\n      _props$nextIconButton = props.nextIconButtonText,\n      nextIconButtonText = _props$nextIconButton === void 0 ? 'Next page' : _props$nextIconButton,\n      onChangePage = props.onChangePage,\n      onChangeRowsPerPage = props.onChangeRowsPerPage,\n      page = props.page,\n      rowsPerPage = props.rowsPerPage,\n      _props$rowsPerPageOpt = props.rowsPerPageOptions,\n      rowsPerPageOptions = _props$rowsPerPageOpt === void 0 ? defaultRowsPerPageOptions : _props$rowsPerPageOpt,\n      _props$SelectProps = props.SelectProps,\n      SelectProps = _props$SelectProps === void 0 ? {} : _props$SelectProps,\n      other = _objectWithoutProperties(props, [\"ActionsComponent\", \"backIconButtonProps\", \"backIconButtonText\", \"classes\", \"className\", \"colSpan\", \"component\", \"count\", \"labelDisplayedRows\", \"labelRowsPerPage\", \"nextIconButtonProps\", \"nextIconButtonText\", \"onChangePage\", \"onChangeRowsPerPage\", \"page\", \"rowsPerPage\", \"rowsPerPageOptions\", \"SelectProps\"]);\n\n  var colSpan;\n\n  if (Component === TableCell || Component === 'td') {\n    colSpan = colSpanProp || 1000; // col-span over everything\n  }\n\n  var MenuItemComponent = SelectProps.native ? 'option' : MenuItem;\n  return React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    colSpan: colSpan,\n    ref: ref\n  }, other), React.createElement(Toolbar, {\n    className: classes.toolbar\n  }, React.createElement(\"div\", {\n    className: classes.spacer\n  }), rowsPerPageOptions.length > 1 && React.createElement(Typography, {\n    color: \"inherit\",\n    variant: \"body2\",\n    className: classes.caption\n  }, labelRowsPerPage), rowsPerPageOptions.length > 1 && React.createElement(Select, _extends({\n    classes: {\n      select: classes.select,\n      icon: classes.selectIcon\n    },\n    input: React.createElement(InputBase, {\n      className: clsx(classes.input, classes.selectRoot)\n    }),\n    value: rowsPerPage,\n    onChange: onChangeRowsPerPage\n  }, SelectProps), rowsPerPageOptions.map(function (rowsPerPageOption) {\n    return React.createElement(MenuItemComponent, {\n      className: classes.menuItem,\n      key: rowsPerPageOption,\n      value: rowsPerPageOption.value ? rowsPerPageOption.value : rowsPerPageOption\n    }, rowsPerPageOption.label ? rowsPerPageOption.label : rowsPerPageOption);\n  })), React.createElement(Typography, {\n    color: \"inherit\",\n    variant: \"body2\",\n    className: classes.caption\n  }, labelDisplayedRows({\n    from: count === 0 ? 0 : page * rowsPerPage + 1,\n    to: Math.min(count, (page + 1) * rowsPerPage),\n    count: count,\n    page: page\n  })), React.createElement(ActionsComponent, {\n    className: classes.actions,\n    backIconButtonProps: _extends({\n      title: backIconButtonText,\n      'aria-label': backIconButtonText\n    }, backIconButtonProps),\n    count: count,\n    nextIconButtonProps: _extends({\n      title: nextIconButtonText,\n      'aria-label': nextIconButtonText\n    }, nextIconButtonProps),\n    onChangePage: onChangePage,\n    page: page,\n    rowsPerPage: rowsPerPage\n  })));\n});\nprocess.env.NODE_ENV !== \"production\" ? TablePagination.propTypes = {\n  /**\n   * The component used for displaying the actions.\n   * Either a string to use a DOM element or a component.\n   */\n  ActionsComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the back arrow [`IconButton`](/api/icon-button/) component.\n   */\n  backIconButtonProps: PropTypes.object,\n\n  /**\n   * Text label for the back arrow icon button.\n   */\n  backIconButtonText: PropTypes.string,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  colSpan: PropTypes.number,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The total number of rows.\n   */\n  count: PropTypes.number.isRequired,\n\n  /**\n   * Customize the displayed rows label.\n   */\n  labelDisplayedRows: PropTypes.func,\n\n  /**\n   * Customize the rows per page label. Invoked with a `{ from, to, count, page }`\n   * object.\n   */\n  labelRowsPerPage: PropTypes.node,\n\n  /**\n   * Props applied to the next arrow [`IconButton`](/api/icon-button/) element.\n   */\n  nextIconButtonProps: PropTypes.object,\n\n  /**\n   * Text label for the next arrow icon button.\n   */\n  nextIconButtonText: PropTypes.string,\n\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {number} page The page selected.\n   */\n  onChangePage: PropTypes.func.isRequired,\n\n  /**\n   * Callback fired when the number of rows per page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onChangeRowsPerPage: PropTypes.func,\n\n  /**\n   * The zero-based index of the current page.\n   */\n  page: chainPropTypes(PropTypes.number.isRequired, function (props) {\n    var count = props.count,\n        page = props.page,\n        rowsPerPage = props.rowsPerPage;\n    var newLastPage = Math.max(0, Math.ceil(count / rowsPerPage) - 1);\n\n    if (page < 0 || page > newLastPage) {\n      return new Error('Material-UI: the page prop of a TablePagination is out of range ' + \"(0 to \".concat(newLastPage, \", but page is \").concat(page, \").\"));\n    }\n\n    return null;\n  }),\n\n  /**\n   * The number of rows per page.\n   */\n  rowsPerPage: PropTypes.number.isRequired,\n\n  /**\n   * Customizes the options of the rows per page select field. If less than two options are\n   * available, no select field will be displayed.\n   */\n  rowsPerPageOptions: PropTypes.array,\n\n  /**\n   * Props applied to the rows per page [`Select`](/api/select/) element.\n   */\n  SelectProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTablePagination'\n})(TablePagination);","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport Typography from '@material-ui/core/Typography';\nimport Icon from '@material-ui/core/Icon';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { FormattedMessage } from 'react-intl';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport ResourceNotFound from 'AppComponents/Base/Errors/ResourceNotFound';\nimport { ScopeValidation, resourceMethods, resourcePaths } from 'AppComponents/Shared/ScopeValidation';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\n/**\n * @inheritdoc\n * @param {*} theme theme object\n */\nconst styles = theme => ({\n    fullHeight: {\n        height: '100%',\n    },\n    tableRow: {\n        height: theme.spacing(5),\n        borderLeft: 'solid 1px #fff',\n        borderRight: 'solid 1px #fff',\n    },\n});\nconst StyledTableCell = withStyles(theme => ({\n    head: {\n        backgroundColor: theme.palette.common.black,\n        color: theme.palette.common.white,\n    },\n    body: {\n        fontSize: 14,\n    },\n    root: {\n        padding: `0 0 0  ${theme.spacing(2)}px`,\n    },\n}))(TableCell);\n\nconst StyledTableRow = withStyles(theme => ({\n    root: {\n        '&:nth-of-type(odd)': {\n            backgroundColor: theme.palette.background.default,\n        },\n    },\n}))(TableRow);\n/**\n *\n *\n * @class AppsTableContent\n * @extends {Component}\n */\nclass AppsTableContent extends Component {\n    /**\n     * @inheritdoc\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            notFound: false,\n        };\n        this.APPLICATION_STATES = {\n            CREATED: 'CREATED',\n            APPROVED: 'APPROVED',\n            REJECTED: 'REJECTED',\n        };\n    }\n\n    /**\n     * @inheritdoc\n     * @memberof AppsTableContent\n     */\n    render() {\n        const {\n            apps, toggleDeleteConfirmation, classes, rowsPerPage,\n        } = this.props;\n        const { notFound } = this.state;\n        let appsTableData = [];\n\n        if (apps) {\n            appsTableData = [...apps.values()].map((app) => {\n                app.deleting = false;\n                return app;\n            });\n        }\n        if (notFound) {\n            return <ResourceNotFound />;\n        }\n        return (\n            <TableBody className={classes.fullHeight}>\n                {appsTableData\n                    .map((app) => {\n                        return (\n                            <StyledTableRow className={classes.tableRow} key={app.applicationId}>\n                                <StyledTableCell align='left'>\n                                    {app.status === this.APPLICATION_STATES.APPROVED ? (\n                                        <Link to={'/applications/' + app.applicationId}>{app.name}</Link>\n                                    ) : (\n                                        app.name\n                                    )}\n                                </StyledTableCell>\n                                <StyledTableCell align='left'>{app.owner}</StyledTableCell>\n                                <StyledTableCell align='left'>{app.throttlingPolicy}</StyledTableCell>\n                                <StyledTableCell align='left'>\n                                    {app.status === this.APPLICATION_STATES.APPROVED && (\n                                        <Typography variant='subtitle1' gutterBottom>\n                                            <FormattedMessage\n                                                id='Applications.Listing.AppsTableContent.active'\n                                                defaultMessage='ACTIVE'\n                                            />\n                                        </Typography>\n                                    )}\n                                    {app.status === this.APPLICATION_STATES.CREATED && (\n                                        <>\n                                            <Typography variant='subtitle1' gutterBottom>\n                                                <FormattedMessage\n                                                    id='Applications.Listing.AppsTableContent.inactive'\n                                                    defaultMessage='INACTIVE'\n                                                />\n\n                                            </Typography>\n                                            <Typography variant='caption'>\n                                                <FormattedMessage\n                                                    id='Applications.Listing.AppsTableContent.wait.approval'\n                                                    defaultMessage='waiting for approval'\n                                                />\n                                            </Typography>\n                                        </>\n                                    )}\n                                    {app.status === this.APPLICATION_STATES.REJECTED && (\n                                        <Typography variant='subtitle1' gutterBottom>\n                                            <FormattedMessage\n                                                id='Applications.Listing.AppsTableContent.rejected'\n                                                defaultMessage='REJECTED'\n                                            />\n                                        </Typography>\n                                    )}\n                                </StyledTableCell>\n                                <StyledTableCell align='left'>{app.subscriptionCount}</StyledTableCell>\n                                <StyledTableCell align='left'>\n                                    <ScopeValidation\n                                        resourcePath={resourcePaths.SINGLE_APPLICATION}\n                                        resourceMethod={resourceMethods.PUT}\n                                    >\n                                        {app.status === this.APPLICATION_STATES.APPROVED && (\n                                            <Tooltip title='Edit'>\n                                                <Link to={`/applications/${app.applicationId}/edit/`}>\n                                                    <IconButton>\n                                                        <Icon aria-label={(\n                                                            <FormattedMessage\n                                                                id='Applications.Listing.AppsTableContent.edit.btn'\n                                                                defaultMessage='Edit'\n                                                            />\n                                                        )}\n                                                        >\n                                                            edit\n                                                        </Icon>\n                                                    </IconButton>\n                                                </Link>\n                                            </Tooltip>\n                                        )}\n                                    </ScopeValidation>\n                                    <ScopeValidation\n                                        resourcePath={resourcePaths.SINGLE_APPLICATION}\n                                        resourceMethod={resourceMethods.DELETE}\n                                    >\n                                        <Tooltip title={(\n                                            <FormattedMessage\n                                                id='Applications.Listing.AppsTableContent.delete.tooltip'\n                                                defaultMessage='Delete'\n                                            />\n                                        )}\n                                        >\n                                            <IconButton\n                                                disabled={app.deleting}\n                                                data-appid={app.applicationId}\n                                                onClick={toggleDeleteConfirmation}\n                                                color='default'\n                                                aria-label={(\n                                                    <FormattedMessage\n                                                        id='Applications.Listing.AppsTableContent.delete.label'\n                                                        defaultMessage='Delete'\n                                                    />\n                                                )}\n                                            >\n                                                <Icon>delete</Icon>\n                                            </IconButton>\n                                        </Tooltip>\n                                    </ScopeValidation>\n                                    {app.deleting && <CircularProgress size={24} />}\n                                </StyledTableCell>\n                            </StyledTableRow>\n                        );\n                    })}\n            </TableBody>\n        );\n    }\n}\nAppsTableContent.propTypes = {\n    toggleDeleteConfirmation: PropTypes.func.isRequired,\n    apps: PropTypes.instanceOf(Map).isRequired,\n};\nexport default withStyles(styles)(AppsTableContent);\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport { FormattedMessage } from 'react-intl';\n\n/**\n * @inheritdoc\n * @class ApplicationTableHead\n * @extends {Component}\n */\nconst applicationTableHead = (props) => {\n    const createSortHandler = property => (event) => {\n        props.onRequestSort(event, property);\n    };\n    const columnData = [\n        {\n            id: 'name',\n            numeric: false,\n            disablePadding: true,\n            label: (<FormattedMessage\n                id='Applications.Listing.ApplicationTableHead.name'\n                defaultMessage='Name'\n            />),\n            sorting: true,\n        },\n        {\n            id: 'owner',\n            numeric: false,\n            disablePadding: false,\n            label: (<FormattedMessage\n                id='Applications.Listing.ApplicationTableHead.owner'\n                defaultMessage='Owner'\n            />),\n            sorting: true,\n        },\n        {\n            id: 'throttlingTier',\n            numeric: false,\n            disablePadding: false,\n            label: (<FormattedMessage\n                id='Applications.Listing.ApplicationTableHead.policy'\n                defaultMessage='Policy'\n            />),\n            sorting: true,\n        },\n        {\n            id: 'workflowStatus',\n            numeric: false,\n            disablePadding: false,\n            label: (<FormattedMessage\n                id='Applications.Listing.ApplicationTableHead.workflow.status'\n                defaultMessage='Workflow Status'\n            />),\n            sorting: true,\n        },\n        {\n            id: 'subscriptions',\n            numeric: false,\n            disablePadding: false,\n            label: (<FormattedMessage\n                id='Applications.Listing.ApplicationTableHead.subscriptions'\n                defaultMessage='Subscriptions'\n            />),\n            sorting: true,\n        },\n        {\n            id: 'actions',\n            numeric: false,\n            disablePadding: false,\n            label: (<FormattedMessage\n                id='Applications.Listing.ApplicationTableHead.actions'\n                defaultMessage='Actions'\n            />),\n            sorting: false,\n        },\n    ];\n    const { order, orderBy } = props;\n    return (\n        <TableHead>\n            <TableRow>\n                {columnData.map((column) => {\n                    return (\n                        <TableCell\n                            key={column.id}\n                            align='left'\n                            sortDirection={orderBy === column.id ? order : false}\n                        >\n                            {column.sorting ? (\n                                <TableSortLabel\n                                    active={orderBy === column.id}\n                                    direction={order}\n                                    onClick={createSortHandler(column.id)}\n                                >\n                                    {column.label}\n                                </TableSortLabel>\n                            ) : (\n                                column.label\n                            )}\n                        </TableCell>\n                    );\n                })}\n            </TableRow>\n        </TableHead>\n    );\n};\napplicationTableHead.propTypes = {\n    onRequestSort: PropTypes.func.isRequired,\n    order: PropTypes.string.isRequired,\n    orderBy: PropTypes.string.isRequired,\n};\nexport default applicationTableHead;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { Component } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TableRow from '@material-ui/core/TableRow';\nimport Box from '@material-ui/core/Box';\nimport CustomIcon from 'AppComponents/Shared/CustomIcon';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { Link } from 'react-router-dom';\nimport { ScopeValidation, resourceMethods, resourcePaths } from 'AppComponents/Shared/ScopeValidation';\nimport Alert from 'AppComponents/Shared/Alert';\nimport Loading from 'AppComponents/Base/Loading/Loading';\nimport Application from 'AppData/Application';\nimport GenericDisplayDialog from 'AppComponents/Shared/GenericDisplayDialog';\nimport Settings from 'AppComponents/Shared/SettingsContext';\nimport { appSettings } from 'Settings';\nimport AppsTableContent from './AppsTableContent';\nimport ApplicationTableHead from './ApplicationTableHead';\nimport DeleteConfirmation from './DeleteConfirmation';\n\n/**\n *\n * @inheritdoc\n * @param {*} theme theme object\n */\nconst styles = theme => ({\n    card: {\n        minWidth: 275,\n        paddingBottom: 20,\n    },\n    bullet: {\n        display: 'inline-block',\n        margin: '0 2px',\n        transform: 'scale(0.8)',\n    },\n    pos: {\n        marginBottom: 12,\n        color: theme.palette.text.secondary,\n    },\n    createAppWrapper: {\n        textDecoration: 'none',\n    },\n    divider: {\n        marginBottom: 20,\n    },\n    createButton: {\n        textDecoration: 'none',\n        display: 'inline-block',\n        marginLeft: 20,\n        alignSelf: 'flex-start',\n    },\n    titleWrapper: {\n        display: 'flex',\n    },\n    // New styles\n    // //////////////////////\n    content: {\n        flexGrow: 1,\n    },\n    root: {\n        height: 80,\n        background: theme.custom.infoBar.background,\n        color: theme.palette.getContrastText(theme.custom.infoBar.background),\n        borderBottom: `solid 1px ${theme.palette.grey.A200}`,\n        display: 'block',\n    },\n    mainIconWrapper: {\n        paddingTop: theme.spacing(1.5),\n        paddingLeft: theme.spacing(3),\n        paddingRight: theme.spacing(2.5),\n    },\n    mainTitleWrapper: {\n        display: 'flex',\n    },\n    createLinkWrapper: {\n        paddingLeft: theme.spacing(2),\n    },\n    appContent: {\n        marginTop: theme.spacing(2),\n        maxWidth: '95%',\n        margin: 'auto',\n        maxHeight: theme.spacing(90),\n        height: theme.spacing(90),\n        overflow: 'scroll',\n    },\n    dialogContainer: {\n        width: 1000,\n        padding: theme.spacing(2),\n    },\n    container: {\n        height: '100%',\n    },\n});\n\n/**\n * @inheritdoc\n * @class Listing\n * @extends {Component}\n */\nclass Listing extends Component {\n    static contextType = Settings;\n\n    /**\n     *\n     * @param {any} props properties\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            order: 'asc',\n            orderBy: 'name',\n            data: null,\n            page: 0,\n            rowsPerPage: 10,\n            open: false,\n            isApplicationSharingEnabled: true,\n            isDeleteOpen: false,\n            totalApps: 0,\n        };\n        this.handleAppDelete = this.handleAppDelete.bind(this);\n    }\n\n    /**\n     * @memberof Listing\n     */\n    componentDidMount() {\n        this.updateApps();\n        this.isApplicationGroupSharingEnabled();\n    }\n\n    /**\n     * retrieve Settings from the context and check the application sharing enabled\n     * @param {*} settingsData required data\n     */\n    isApplicationGroupSharingEnabled = () => {\n        const settingsContext = this.context;\n        const enabled = settingsContext.settings.applicationSharingEnabled;\n        this.setState({ isApplicationSharingEnabled: enabled });\n    }\n\n    /**\n     * @memberof Listing\n     */\n    updateApps = () => {\n        const {\n            page, rowsPerPage, order, orderBy,\n        } = this.state;\n        const promisedApplications = Application.all(rowsPerPage, page * rowsPerPage, order, orderBy);\n        promisedApplications\n            .then((applications) => {\n                const { pagination: { total } } = applications;\n                // Applications list put into map, to make it efficient when deleting apps (referring back to an App)\n                const apps = new Map();\n                applications.list.map(app => apps.set(app.applicationId, app)); // Store application against its UUID\n                this.setState({ data: apps, totalApps: total });\n            })\n            .catch((error) => {\n                console.log(error);\n                const { status } = error;\n                if (status === 404) {\n                    // eslint-disable-next-line react/no-unused-state\n                    this.setState({ notFound: true });\n                } else if (status === 401) {\n                    window.location = appSettings.context + '/services/configs';\n                }\n            });\n    }\n\n    /**\n     * @param{*} event event\n     * @param{*} property sorting method\n     */\n    handleRequestSort = (event, property) => {\n        const { orderBy, order } = this.state;\n        let currentOrder = 'desc';\n        if (orderBy === property) {\n            currentOrder = order === 'desc' ? 'asc' : 'desc';\n            this.setState({ order: currentOrder }, this.updateApps);\n        } else {\n            this.setState({ order: currentOrder, orderBy: property }, this.updateApps);\n        }\n    };\n\n    /**\n     *\n     * @param {*} event event\n     * @param {*} page page\n     * @memberof Listing\n     */\n    handleChangePage = (event, page) => {\n        this.setState({ page }, this.updateApps);\n    }\n\n    /**\n     *\n     * @inheritdoc\n     * @memberof Listing\n     */\n    handleChangeRowsPerPage = (event) => {\n        this.setState({ rowsPerPage: event.target.value }, this.updateApps);\n    };\n\n    /**\n     * @memberof Listing\n     */\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    /**\n     * @memberof Listing\n     */\n    handleClickOpen = () => {\n        const { history } = this.props;\n        history.push('/applications/create');\n    };\n\n    /**\n     * @param {*} event event\n     * @memberof Listing\n     */\n    handleAppDelete() {\n        const { data, deletingId } = this.state;\n        const { intl } = this.props;\n        const newData = new Map([...data]);\n        const app = newData.get(deletingId);\n        app.deleting = true;\n        this.setState({ data: newData });\n\n        let message = intl.formatMessage({\n            defaultMessage: 'Application {name} deleted successfully!',\n            id: 'Applications.Listing.Listing.application.deleted.successfully',\n        }, { name: app.name });\n        const promisedDelete = Application.deleteApp(deletingId);\n        promisedDelete.then((ok) => {\n            if (ok) {\n                newData.delete(deletingId);\n                Alert.info(message);\n                this.toggleDeleteConfirmation();\n                this.setState({ data: newData });\n            }\n        }).catch((error) => {\n            console.log(error);\n            message = intl.formatMessage({\n                defaultMessage: 'Error while deleting application {name}',\n                id: 'Applications.Listing.Listing.application.deleting.error',\n            }, { name: app.name });\n            Alert.error(message);\n        });\n    }\n\n    toggleDeleteConfirmation = (event) => {\n        let id = '';\n        if (event) {\n            id = event.currentTarget.getAttribute('data-appid');\n        }\n        this.setState(({ isDeleteOpen }) => ({ isDeleteOpen: !isDeleteOpen, deletingId: id }));\n    }\n\n    /**\n     * @inheritdoc\n     */\n    render() {\n        const {\n            data, order, orderBy, rowsPerPage, page, open, isApplicationSharingEnabled,\n            isDeleteOpen, totalApps,\n        } = this.state;\n        if (!data) {\n            return <Loading />;\n        }\n        const { classes, theme, intl } = this.props;\n        const strokeColorMain = theme.palette.getContrastText(theme.custom.infoBar.background);\n        const paginationEnabled = totalApps > rowsPerPage;\n        return (\n            <main className={classes.content}>\n                <div className={classes.root}>\n                    <Box display='flex' flexDirection='row' justifyContent='flex-start' alignItems='center'>\n                        <div className={classes.mainIconWrapper}>\n                            <CustomIcon strokeColor={strokeColorMain} width={42} height={42} icon='applications' />\n                        </div>\n                        <div className={classes.mainTitleWrapper}>\n                            <Typography variant='h4' className={classes.mainTitle}>\n                                <FormattedMessage\n                                    id='Applications.Listing.Listing.applications'\n                                    defaultMessage='Applications'\n                                />\n                            </Typography>\n                            {(data.size !== 0 || open) && (\n                                <div className={classes.createLinkWrapper}>\n                                    <ScopeValidation\n                                        resourcePath={resourcePaths.APPLICATIONS}\n                                        resourceMethod={resourceMethods.POST}\n                                    >\n                                        <Link to='/applications/create'>\n                                            <Button\n                                                variant='contained'\n                                                color='primary'\n                                            >\n                                                <FormattedMessage\n                                                    id='Applications.Create.Listing.add.new.application'\n                                                    defaultMessage='Add New Application'\n                                                />\n                                            </Button>\n                                        </Link>\n                                    </ScopeValidation>\n                                </div>\n                            )}\n                            {data && (\n                                <Typography variant='caption' gutterBottom align='left'>\n                                    {data.count === 0 && (\n                                        <React.Fragment>\n                                            <FormattedMessage\n                                                id='Applications.Listing.Listing.no.applications.created'\n                                                defaultMessage='No Applications created'\n                                            />\n                                        </React.Fragment>\n                                    )}\n                                </Typography>\n                            )}\n                        </div>\n                    </Box>\n                    <Box display='flex' pl={3}>\n                        <Typography variant='caption' gutterBottom align='left'>\n                            <FormattedMessage\n                                id='Applications.Listing.Listing.logical.description'\n                                defaultMessage={`An application is a logical collection of APIs. \n                                        Applications allow you to use a single access token to invoke a\n                                         collection of APIs and to subscribe to one API multiple times\n                                          and allows unlimited access by default.`}\n                            />\n                        </Typography>\n                    </Box>\n                </div>\n                <Grid container spacing={0} justify='center' className={classes.container}>\n                    <Grid item xs={12}>\n                        {data.size > 0 ? (\n                            <div className={classes.appContent}>\n                                <Paper className={classes.appTablePaper}>\n                                    <Table>\n                                        <ApplicationTableHead\n                                            order={order}\n                                            orderBy={orderBy}\n                                            onRequestSort={this.handleRequestSort}\n                                        />\n                                        <AppsTableContent\n                                            handleAppDelete={this.handleAppDelete}\n                                            apps={data}\n                                            page={page}\n                                            rowsPerPage={rowsPerPage}\n                                            order={order}\n                                            orderBy={orderBy}\n                                            isApplicationSharingEnabled={isApplicationSharingEnabled}\n                                            toggleDeleteConfirmation={this.toggleDeleteConfirmation}\n                                        />\n                                        {paginationEnabled\n                                            && (\n                                                <TableFooter>\n                                                    <TableRow>\n                                                        <TablePagination\n                                                            component='td'\n                                                            count={totalApps}\n                                                            rowsPerPage={rowsPerPage}\n                                                            rowsPerPageOptions={[5, 10, 15]}\n                                                            labelRowsPerPage='Show'\n                                                            page={page}\n                                                            backIconButtonProps={{\n                                                                'aria-label': 'Previous Page',\n                                                            }}\n                                                            nextIconButtonProps={{\n                                                                'aria-label': 'Next Page',\n                                                            }}\n                                                            onChangePage={this.handleChangePage}\n                                                            onChangeRowsPerPage={this.handleChangeRowsPerPage}\n                                                        />\n                                                    </TableRow>\n                                                </TableFooter>\n                                            )}\n                                    </Table>\n                                </Paper>\n                            </div>\n                        ) : (\n                                <GenericDisplayDialog\n                                    classes={classes}\n                                    handleClick={this.handleClickOpen}\n                                    heading='Create New Application'\n                                    caption={intl.formatMessage({\n                                        defaultMessage: `An application is a logical collection of APIs. Applications\n                                    allow you to use a single access token to invoke a collection\n                                    of APIs and to subscribe to one API multiple times with different\n                                    SLA levels. The DefaultApplication is pre-created and allows unlimited\n                                    access by default.`,\n                                        id: 'Applications.Listing.Listing.generic.display.description',\n                                    })}\n                                    buttonText={intl.formatMessage({\n                                        defaultMessage: 'ADD NEW APPLICATION',\n                                        id: 'Applications.Listing.Listing.generic.display.description.text',\n                                    })}\n                                />\n                            )}\n                        <DeleteConfirmation\n                            handleAppDelete={this.handleAppDelete}\n                            isDeleteOpen={isDeleteOpen}\n                            toggleDeleteConfirmation={this.toggleDeleteConfirmation}\n                        />\n                    </Grid>\n                </Grid>\n            </main>\n        );\n    }\n}\nListing.propTypes = {\n    classes: PropTypes.shape({\n        root: PropTypes.string,\n        flex: PropTypes.string,\n        content: PropTypes.string,\n        mainIconWrapper: PropTypes.string,\n        mainTitle: PropTypes.string,\n        mainTitleWrapper: PropTypes.string,\n        createLinkWrapper: PropTypes.string,\n        appContent: PropTypes.string,\n    }).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({}).isRequired,\n    history: PropTypes.shape({\n        push: PropTypes.func,\n    }).isRequired,\n};\n\nexport default injectIntl(withStyles(styles, { withTheme: true })(Listing));\n"],"sourceRoot":""}