// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<CommentEdit /> rendering renders correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <CommentEdit
    allComments={Array []}
    apiId="6e770272-212b-404e-ab9c-333fdba02f2f"
    cancelButton={true}
    classes={Object {}}
    comment={
      Object {
        "category": "General",
        "commentId": "ebf03093-74a3-4cd3-b5d0-a30d32a90f4b",
        "commentText": "My new comment updated",
        "createdBy": "admin",
        "createdTime": "2018-09-27T10:16:44.444Z",
        "lastUpdatedBy": "admin",
        "lastUpdatedTime": "2018-09-27T10:37:03.570Z",
        "parentCommentId": null,
        "username": "admin",
      }
    }
    commentsUpdate={[MockFunction]}
    theme={
      Object {
        "custom": Object {
          "maxCommentLength": 1300,
        },
      }
    }
    toggleShowEdit={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <WithStyles(FormControl)>
          <WithStyles(Select)
            onChange={[Function]}
            value="General"
          >
            <WithStyles(MenuItem)
              value="General"
            >
              General
            </WithStyles(MenuItem)>
            <WithStyles(MenuItem)
              value="Feature Request"
            >
              Feature Request
            </WithStyles(MenuItem)>
            <WithStyles(MenuItem)
              value="Bug Report"
            >
              Bug Report
            </WithStyles(MenuItem)>
          </WithStyles(Select)>
        </WithStyles(FormControl)>,
        <TextField
          autoFocus={true}
          id="multiline-static"
          inputProps={
            Object {
              "maxLength": 1300,
            }
          }
          margin="normal"
          multiline={true}
          onChange={[Function]}
          placeholder="Write a comment"
          required={false}
          select={false}
          value="My new comment updated"
        />,
        <WithStyles(Typography)
          align="right"
        >
          22/1300
        </WithStyles(Typography)>,
        <WithStyles(Grid)
          container={true}
          spacing={8}
        >
          <WithStyles(Grid)
            item={true}
          >
            <WithStyles(Button)
              color="primary"
              onClick={[Function]}
              variant="contained"
            >
              Save
            </WithStyles(Button)>
          </WithStyles(Grid)>
          <WithStyles(Grid)
            item={true}
          >
            <WithStyles(Button)
              onClick={[Function]}
            >
              Cancel
            </WithStyles(Button)>
          </WithStyles(Grid)>
        </WithStyles(Grid)>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <WithStyles(Select)
            onChange={[Function]}
            value="General"
          >
            <WithStyles(MenuItem)
              value="General"
            >
              General
            </WithStyles(MenuItem)>
            <WithStyles(MenuItem)
              value="Feature Request"
            >
              Feature Request
            </WithStyles(MenuItem)>
            <WithStyles(MenuItem)
              value="Bug Report"
            >
              Bug Report
            </WithStyles(MenuItem)>
          </WithStyles(Select)>,
          "className": undefined,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <WithStyles(MenuItem)
                value="General"
              >
                General
              </WithStyles(MenuItem)>,
              <WithStyles(MenuItem)
                value="Feature Request"
              >
                Feature Request
              </WithStyles(MenuItem)>,
              <WithStyles(MenuItem)
                value="Bug Report"
              >
                Bug Report
              </WithStyles(MenuItem)>,
            ],
            "onChange": [Function],
            "value": "General",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "General",
                "value": "General",
              },
              "ref": null,
              "rendered": "General",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Feature Request",
                "value": "Feature Request",
              },
              "ref": null,
              "rendered": "Feature Request",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Bug Report",
                "value": "Bug Report",
              },
              "ref": null,
              "rendered": "Bug Report",
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "autoFocus": true,
          "className": undefined,
          "id": "multiline-static",
          "inputProps": Object {
            "maxLength": 1300,
          },
          "margin": "normal",
          "multiline": true,
          "onChange": [Function],
          "placeholder": "Write a comment",
          "required": false,
          "select": false,
          "value": "My new comment updated",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "align": "right",
          "children": "22/1300",
          "className": undefined,
        },
        "ref": null,
        "rendered": "22/1300",
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <WithStyles(Grid)
              item={true}
            >
              <WithStyles(Button)
                color="primary"
                onClick={[Function]}
                variant="contained"
              >
                Save
              </WithStyles(Button)>
            </WithStyles(Grid)>,
            <WithStyles(Grid)
              item={true}
            >
              <WithStyles(Button)
                onClick={[Function]}
              >
                Cancel
              </WithStyles(Button)>
            </WithStyles(Grid)>,
          ],
          "container": true,
          "spacing": 8,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <WithStyles(Button)
                color="primary"
                onClick={[Function]}
                variant="contained"
              >
                Save
              </WithStyles(Button)>,
              "item": true,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Save",
                "color": "primary",
                "onClick": [Function],
                "variant": "contained",
              },
              "ref": null,
              "rendered": "Save",
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <WithStyles(Button)
                onClick={[Function]}
              >
                Cancel
              </WithStyles(Button)>,
              "item": true,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Cancel",
                "className": undefined,
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "Cancel",
              "type": [Function],
            },
            "type": [Function],
          },
        ],
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <WithStyles(FormControl)>
            <WithStyles(Select)
              onChange={[Function]}
              value="General"
            >
              <WithStyles(MenuItem)
                value="General"
              >
                General
              </WithStyles(MenuItem)>
              <WithStyles(MenuItem)
                value="Feature Request"
              >
                Feature Request
              </WithStyles(MenuItem)>
              <WithStyles(MenuItem)
                value="Bug Report"
              >
                Bug Report
              </WithStyles(MenuItem)>
            </WithStyles(Select)>
          </WithStyles(FormControl)>,
          <TextField
            autoFocus={true}
            id="multiline-static"
            inputProps={
              Object {
                "maxLength": 1300,
              }
            }
            margin="normal"
            multiline={true}
            onChange={[Function]}
            placeholder="Write a comment"
            required={false}
            select={false}
            value="My new comment updated"
          />,
          <WithStyles(Typography)
            align="right"
          >
            22/1300
          </WithStyles(Typography)>,
          <WithStyles(Grid)
            container={true}
            spacing={8}
          >
            <WithStyles(Grid)
              item={true}
            >
              <WithStyles(Button)
                color="primary"
                onClick={[Function]}
                variant="contained"
              >
                Save
              </WithStyles(Button)>
            </WithStyles(Grid)>
            <WithStyles(Grid)
              item={true}
            >
              <WithStyles(Button)
                onClick={[Function]}
              >
                Cancel
              </WithStyles(Button)>
            </WithStyles(Grid)>
          </WithStyles(Grid)>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <WithStyles(Select)
              onChange={[Function]}
              value="General"
            >
              <WithStyles(MenuItem)
                value="General"
              >
                General
              </WithStyles(MenuItem)>
              <WithStyles(MenuItem)
                value="Feature Request"
              >
                Feature Request
              </WithStyles(MenuItem)>
              <WithStyles(MenuItem)
                value="Bug Report"
              >
                Bug Report
              </WithStyles(MenuItem)>
            </WithStyles(Select)>,
            "className": undefined,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <WithStyles(MenuItem)
                  value="General"
                >
                  General
                </WithStyles(MenuItem)>,
                <WithStyles(MenuItem)
                  value="Feature Request"
                >
                  Feature Request
                </WithStyles(MenuItem)>,
                <WithStyles(MenuItem)
                  value="Bug Report"
                >
                  Bug Report
                </WithStyles(MenuItem)>,
              ],
              "onChange": [Function],
              "value": "General",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "General",
                  "value": "General",
                },
                "ref": null,
                "rendered": "General",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Feature Request",
                  "value": "Feature Request",
                },
                "ref": null,
                "rendered": "Feature Request",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Bug Report",
                  "value": "Bug Report",
                },
                "ref": null,
                "rendered": "Bug Report",
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "autoFocus": true,
            "className": undefined,
            "id": "multiline-static",
            "inputProps": Object {
              "maxLength": 1300,
            },
            "margin": "normal",
            "multiline": true,
            "onChange": [Function],
            "placeholder": "Write a comment",
            "required": false,
            "select": false,
            "value": "My new comment updated",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "align": "right",
            "children": "22/1300",
            "className": undefined,
          },
          "ref": null,
          "rendered": "22/1300",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <WithStyles(Grid)
                item={true}
              >
                <WithStyles(Button)
                  color="primary"
                  onClick={[Function]}
                  variant="contained"
                >
                  Save
                </WithStyles(Button)>
              </WithStyles(Grid)>,
              <WithStyles(Grid)
                item={true}
              >
                <WithStyles(Button)
                  onClick={[Function]}
                >
                  Cancel
                </WithStyles(Button)>
              </WithStyles(Grid)>,
            ],
            "container": true,
            "spacing": 8,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <WithStyles(Button)
                  color="primary"
                  onClick={[Function]}
                  variant="contained"
                >
                  Save
                </WithStyles(Button)>,
                "item": true,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Save",
                  "color": "primary",
                  "onClick": [Function],
                  "variant": "contained",
                },
                "ref": null,
                "rendered": "Save",
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <WithStyles(Button)
                  onClick={[Function]}
                >
                  Cancel
                </WithStyles(Button)>,
                "item": true,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Cancel",
                  "className": undefined,
                  "onClick": [Function],
                },
                "ref": null,
                "rendered": "Cancel",
                "type": [Function],
              },
              "type": [Function],
            },
          ],
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
