// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<CommentAdd /> rendering renders correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <CommentAdd
    allComments={Array []}
    apiId="6e770272-212b-404e-ab9c-333fdba02f2f"
    cancelButton={true}
    classes={Object {}}
    commentsUpdate={null}
    parentCommentId={null}
    theme={
      Object {
        "custom": Object {
          "maxCommentLength": 1300,
        },
      }
    }
    toggleShowReply={null}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <WithStyles(Grid)
        item={true}
        xs={true}
        zeroMinWidth={true}
      >
        <WithStyles(FormControl)>
          <WithStyles(Select)
            onChange={[Function]}
            value="General"
          >
            <WithStyles(MenuItem)
              value="General"
            >
              General
            </WithStyles(MenuItem)>
            <WithStyles(MenuItem)
              value="Feature Request"
            >
              Feature Request
            </WithStyles(MenuItem)>
            <WithStyles(MenuItem)
              value="Bug Report"
            >
              Bug Report
            </WithStyles(MenuItem)>
          </WithStyles(Select)>
        </WithStyles(FormControl)>
        <TextField
          autoFocus={true}
          id="standard-multiline-flexible"
          inputProps={
            Object {
              "maxLength": 1300,
            }
          }
          margin="normal"
          multiline={true}
          onChange={[Function]}
          placeholder="Write a comment"
          required={false}
          select={false}
          value=""
        />
        <WithStyles(Typography)
          align="right"
        >
          0/1300
        </WithStyles(Typography)>
        <WithStyles(Grid)
          container={true}
          spacing={8}
        >
          <WithStyles(Grid)
            item={true}
          >
            <WithStyles(Button)
              color="primary"
              onClick={[Function]}
              variant="contained"
            >
              Add Comment
            </WithStyles(Button)>
          </WithStyles(Grid)>
          <WithStyles(Grid)
            item={true}
          >
            <WithStyles(Button)
              onClick={[Function]}
            >
              Cancel
            </WithStyles(Button)>
          </WithStyles(Grid)>
        </WithStyles(Grid)>
      </WithStyles(Grid)>,
      "className": undefined,
      "container": true,
      "spacing": 24,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <WithStyles(FormControl)>
            <WithStyles(Select)
              onChange={[Function]}
              value="General"
            >
              <WithStyles(MenuItem)
                value="General"
              >
                General
              </WithStyles(MenuItem)>
              <WithStyles(MenuItem)
                value="Feature Request"
              >
                Feature Request
              </WithStyles(MenuItem)>
              <WithStyles(MenuItem)
                value="Bug Report"
              >
                Bug Report
              </WithStyles(MenuItem)>
            </WithStyles(Select)>
          </WithStyles(FormControl)>,
          <TextField
            autoFocus={true}
            id="standard-multiline-flexible"
            inputProps={
              Object {
                "maxLength": 1300,
              }
            }
            margin="normal"
            multiline={true}
            onChange={[Function]}
            placeholder="Write a comment"
            required={false}
            select={false}
            value=""
          />,
          <WithStyles(Typography)
            align="right"
          >
            0/1300
          </WithStyles(Typography)>,
          <WithStyles(Grid)
            container={true}
            spacing={8}
          >
            <WithStyles(Grid)
              item={true}
            >
              <WithStyles(Button)
                color="primary"
                onClick={[Function]}
                variant="contained"
              >
                Add Comment
              </WithStyles(Button)>
            </WithStyles(Grid)>
            <WithStyles(Grid)
              item={true}
            >
              <WithStyles(Button)
                onClick={[Function]}
              >
                Cancel
              </WithStyles(Button)>
            </WithStyles(Grid)>
          </WithStyles(Grid)>,
        ],
        "item": true,
        "xs": true,
        "zeroMinWidth": true,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <WithStyles(Select)
              onChange={[Function]}
              value="General"
            >
              <WithStyles(MenuItem)
                value="General"
              >
                General
              </WithStyles(MenuItem)>
              <WithStyles(MenuItem)
                value="Feature Request"
              >
                Feature Request
              </WithStyles(MenuItem)>
              <WithStyles(MenuItem)
                value="Bug Report"
              >
                Bug Report
              </WithStyles(MenuItem)>
            </WithStyles(Select)>,
            "className": undefined,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <WithStyles(MenuItem)
                  value="General"
                >
                  General
                </WithStyles(MenuItem)>,
                <WithStyles(MenuItem)
                  value="Feature Request"
                >
                  Feature Request
                </WithStyles(MenuItem)>,
                <WithStyles(MenuItem)
                  value="Bug Report"
                >
                  Bug Report
                </WithStyles(MenuItem)>,
              ],
              "onChange": [Function],
              "value": "General",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "General",
                  "value": "General",
                },
                "ref": null,
                "rendered": "General",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Feature Request",
                  "value": "Feature Request",
                },
                "ref": null,
                "rendered": "Feature Request",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Bug Report",
                  "value": "Bug Report",
                },
                "ref": null,
                "rendered": "Bug Report",
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "autoFocus": true,
            "className": undefined,
            "id": "standard-multiline-flexible",
            "inputProps": Object {
              "maxLength": 1300,
            },
            "margin": "normal",
            "multiline": true,
            "onChange": [Function],
            "placeholder": "Write a comment",
            "required": false,
            "select": false,
            "value": "",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "align": "right",
            "children": "0/1300",
            "className": undefined,
          },
          "ref": null,
          "rendered": "0/1300",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <WithStyles(Grid)
                item={true}
              >
                <WithStyles(Button)
                  color="primary"
                  onClick={[Function]}
                  variant="contained"
                >
                  Add Comment
                </WithStyles(Button)>
              </WithStyles(Grid)>,
              <WithStyles(Grid)
                item={true}
              >
                <WithStyles(Button)
                  onClick={[Function]}
                >
                  Cancel
                </WithStyles(Button)>
              </WithStyles(Grid)>,
            ],
            "container": true,
            "spacing": 8,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <WithStyles(Button)
                  color="primary"
                  onClick={[Function]}
                  variant="contained"
                >
                  Add Comment
                </WithStyles(Button)>,
                "item": true,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Add Comment",
                  "color": "primary",
                  "onClick": [Function],
                  "variant": "contained",
                },
                "ref": null,
                "rendered": "Add Comment",
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <WithStyles(Button)
                  onClick={[Function]}
                >
                  Cancel
                </WithStyles(Button)>,
                "item": true,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Cancel",
                  "className": undefined,
                  "onClick": [Function],
                },
                "ref": null,
                "rendered": "Cancel",
                "type": [Function],
              },
              "type": [Function],
            },
          ],
          "type": [Function],
        },
      ],
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <WithStyles(Grid)
          item={true}
          xs={true}
          zeroMinWidth={true}
        >
          <WithStyles(FormControl)>
            <WithStyles(Select)
              onChange={[Function]}
              value="General"
            >
              <WithStyles(MenuItem)
                value="General"
              >
                General
              </WithStyles(MenuItem)>
              <WithStyles(MenuItem)
                value="Feature Request"
              >
                Feature Request
              </WithStyles(MenuItem)>
              <WithStyles(MenuItem)
                value="Bug Report"
              >
                Bug Report
              </WithStyles(MenuItem)>
            </WithStyles(Select)>
          </WithStyles(FormControl)>
          <TextField
            autoFocus={true}
            id="standard-multiline-flexible"
            inputProps={
              Object {
                "maxLength": 1300,
              }
            }
            margin="normal"
            multiline={true}
            onChange={[Function]}
            placeholder="Write a comment"
            required={false}
            select={false}
            value=""
          />
          <WithStyles(Typography)
            align="right"
          >
            0/1300
          </WithStyles(Typography)>
          <WithStyles(Grid)
            container={true}
            spacing={8}
          >
            <WithStyles(Grid)
              item={true}
            >
              <WithStyles(Button)
                color="primary"
                onClick={[Function]}
                variant="contained"
              >
                Add Comment
              </WithStyles(Button)>
            </WithStyles(Grid)>
            <WithStyles(Grid)
              item={true}
            >
              <WithStyles(Button)
                onClick={[Function]}
              >
                Cancel
              </WithStyles(Button)>
            </WithStyles(Grid)>
          </WithStyles(Grid)>
        </WithStyles(Grid)>,
        "className": undefined,
        "container": true,
        "spacing": 24,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <WithStyles(FormControl)>
              <WithStyles(Select)
                onChange={[Function]}
                value="General"
              >
                <WithStyles(MenuItem)
                  value="General"
                >
                  General
                </WithStyles(MenuItem)>
                <WithStyles(MenuItem)
                  value="Feature Request"
                >
                  Feature Request
                </WithStyles(MenuItem)>
                <WithStyles(MenuItem)
                  value="Bug Report"
                >
                  Bug Report
                </WithStyles(MenuItem)>
              </WithStyles(Select)>
            </WithStyles(FormControl)>,
            <TextField
              autoFocus={true}
              id="standard-multiline-flexible"
              inputProps={
                Object {
                  "maxLength": 1300,
                }
              }
              margin="normal"
              multiline={true}
              onChange={[Function]}
              placeholder="Write a comment"
              required={false}
              select={false}
              value=""
            />,
            <WithStyles(Typography)
              align="right"
            >
              0/1300
            </WithStyles(Typography)>,
            <WithStyles(Grid)
              container={true}
              spacing={8}
            >
              <WithStyles(Grid)
                item={true}
              >
                <WithStyles(Button)
                  color="primary"
                  onClick={[Function]}
                  variant="contained"
                >
                  Add Comment
                </WithStyles(Button)>
              </WithStyles(Grid)>
              <WithStyles(Grid)
                item={true}
              >
                <WithStyles(Button)
                  onClick={[Function]}
                >
                  Cancel
                </WithStyles(Button)>
              </WithStyles(Grid)>
            </WithStyles(Grid)>,
          ],
          "item": true,
          "xs": true,
          "zeroMinWidth": true,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <WithStyles(Select)
                onChange={[Function]}
                value="General"
              >
                <WithStyles(MenuItem)
                  value="General"
                >
                  General
                </WithStyles(MenuItem)>
                <WithStyles(MenuItem)
                  value="Feature Request"
                >
                  Feature Request
                </WithStyles(MenuItem)>
                <WithStyles(MenuItem)
                  value="Bug Report"
                >
                  Bug Report
                </WithStyles(MenuItem)>
              </WithStyles(Select)>,
              "className": undefined,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <WithStyles(MenuItem)
                    value="General"
                  >
                    General
                  </WithStyles(MenuItem)>,
                  <WithStyles(MenuItem)
                    value="Feature Request"
                  >
                    Feature Request
                  </WithStyles(MenuItem)>,
                  <WithStyles(MenuItem)
                    value="Bug Report"
                  >
                    Bug Report
                  </WithStyles(MenuItem)>,
                ],
                "onChange": [Function],
                "value": "General",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "General",
                    "value": "General",
                  },
                  "ref": null,
                  "rendered": "General",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Feature Request",
                    "value": "Feature Request",
                  },
                  "ref": null,
                  "rendered": "Feature Request",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Bug Report",
                    "value": "Bug Report",
                  },
                  "ref": null,
                  "rendered": "Bug Report",
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "autoFocus": true,
              "className": undefined,
              "id": "standard-multiline-flexible",
              "inputProps": Object {
                "maxLength": 1300,
              },
              "margin": "normal",
              "multiline": true,
              "onChange": [Function],
              "placeholder": "Write a comment",
              "required": false,
              "select": false,
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "align": "right",
              "children": "0/1300",
              "className": undefined,
            },
            "ref": null,
            "rendered": "0/1300",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <WithStyles(Grid)
                  item={true}
                >
                  <WithStyles(Button)
                    color="primary"
                    onClick={[Function]}
                    variant="contained"
                  >
                    Add Comment
                  </WithStyles(Button)>
                </WithStyles(Grid)>,
                <WithStyles(Grid)
                  item={true}
                >
                  <WithStyles(Button)
                    onClick={[Function]}
                  >
                    Cancel
                  </WithStyles(Button)>
                </WithStyles(Grid)>,
              ],
              "container": true,
              "spacing": 8,
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <WithStyles(Button)
                    color="primary"
                    onClick={[Function]}
                    variant="contained"
                  >
                    Add Comment
                  </WithStyles(Button)>,
                  "item": true,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Add Comment",
                    "color": "primary",
                    "onClick": [Function],
                    "variant": "contained",
                  },
                  "ref": null,
                  "rendered": "Add Comment",
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <WithStyles(Button)
                    onClick={[Function]}
                  >
                    Cancel
                  </WithStyles(Button)>,
                  "item": true,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Cancel",
                    "className": undefined,
                    "onClick": [Function],
                  },
                  "ref": null,
                  "rendered": "Cancel",
                  "type": [Function],
                },
                "type": [Function],
              },
            ],
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
